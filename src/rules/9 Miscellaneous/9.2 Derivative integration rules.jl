int_rules_9_2 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 9.2*Derivative*integration*rules =#
    @apply_utils Antiderivative(((Derivative(~n))(~f))(~x), ~x) => ((Derivative(~n - 1))(~f))(~x) <-- FreeQ([~f, ~n], ~x)
    @apply_utils Antiderivative((~(c') * (~F) ^ (~(a') + ~(b') * ~x)) ^ ~(p') * ((Derivative(~n))(~f))(~x), ~x) => (~c * (~F) ^ (~a + ~b * ~x)) ^ ~p * ((Derivative(~n - 1))(~f))(~x) - ~b * ~p * log(~F) * Antiderivative((~c * (~F) ^ (~a + ~b * ~x)) ^ ~p * ((Derivative(~n - 1))(~f))(~x), ~x) <-- FreeQ([~a, ~b, ~c, ~f, ~F, ~p], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative((~(c') * (~F) ^ (~(a') + ~(b') * ~x)) ^ ~(p') * ((Derivative(~n))(~f))(~x), ~x) => ((~c * (~F) ^ (~a + ~b * ~x)) ^ ~p * ((Derivative(~n))(~f))(~x)) / (~b * ~p * log(~F)) - (1 / (~b * ~p * log(~F))) * Antiderivative((~c * (~F) ^ (~a + ~b * ~x)) ^ ~p * ((Derivative(~n + 1))(~f))(~x), ~x) <-- FreeQ([~a, ~b, ~c, ~f, ~F, ~p], ~x) && ILtQ(~n, 0)
    @apply_utils Antiderivative(sin(~(a') + ~(b') * ~x) * ((Derivative(~n))(~f))(~x), ~x) => sin(~a + ~b * ~x) * ((Derivative(~n - 1))(~f))(~x) - ~b * Antiderivative(cos(~a + ~b * ~x) * ((Derivative(~n - 1))(~f))(~x), ~x) <-- FreeQ([~a, ~b, ~f], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative(cos(~(a') + ~(b') * ~x) * ((Derivative(~n))(~f))(~x), ~x) => cos(~a + ~b * ~x) * ((Derivative(~n - 1))(~f))(~x) + ~b * Antiderivative(sin(~a + ~b * ~x) * ((Derivative(~n - 1))(~f))(~x), ~x) <-- FreeQ([~a, ~b, ~f], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative(sin(~(a') + ~(b') * ~x) * ((Derivative(~n))(~f))(~x), ~x) => (-(cos(~a + ~b * ~x)) * ((Derivative(~n))(~f))(~x)) / ~b + (1 / ~b) * Antiderivative(cos(~a + ~b * ~x) * ((Derivative(~n + 1))(~f))(~x), ~x) <-- FreeQ([~a, ~b, ~f], ~x) && ILtQ(~n, 0)
    @apply_utils Antiderivative(cos(~(a') + ~(b') * ~x) * ((Derivative(~n))(~f))(~x), ~x) => (sin(~a + ~b * ~x) * ((Derivative(~n))(~f))(~x)) / ~b - (1 / ~b) * Antiderivative(sin(~a + ~b * ~x) * ((Derivative(~n + 1))(~f))(~x), ~x) <-- FreeQ([~a, ~b, ~f], ~x) && ILtQ(~n, 0)
    @apply_utils Antiderivative(~u * ((Derivative(~n))(~f))(~x), ~x) => Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~n - 1))(~f))(~x), ~u, ~x), ~x), ~x), ~x, ((Derivative(~n - 1))(~f))(~x)) <-- FreeQ([~f, ~n], ~x) && FunctionOfQ(((Derivative(~n - 1))(~f))(~x), ~u, ~x)
    @apply_utils Antiderivative(~u * (~(a') * ((Derivative(1))(~f))(~x) * (~g)(~x) + ~(a') * (~f)(~x) * ((Derivative(1))(~g))(~x)), ~x) => ~a * Subst(Antiderivative(SimplifyIntegrand(SubstFor((~f)(~x) * (~g)(~x), ~u, ~x), ~x), ~x), ~x, (~f)(~x) * (~g)(~x)) <-- FreeQ([~a, ~f, ~g], ~x) && FunctionOfQ((~f)(~x) * (~g)(~x), ~u, ~x)
    @apply_utils Antiderivative(~u * (~(a') * ((Derivative(~m))(~f))(~x) * (~g)(~x) + ~(a') * ((Derivative(~m1))(~f))(~x) * ((Derivative(1))(~g))(~x)), ~x) => ~a * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) * (~g)(~x), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) * (~g)(~x)) <-- FreeQ([~a, ~f, ~g, ~m], ~x) && (EqQ(~m1, ~m - 1) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) * (~g)(~x), ~u, ~x))
    @apply_utils Antiderivative(~u * (~(a') * ((Derivative(~m))(~f))(~x) * ((Derivative(~n1))(~g))(~x) + ~(a') * ((Derivative(~m1))(~f))(~x) * ((Derivative(~n))(~g))(~x)), ~x) => ~a * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) * ((Derivative(~n - 1))(~g))(~x), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) * ((Derivative(~n - 1))(~g))(~x)) <-- FreeQ([~a, ~f, ~g, ~m, ~n], ~x) && (EqQ(~m1, ~m - 1) && (EqQ(~n1, ~n - 1) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) * ((Derivative(~n - 1))(~g))(~x), ~u, ~x)))
    @apply_utils Antiderivative(~u * (~f)(~x) ^ ~(p') * (~(a') * ((Derivative(1))(~f))(~x) * (~g)(~x) + ~(b') * (~f)(~x) * ((Derivative(1))(~g))(~x)), ~x) => ~b * Subst(Antiderivative(SimplifyIntegrand(SubstFor((~f)(~x) ^ (~p + 1) * (~g)(~x), ~u, ~x), ~x), ~x), ~x, (~f)(~x) ^ (~p + 1) * (~g)(~x)) <-- FreeQ([~a, ~b, ~f, ~g, ~p], ~x) && (EqQ(~a, ~b * (~p + 1)) && FunctionOfQ((~f)(~x) ^ (~p + 1) * (~g)(~x), ~u, ~x))
    @apply_utils Antiderivative(~u * ((Derivative(~m1))(~f))(~x) ^ ~(p') * (~(a') * ((Derivative(~m))(~f))(~x) * (~g)(~x) + ~(b') * ((Derivative(~m1))(~f))(~x) * ((Derivative(1))(~g))(~x)), ~x) => ~b * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * (~g)(~x), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * (~g)(~x)) <-- FreeQ([~a, ~b, ~f, ~g, ~m, ~p], ~x) && (EqQ(~m1, ~m - 1) && (EqQ(~a, ~b * (~p + 1)) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * (~g)(~x), ~u, ~x)))
    @apply_utils Antiderivative(~u * (~g)(~x) ^ ~(q') * (~(a') * ((Derivative(~m))(~f))(~x) * (~g)(~x) + ~(b') * ((Derivative(~m1))(~f))(~x) * ((Derivative(1))(~g))(~x)), ~x) => ~a * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) * (~g)(~x) ^ (~q + 1), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) * (~g)(~x) ^ (~q + 1)) <-- FreeQ([~a, ~b, ~f, ~g, ~m, ~q], ~x) && (EqQ(~m1, ~m - 1) && (EqQ(~a * (~q + 1), ~b) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) * (~g)(~x) ^ (~q + 1), ~u, ~x)))
    @apply_utils Antiderivative(~u * ((Derivative(~m1))(~f))(~x) ^ ~(p') * (~(a') * ((Derivative(~m))(~f))(~x) * ((Derivative(~n1))(~g))(~x) + ~(b') * ((Derivative(~m1))(~f))(~x) * ((Derivative(~n))(~g))(~x)), ~x) => ~b * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * ((Derivative(~n - 1))(~g))(~x), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * ((Derivative(~n - 1))(~g))(~x)) <-- FreeQ([~a, ~b, ~f, ~g, ~m, ~n, ~p], ~x) && (EqQ(~m1, ~m - 1) && (EqQ(~n1, ~n - 1) && (EqQ(~a, ~b * (~p + 1)) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * ((Derivative(~n - 1))(~g))(~x), ~u, ~x))))
    @apply_utils Antiderivative(~u * (~f)(~x) ^ ~(p') * (~g)(~x) ^ ~(q') * (~(a') * ((Derivative(1))(~f))(~x) * (~g)(~x) + ~(b') * (~f)(~x) * ((Derivative(1))(~g))(~x)), ~x) => (~a / (~p + 1)) * Subst(Antiderivative(SimplifyIntegrand(SubstFor((~f)(~x) ^ (~p + 1) * (~g)(~x) ^ (~q + 1), ~u, ~x), ~x), ~x), ~x, (~f)(~x) ^ (~p + 1) * (~g)(~x) ^ (~q + 1)) <-- FreeQ([~a, ~b, ~f, ~g, ~p, ~q], ~x) && (EqQ(~a * (~q + 1), ~b * (~p + 1)) && FunctionOfQ((~f)(~x) ^ (~p + 1) * (~g)(~x) ^ (~q + 1), ~u, ~x))
    @apply_utils Antiderivative(~u * ((Derivative(~m1))(~f))(~x) ^ ~(p') * (~g)(~x) ^ ~(q') * (~(a') * ((Derivative(~m))(~f))(~x) * (~g)(~x) + ~(b') * ((Derivative(~m1))(~f))(~x) * ((Derivative(1))(~g))(~x)), ~x) => (~a / (~p + 1)) * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * (~g)(~x) ^ (~q + 1), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * (~g)(~x) ^ (~q + 1)) <-- FreeQ([~a, ~b, ~f, ~g, ~m, ~p, ~q], ~x) && (EqQ(~m1, ~m - 1) && (EqQ(~a * (~q + 1), ~b * (~p + 1)) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * (~g)(~x) ^ (~q + 1), ~u, ~x)))
    @apply_utils Antiderivative(~u * ((Derivative(~m1))(~f))(~x) ^ ~(p') * ((Derivative(~n1))(~g))(~x) ^ ~(q') * (~(a') * ((Derivative(~m))(~f))(~x) * ((Derivative(~n1))(~g))(~x) + ~(b') * ((Derivative(~m1))(~f))(~x) * ((Derivative(~n))(~g))(~x)), ~x) => (~a / (~p + 1)) * Subst(Antiderivative(SimplifyIntegrand(SubstFor(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * ((Derivative(~n - 1))(~g))(~x) ^ (~q + 1), ~u, ~x), ~x), ~x), ~x, ((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * ((Derivative(~n - 1))(~g))(~x) ^ (~q + 1)) <-- FreeQ([~a, ~b, ~f, ~g, ~m, ~n, ~p, ~q], ~x) && (EqQ(~m1, ~m - 1) && (EqQ(~n1, ~n - 1) && (EqQ(~a * (~q + 1), ~b * (~p + 1)) && FunctionOfQ(((Derivative(~m - 1))(~f))(~x) ^ (~p + 1) * ((Derivative(~n - 1))(~g))(~x) ^ (~q + 1), ~u, ~x))))
    @apply_utils Antiderivative(((~f)')(~x) * (~g)(~x) + (~f)(~x) * ((~g)')(~x), ~x) => (~f)(~x) * (~g)(~x) <-- FreeQ([~f, ~g], ~x)
    @apply_utils Antiderivative((((~f)')(~x) * (~g)(~x) - (~f)(~x) * ((~g)')(~x)) / (~g)(~x) ^ 2, ~x) => (~f)(~x) / (~g)(~x) <-- FreeQ([~f, ~g], ~x)
    @apply_utils Antiderivative((((~f)')(~x) * (~g)(~x) - (~f)(~x) * ((~g)')(~x)) / ((~f)(~x) * (~g)(~x)), ~x) => log((~f)(~x) / (~g)(~x)) <-- FreeQ([~f, ~g], ~x)
end
