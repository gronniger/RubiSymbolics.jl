int_rules_8_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 8.3*Exponential*integral*functions =#
    @apply_utils Antiderivative(ExpIntegralE(~n, ~(a') + ~(b') * ~x), ~x) => -(ExpIntegralE(~n + 1, ~a + ~b * ~x)) / ~b <-- FreeQ([~a, ~b, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * ExpIntegralE(~n, ~(b') * ~x), ~x) => (-((~x) ^ ~m) * ExpIntegralE(~n + 1, ~b * ~x)) / ~b + (~m / ~b) * Antiderivative((~x) ^ (~m - 1) * ExpIntegralE(~n + 1, ~b * ~x), ~x) <-- FreeQ(~b, ~x) && (EqQ(~m + ~n, 0) && IGtQ(~m, 0))
    @apply_utils Antiderivative(ExpIntegralE(1, ~(b') * ~x) / ~x, ~x) => (~b * ~x * HypergeometricPFQ([1, 1, 1], [2, 2, 2], -(~b) * ~x) - EulerGamma * log(~x)) - (1 / 2) * log(~b * ~x) ^ 2 <-- FreeQ(~b, ~x)
    @apply_utils Antiderivative((~x) ^ ~m * ExpIntegralE(~n, ~(b') * ~x), ~x) => ((~x) ^ (~m + 1) * ExpIntegralE(~n, ~b * ~x)) / (~m + 1) + (~b / (~m + 1)) * Antiderivative((~x) ^ (~m + 1) * ExpIntegralE(~n - 1, ~b * ~x), ~x) <-- FreeQ(~b, ~x) && (EqQ(~m + ~n, 0) && ILtQ(~m, -1))
    @apply_utils Antiderivative((~(d') * ~x) ^ ~m * ExpIntegralE(~n, ~(b') * ~x), ~x) => ((~d * ~x) ^ ~m * Gamma(~m + 1) * log(~x)) / (~b * (~b * ~x) ^ ~m) - ((~d * ~x) ^ (~m + 1) * HypergeometricPFQ([~m + 1, ~m + 1], [~m + 2, ~m + 2], -(~b) * ~x)) / (~d * (~m + 1) ^ 2) <-- FreeQ([~b, ~d, ~m, ~n], ~x) && (EqQ(~m + ~n, 0) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative((~(d') * ~x) ^ ~(m') * ExpIntegralE(~n, ~(b') * ~x), ~x) => ((~d * ~x) ^ (~m + 1) * ExpIntegralE(~n, ~b * ~x)) / (~d * (~m + ~n)) - ((~d * ~x) ^ (~m + 1) * ExpIntegralE(-(~m), ~b * ~x)) / (~d * (~m + ~n)) <-- FreeQ([~b, ~d, ~m, ~n], ~x) && NeQ(~m + ~n, 0)
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * ExpIntegralE(~n, ~a + ~(b') * ~x), ~x) => (-((~c + ~d * ~x) ^ ~m) * ExpIntegralE(~n + 1, ~a + ~b * ~x)) / ~b + ((~d * ~m) / ~b) * Antiderivative((~c + ~d * ~x) ^ (~m - 1) * ExpIntegralE(~n + 1, ~a + ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x) && (IGtQ(~m, 0) || (ILtQ(~n, 0) || GtQ(~m, 0) && LtQ(~n, -1)))
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * ExpIntegralE(~n, ~a + ~(b') * ~x), ~x) => ((~c + ~d * ~x) ^ (~m + 1) * ExpIntegralE(~n, ~a + ~b * ~x)) / (~d * (~m + 1)) + (~b / (~d * (~m + 1))) * Antiderivative((~c + ~d * ~x) ^ (~m + 1) * ExpIntegralE(~n - 1, ~a + ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x) && ((IGtQ(~n, 0) || LtQ(~m, -1) && GtQ(~n, 0)) && NeQ(~m, -1))
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * ExpIntegralE(~n, ~a + ~(b') * ~x), ~x) => Unintegrable((~c + ~d * ~x) ^ ~m * ExpIntegralE(~n, ~a + ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x)
    @apply_utils Antiderivative(ExpIntegralEi(~(a') + ~(b') * ~x), ~x) => ((~a + ~b * ~x) * ExpIntegralEi(~a + ~b * ~x)) / ~b - ℯ ^ (~a + ~b * ~x) / ~b <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative(ExpIntegralEi(~(b') * ~x) / ~x, ~x) => log(~x) * (ExpIntegralEi(~b * ~x) + ExpIntegralE(1, -(~b) * ~x)) - Antiderivative(ExpIntegralE(1, -(~b) * ~x) / ~x, ~x) <-- FreeQ(~b, ~x)
    @apply_utils Antiderivative(ExpIntegralEi(~(a') + ~(b') * ~x) / (~(c') + ~(d') * ~x), ~x) => Unintegrable(ExpIntegralEi(~a + ~b * ~x) / (~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x)
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * ExpIntegralEi(~(a') + ~(b') * ~x), ~x) => ((~c + ~d * ~x) ^ (~m + 1) * ExpIntegralEi(~a + ~b * ~x)) / (~d * (~m + 1)) - (~b / (~d * (~m + 1))) * Antiderivative(((~c + ~d * ~x) ^ (~m + 1) * ℯ ^ (~a + ~b * ~x)) / (~a + ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && NeQ(~m, -1)
    @apply_utils Antiderivative(ExpIntegralEi(~(a') + ~(b') * ~x) ^ 2, ~x) => ((~a + ~b * ~x) * ExpIntegralEi(~a + ~b * ~x) ^ 2) / ~b - 2 * Antiderivative(ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~a + ~b * ~x), ~x) <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * ExpIntegralEi(~(b') * ~x) ^ 2, ~x) => ((~x) ^ (~m + 1) * ExpIntegralEi(~b * ~x) ^ 2) / (~m + 1) - (2 / (~m + 1)) * Antiderivative((~x) ^ ~m * ℯ ^ (~b * ~x) * ExpIntegralEi(~b * ~x), ~x) <-- FreeQ(~b, ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * ExpIntegralEi(~a + ~(b') * ~x) ^ 2, ~x) => ((((~x) ^ (~m + 1) * ExpIntegralEi(~a + ~b * ~x) ^ 2) / (~m + 1) + (~a * (~x) ^ ~m * ExpIntegralEi(~a + ~b * ~x) ^ 2) / (~b * (~m + 1))) - (2 / (~m + 1)) * Antiderivative((~x) ^ ~m * ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~a + ~b * ~x), ~x)) - ((~a * ~m) / (~b * (~m + 1))) * Antiderivative((~x) ^ (~m - 1) * ExpIntegralEi(~a + ~b * ~x) ^ 2, ~x) <-- FreeQ([~a, ~b], ~x) && IGtQ(~m, 0)
    #= Antiderivative((~x)^(~m')*ExpIntegralEi((~a)+(~b')*(~x))^2,~x) :=  b*x^(m+2)*ExpIntegralEi(a+b*x)^2/(a*(m+1)) + x^(m+1)*ExpIntegralEi(a+b*x)^2/(m+1) - 2*b/(a*(m+1))*Antiderivative(x^(m+1)*ℯ^(a+b*x)*ExpIntegralEi(a+b*x),x) - b*(m+2)/(a*(m+1))*Antiderivative(x^(m+1)*ExpIntegralEi(a+b*x)^2,x) <--  FreeQ([a,b],x) && ILtQ(m,-2) =#
    @apply_utils Antiderivative(ℯ ^ (~(a') + ~(b') * ~x) * ExpIntegralEi(~(c') + ~(d') * ~x), ~x) => (ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~c + ~d * ~x)) / ~b - (~d / ~b) * Antiderivative(ℯ ^ (~a + ~c + (~b + ~d) * ~x) / (~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * ℯ ^ (~(a') + ~(b') * ~x) * ExpIntegralEi(~(c') + ~(d') * ~x), ~x) => (((~x) ^ ~m * ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~c + ~d * ~x)) / ~b - (~d / ~b) * Antiderivative(((~x) ^ ~m * ℯ ^ (~a + ~c + (~b + ~d) * ~x)) / (~c + ~d * ~x), ~x)) - (~m / ~b) * Antiderivative((~x) ^ (~m - 1) * ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~x) ^ ~m * ℯ ^ (~(a') + ~(b') * ~x) * ExpIntegralEi(~(c') + ~(d') * ~x), ~x) => (((~x) ^ (~m + 1) * ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~c + ~d * ~x)) / (~m + 1) - (~d / (~m + 1)) * Antiderivative(((~x) ^ (~m + 1) * ℯ ^ (~a + ~c + (~b + ~d) * ~x)) / (~c + ~d * ~x), ~x)) - (~b / (~m + 1)) * Antiderivative((~x) ^ (~m + 1) * ℯ ^ (~a + ~b * ~x) * ExpIntegralEi(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && ILtQ(~m, -1)
    @apply_utils Antiderivative(ExpIntegralEi(~(d') * (~(a') + ~(b') * log(~(c') * (~x) ^ ~(n')))), ~x) => ~x * ExpIntegralEi(~d * (~a + ~b * log(~c * (~x) ^ ~n))) - ~b * ~n * ℯ ^ (~a * ~d) * Antiderivative((~c * (~x) ^ ~n) ^ (~b * ~d) / (~a + ~b * log(~c * (~x) ^ ~n)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x)
    @apply_utils Antiderivative(ExpIntegralEi(~(d') * (~(a') + ~(b') * log(~(c') * (~x) ^ ~(n')))) / ~x, ~x) => (1 / ~n) * Subst(ExpIntegralEi(~d * (~a + ~b * ~x)), ~x, log(~c * (~x) ^ ~n)) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * ExpIntegralEi(~(d') * (~(a') + ~(b') * log(~(c') * (~x) ^ ~(n')))), ~x) => ((~e * ~x) ^ (~m + 1) * ExpIntegralEi(~d * (~a + ~b * log(~c * (~x) ^ ~n)))) / (~e * (~m + 1)) - ((~b * ~n * ℯ ^ (~a * ~d) * (~c * (~x) ^ ~n) ^ (~b * ~d)) / ((~m + 1) * (~e * ~x) ^ (~b * ~d * ~n))) * Antiderivative((~e * ~x) ^ (~m + ~b * ~d * ~n) / (~a + ~b * log(~c * (~x) ^ ~n)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && NeQ(~m, -1)
    @apply_utils Antiderivative(LogIntegral(~(a') + ~(b') * ~x), ~x) => ((~a + ~b * ~x) * LogIntegral(~a + ~b * ~x)) / ~b - ExpIntegralEi(2 * log(~a + ~b * ~x)) / ~b <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative(LogIntegral(~(b') * ~x) / ~x, ~x) => -(~b) * ~x + log(~b * ~x) * LogIntegral(~b * ~x) <-- FreeQ(~b, ~x)
    @apply_utils Antiderivative(LogIntegral(~(a') + ~(b') * ~x) / (~(c') + ~(d') * ~x), ~x) => Unintegrable(LogIntegral(~a + ~b * ~x) / (~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x)
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * LogIntegral(~(a') + ~(b') * ~x), ~x) => ((~c + ~d * ~x) ^ (~m + 1) * LogIntegral(~a + ~b * ~x)) / (~d * (~m + 1)) - (~b / (~d * (~m + 1))) * Antiderivative((~c + ~d * ~x) ^ (~m + 1) / log(~a + ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && NeQ(~m, -1)
end
