int_rules_7_1_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 7.1.3*(d+e*x^2)^p*(a+b*arcsinh(c*x))^n =#
    #= Antiderivative(((~a')+(~b')*asinh((~c')*(~x)))^(~n')/sqrt((~d)+(~e')*(~x)^2),~x) :=  1/c*Simp(sqrt(1+c^2*x^2)/sqrt(d+e*x^2))*Subst(Antiderivative((a+b*x)^n,x),x, asinh(c*x)) <-- FreeQ([a,b,c,d,e,n],x) && EqQ(e,c^2*d) =#
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * asinh(~(c') * ~x))), ~x) => (1 / (~b * ~c)) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * log(~a + ~b * asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~e, (~c) ^ 2 * ~d)
    @apply_utils Antiderivative((~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n') / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~b * ~c * (~n + 1))) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && NeQ(~n, -1))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * asinh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~p, 0))
    @apply_utils Antiderivative(sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((~x * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / 2 - ((~b * ~c * ~n) / 2) * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative(~x * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x)) + (1 / 2) * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative((~a + ~b * asinh(~c * ~x)) ^ ~n / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~n, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((~x * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (2 * ~p + 1) + ((2 * ~d * ~p) / (2 * ~p + 1)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * ~p + 1)) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(~x * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && GtQ(~p, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n') / (~d + ~(e') * (~x) ^ 2) ^ (3 / 2), ~x) => (~x * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~d * sqrt(~d + ~e * (~x) ^ 2)) - ((~b * ~c * ~n) / ~d) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~x * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1)) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~n, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (-(~x) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (2 * ~d * (~p + 1)) + ((2 * ~p + 3) / (2 * ~d * (~p + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) + ((~b * ~c * ~n) / (2 * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(~x * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (LtQ(~p, -1) && NeQ(~p, -3 / 2))))
    @apply_utils Antiderivative((~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n') / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~c * ~d)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * sech(~x), ~x), ~x, asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~n, 0))
    #= Antiderivative(((~d)+(~e')*(~x)^2)^(~p')*((~a')+(~b')*asinh((~c')*(~x)))^(~n),~x) :=  d^p*(1+c^2*x^2)^(p+1/2)*(a+b*asinh(c*x))^(n+1)/(b*c*(n+1)) - c*d^p*(2*p+1)/(b*(n+1))*Antiderivative(x*(1+c^2*x^2)^(p-1/2)*(a+b*asinh(c*x)) ^(n+1),x) <-- FreeQ([a,b,c,d,e,p],x) && EqQ(e,c^2*d) && LtQ(n,-1) &&  (IntegerQ(p) || GtQ(d,0)) =#
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~n, ~x) => (Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) * (~d + ~e * (~x) ^ 2) ^ ~p) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) - ((~c * (2 * ~p + 1)) / (~b * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(~x * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && LtQ(~n, -1))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (1 / (~b * ~c)) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Subst(Antiderivative((~x) ^ ~n * cosh(-(~a) / ~b + ~x / ~b) ^ (2 * ~p + 1), ~x), ~x, ~a + ~b * asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(2 * ~p, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * asinh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) || ILtQ(~p + 1 / 2, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * asinh(~c * ~x)) ^ ~n, (~d + ~e * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (NeQ(~e, (~c) ^ 2 * ~d) && (IntegerQ(~p) && (~p > 0 || IGtQ(~n, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable((~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x)
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~p * (~f + ~(g') * ~x) ^ ~q * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((-((~d) ^ 2) * ~g) / ~e) ^ ~q * Antiderivative((~d + ~e * ~x) ^ (~p - ~q) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (EqQ(~e * ~f + ~d * ~g, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && (HalfIntegerQ(~p, ~q) && (GeQ(~p - ~q, 0) && (GtQ(~d, 0) && LtQ(~g / ~e, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~p * (~f + ~(g') * ~x) ^ ~q * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (((~d + ~e * ~x) ^ ~q * (~f + ~g * ~x) ^ ~q) / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q) * Antiderivative((~d + ~e * ~x) ^ (~p - ~q) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (EqQ(~e * ~f + ~d * ~g, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && (HalfIntegerQ(~p, ~q) && GeQ(~p - ~q, 0))))
end
