int_rules_7_1_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 7.1.4*(f*x)^m*(d+e*x^2)^p*(a+b*arcsinh(c*x))^n =#
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / ~e) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * tanh(~x), ~x), ~x, asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~n, 0))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (2 * ~e * (~p + 1)) - ((~b * ~n) / (2 * ~c * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && NeQ(~p, -1)))
    @apply_utils Antiderivative((~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n') / (~x * (~d + ~(e') * (~x) ^ 2)), ~x) => (1 / ~d) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n / (cosh(~x) * sinh(~x)), ~x), ~x, asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~n, 0))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~d * ~f * (~m + 1)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (EqQ(~m + 2 * ~p + 3, 0) && NeQ(~m, -1))))
    @apply_utils Antiderivative(((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x))) / ~x, ~x) => (((~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x))) / (2 * ~p) - ((~b * ~c * (~d) ^ ~p) / (2 * ~p)) * Antiderivative((1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2), ~x)) + ~d * Antiderivative(((~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * asinh(~c * ~x))) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x))) / (~f * (~m + 1)) - ((~b * ~c * (~d) ^ ~p) / (~f * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2), ~x)) - ((2 * ~e * ~p) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * asinh(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && ILtQ((~m + 1) / 2, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * asinh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * asinh(~c * ~x), u) - ~b * ~c * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative(SimplifyIntegrand(u / sqrt(~d + ~e * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegerQ(~p - 1 / 2) && (NeQ(~p, -1 / 2) && (IGtQ((~m + 1) / 2, 0) || ILtQ((~m + 2 * ~p + 3) / 2, 0)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~f * (~m + 1)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative((~f * ~x) ^ (~m + 1) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x)) - ((~c) ^ 2 / ((~f) ^ 2 * (~m + 1))) * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~f * (~m + 2)) - ((~b * ~c * ~n) / (~f * (~m + 2))) * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative((~f * ~x) ^ (~m + 1) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x)) + (1 / (~m + 2)) * Simp(sqrt(~d + ~e * (~x) ^ 2) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) * Antiderivative(((~f * ~x) ^ ~m * (~a + ~b * asinh(~c * ~x)) ^ ~n) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~n, 0) && (IGtQ(~m, -2) || EqQ(~n, 1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~f * (~m + 1)) - ((2 * ~e * ~p) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (GtQ(~p, 0) && LtQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~f * (~m + 2 * ~p + 1)) + ((2 * ~d * ~p) / (~m + 2 * ~p + 1)) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 2 * ~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (GtQ(~p, 0) && Not(LtQ(~m, -1)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~d * ~f * (~m + 1)) - (((~c) ^ 2 * (~m + 2 * ~p + 3)) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && ILtQ(~m, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (2 * ~e * (~p + 1)) - (((~f) ^ 2 * (~m - 1)) / (2 * ~e * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~f * ~n) / (2 * ~c * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (LtQ(~p, -1) && IGtQ(~m, 1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (-((~f * ~x) ^ (~m + 1)) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (2 * ~d * ~f * (~p + 1)) + ((~m + 2 * ~p + 3) / (2 * ~d * (~p + 1))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) + ((~b * ~c * ~n) / (2 * ~f * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (LtQ(~p, -1) && (Not(GtQ(~m, 1)) && (IntegerQ(~m) || (IntegerQ(~p) || EqQ(~n, 1)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~e * (~m + 2 * ~p + 1)) - (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * (~m + 2 * ~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~f * ~n) / (~c * (~m + 2 * ~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && (IGtQ(~m, 1) && NeQ(~m + 2 * ~p + 1, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~n, ~x) => ((~f * ~x) ^ ~m * sqrt(1 + (~c) ^ 2 * (~x) ^ 2) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) - ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~n, -1) && EqQ(~m + 2 * ~p + 1, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~n, ~x) => (((~f * ~x) ^ ~m * sqrt(1 + (~c) ^ 2 * (~x) ^ 2) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) - ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1), ~x)) - ((~c * (~m + 2 * ~p + 1)) / (~b * ~f * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~n, -1) && (IGtQ(2 * ~p, 0) && (NeQ(~m + 2 * ~p + 1, 0) && IGtQ(~m, -3)))))
    #= Antiderivative(((~f')*(~x))^(~m')*((~d)+(~e')*(~x)^2)^(~p')*((~a')+(~b')*asinh((~c')*(~x)))^(~n),(~x)*Symbol) :=  (f*x)^m*Simp(sqrt(1+c^2*x^2)*(d+e*x^2)^p)*(a+b*asinh(c*x))^(n+1)/(b* c*(n+1)) - f*m/(b*c*(n+1))*Simp((d+e*x^2)^p/(1+c^2*x^2)^p)*Antiderivative((f*x)^(m-1)*(1+ c^2*x^2)^(p+1/2)*(a+b*asinh(c*x))^(n+1),x) - c*(2*p+1)/(b*f*(n+1))*Simp((d+e*x^2)^p/(1+c^2*x^2)^p)*Antiderivative((f*x)^(m+ 1)*(1+c^2*x^2)^(p-1/2)*(a+b*asinh(c*x))^(n+1),x) <--  FreeQ([a,b,c,d,e,f,m,p],x) && EqQ(e,c^2*d) && LtQ(n,-1) &&  IntegerQ(2*p) && NeQ(p,-1/2) && IGtQ(m,-3) =#
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / (~e * ~m) - ((~b * ~f * ~n) / (~c * ~m)) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * asinh(~c * ~x)) ^ (~n - 1), ~x)) - (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * asinh(~c * ~x)) ^ ~n) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~n, 0) && IGtQ(~m, 1)))
    @apply_utils Antiderivative(((~x) ^ ~m * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~c) ^ (~m + 1)) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * sinh(~x) ^ ~m, ~x), ~x, asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~n, 0) && IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * asinh(~(c') * ~x))) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * ~x) ^ (~m + 1) / (~f * (~m + 1))) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * asinh(~c * ~x)) * HypergeometricFunctions._₂F₁(1 / 2, (1 + ~m) / 2, (3 + ~m) / 2, -((~c) ^ 2) * (~x) ^ 2) - ((~b * ~c * (~f * ~x) ^ (~m + 2)) / ((~f) ^ 2 * (~m + 1) * (~m + 2))) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * HypergeometricPFQ([1, 1 + ~m / 2, 1 + ~m / 2], [3 / 2 + ~m / 2, 2 + ~m / 2], -((~c) ^ 2) * (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~n) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * ~x) ^ ~m / (~b * ~c * (~n + 1))) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1) - ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp(sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * asinh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && LtQ(~n, -1))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => (1 / (~b * (~c) ^ (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Subst(Antiderivative((~x) ^ ~n * sinh(-(~a) / ~b + ~x / ~b) ^ ~m * cosh(-(~a) / ~b + ~x / ~b) ^ (2 * ~p + 1), ~x), ~x, ~a + ~b * asinh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(2 * ~p + 2, 0) && IGtQ(~m, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * asinh(~c * ~x)) ^ ~n / sqrt(~d + ~e * (~x) ^ 2), (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p + 1 / 2, 0) && (Not(IGtQ((~m + 1) / 2, 0)) && (EqQ(~m, -1) || EqQ(~m, -2)))))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * asinh(~c * ~x))) / (2 * ~e * (~p + 1)) - ((~b * ~c) / (2 * ~e * (~p + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + 1) / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ(~e, (~c) ^ 2 * ~d) && NeQ(~p, -1))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * asinh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~e, (~c) ^ 2 * ~d) && (IntegerQ(~p) && (GtQ(~p, 0) || IGtQ((~m - 1) / 2, 0) && LeQ(~m + ~p, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * asinh(~c * ~x)) ^ ~n, (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~n, 0) && (IntegerQ(~p) && IntegerQ(~m))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(h') * ~x) ^ ~(m') * (~d + ~(e') * ~x) ^ ~p * (~f + ~(g') * ~x) ^ ~q * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((-((~d) ^ 2) * ~g) / ~e) ^ ~q * Antiderivative((~h * ~x) ^ ~m * (~d + ~e * ~x) ^ (~p - ~q) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n], ~x) && (EqQ(~e * ~f + ~d * ~g, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && (HalfIntegerQ(~p, ~q) && (GeQ(~p - ~q, 0) && (GtQ(~d, 0) && LtQ(~g / ~e, 0))))))
    @apply_utils Antiderivative((~(h') * ~x) ^ ~(m') * (~d + ~(e') * ~x) ^ ~p * (~f + ~(g') * ~x) ^ ~q * (~(a') + ~(b') * asinh(~(c') * ~x)) ^ ~(n'), ~x) => ((((-((~d) ^ 2) * ~g) / ~e) ^ IntPart(~q) * (~d + ~e * ~x) ^ FracPart(~q) * (~f + ~g * ~x) ^ FracPart(~q)) / (1 + (~c) ^ 2 * (~x) ^ 2) ^ FracPart(~q)) * Antiderivative((~h * ~x) ^ ~m * (~d + ~e * ~x) ^ (~p - ~q) * (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q * (~a + ~b * asinh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n], ~x) && (EqQ(~e * ~f + ~d * ~g, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && (HalfIntegerQ(~p, ~q) && GeQ(~p - ~q, 0))))
end
