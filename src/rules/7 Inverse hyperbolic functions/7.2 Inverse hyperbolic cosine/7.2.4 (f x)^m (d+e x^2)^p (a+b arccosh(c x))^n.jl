int_rules_7_2_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 7.2.4*(f*x)^m*(d+e*x^2)^p*(a+b*arccosh(c*x))^n =#
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative((~f * ~x) ^ ~m * (~d1 * ~d2 + ~e1 * ~e2 * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m, ~n], ~x) && (EqQ(~d2 * ~e1 + ~d1 * ~e2, 0) && IntegerQ(~p))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / ~e) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * coth(~x), ~x), ~x, acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(~n, 0))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~e * (~p + 1)) - ((~b * ~n) / (2 * ~c * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && NeQ(~p, -1)))
    @apply_utils Antiderivative(~x * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~e1 * ~e2 * (~p + 1)) - ((~b * ~n) / (2 * ~c * (~p + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && NeQ(~p, -1))))
    @apply_utils Antiderivative((~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n') / (~x * (~d + ~(e') * (~x) ^ 2)), ~x) => (-1 / ~d) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n / (cosh(~x) * sinh(~x)), ~x), ~x, acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(~n, 0))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~d * ~f * (~m + 1)) + ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (EqQ(~m + 2 * ~p + 3, 0) && NeQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~d1 * ~d2 * ~f * (~m + 1)) + ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (EqQ(~m + 2 * ~p + 3, 0) && NeQ(~p, -1)))))
    @apply_utils Antiderivative(((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x))) / ~x, ~x) => (((~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x))) / (2 * ~p) - ((~b * ~c * (-(~d)) ^ ~p) / (2 * ~p)) * Antiderivative((1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2), ~x)) + ~d * Antiderivative(((~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x))) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x))) / (~f * (~m + 1)) - ((~b * ~c * (-(~d)) ^ ~p) / (~f * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2), ~x)) - ((2 * ~e * ~p) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~p, 0) && ILtQ((~m + 1) / 2, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * acosh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * acosh(~c * ~x), u) - ~b * ~c * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative(SimplifyIntegrand(u / sqrt(~d + ~e * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~p - 1 / 2) && (NeQ(~p, -1 / 2) && (IGtQ((~m + 1) / 2, 0) || ILtQ((~m + 2 * ~p + 3) / 2, 0)))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p, ~x)], Dist(~a + ~b * acosh(~c * ~x), u) - ~b * ~c * Simp((sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x)) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative(SimplifyIntegrand(u / (sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x)), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (IntegerQ(~p - 1 / 2) && (NeQ(~p, -1 / 2) && (IGtQ((~m + 1) / 2, 0) || ILtQ((~m + 2 * ~p + 3) / 2, 0))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 1)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative((~f * ~x) ^ (~m + 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) - ((~c) ^ 2 / ((~f) ^ 2 * (~m + 1))) * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x) * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 1)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp(sqrt(~d1 + ~e1 * ~x) / sqrt(1 + ~c * ~x)) * Simp(sqrt(~d2 + ~e2 * ~x) / sqrt(-1 + ~c * ~x)) * Antiderivative((~f * ~x) ^ (~m + 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) - ((~c) ^ 2 / ((~f) ^ 2 * (~m + 1))) * Simp(sqrt(~d1 + ~e1 * ~x) / sqrt(1 + ~c * ~x)) * Simp(sqrt(~d2 + ~e2 * ~x) / sqrt(-1 + ~c * ~x)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && LtQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 2)) - ((~b * ~c * ~n) / (~f * (~m + 2))) * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative((~f * ~x) ^ (~m + 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) - (1 / (~m + 2)) * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative(((~f * ~x) ^ ~m * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~n, 0) && (IGtQ(~m, -2) || EqQ(~n, 1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x) * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 2)) - ((~b * ~c * ~n) / (~f * (~m + 2))) * Simp(sqrt(~d1 + ~e1 * ~x) / sqrt(1 + ~c * ~x)) * Simp(sqrt(~d2 + ~e2 * ~x) / sqrt(-1 + ~c * ~x)) * Antiderivative((~f * ~x) ^ (~m + 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) - (1 / (~m + 2)) * Simp(sqrt(~d1 + ~e1 * ~x) / sqrt(1 + ~c * ~x)) * Simp(sqrt(~d2 + ~e2 * ~x) / sqrt(-1 + ~c * ~x)) * Antiderivative(((~f * ~x) ^ ~m * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (IGtQ(~n, 0) && (IGtQ(~m, -2) || EqQ(~n, 1)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 1)) - ((2 * ~e * ~p) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (GtQ(~p, 0) && LtQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 1)) - ((2 * ~e1 * ~e2 * ~p) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d1 + ~e1 * ~x) ^ (~p - 1) * (~d2 + ~e2 * ~x) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (GtQ(~p, 0) && LtQ(~m, -1)))))
    #= Antiderivative(((~f')*(~x))^(~m)*((~d)+(~e')*(~x)^2)^(~p)*((~a')+(~b')*acosh((~c')*(~x)))^(~n'),(~x)*Symbol) :=  f*(f*x)^(m-1)*(d+e*x^2)^(p+1)*(a+b*acosh(c*x))^n/(e*(m+2*p+1)) + f^2*(m-1)/(c^2*(m+2*p+1))*Antiderivative((f*x)^(m-2)*(d+e*x^2)^p*(a+b*acosh( c*x))^n,x) - b*f*n/(c*(m+2*p+1))*Simp((d+e*x^2)^p/((1+c*x)^p*(-1+c*x)^p))* Antiderivative((f*x)^(m-1)*(-1+c^2*x^2)^(p+1/2)*(a+b*acosh(c*x))^(n-1),x) <--  FreeQ([a,b,c,d,e,f,p],x) && EqQ(c^2*d+e,0) && GtQ(n,0) && EqQ(n,1) &&  IGtQ(p+1/2,0) && IGtQ((m-1)/2,0) =#
    #= Antiderivative(((~f')*(~x))^(~m)*((~d)+(~e')*(~x)^2)^(~p)*((~a')+(~b')*acosh((~c')*(~x)))^(~n'),(~x)*Symbol) :=  f*(f*x)^(m-1)*(d+e*x^2)^(p+1)*(a+b*acosh(c*x))^n/(2*e*(p+1)) - f^2*(m-1)/(2*e*(p+1))*Antiderivative((f*x)^(m-2)*(d+e*x^2)^(p+1)*(a+b*acosh( c*x))^n,x) - b*f*n/(2*c*(p+1))*Simp((d+e*x^2)^p/((1+c*x)^p*(-1+c*x)^p))* Antiderivative((f*x)^(m-1)*(1+c*x)^(p+1/2)*(-1+c*x)^(p+1/2)*(a+b*acosh(c*x) )^(n-1),x) <-- FreeQ([a,b,c,d,e,f],x) && EqQ(c^2*d+e,0) && GtQ(n,0) &&  EqQ(n,1) && ILtQ(p-1/2,0) && IGtQ((m-1)/2,0) =#
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 2 * ~p + 1)) + ((2 * ~d * ~p) / (~m + 2 * ~p + 1)) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 2 * ~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (GtQ(~p, 0) && Not(LtQ(~m, -1)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (((~f * ~x) ^ (~m + 1) * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~f * (~m + 2 * ~p + 1)) + ((2 * ~d1 * ~d2 * ~p) / (~m + 2 * ~p + 1)) * Antiderivative((~f * ~x) ^ ~m * (~d1 + ~e1 * ~x) ^ (~p - 1) * (~d2 + ~e2 * ~x) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (~f * (~m + 2 * ~p + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (GtQ(~p, 0) && Not(LtQ(~m, -1))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~d * ~f * (~m + 1)) + (((~c) ^ 2 * (~m + 2 * ~p + 3)) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) + ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && ILtQ(~m, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~d1 * ~d2 * ~f * (~m + 1)) + (((~c) ^ 2 * (~m + 2 * ~p + 3)) / ((~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) + ((~b * ~c * ~n) / (~f * (~m + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && ILtQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~e * (~p + 1)) - (((~f) ^ 2 * (~m - 1)) / (2 * ~e * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~f * ~n) / (2 * ~c * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (LtQ(~p, -1) && IGtQ(~m, 1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~e1 * ~e2 * (~p + 1)) - (((~f) ^ 2 * (~m - 1)) / (2 * ~e1 * ~e2 * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~f * ~n) / (2 * ~c * (~p + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (LtQ(~p, -1) && IGtQ(~m, 1)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((-((~f * ~x) ^ (~m + 1)) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~d * ~f * (~p + 1)) + ((~m + 2 * ~p + 3) / (2 * ~d * (~p + 1))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * ~f * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (LtQ(~p, -1) && (Not(GtQ(~m, 1)) && (IntegerQ(~m) || (IntegerQ(~p) || EqQ(~n, 1)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((-((~f * ~x) ^ (~m + 1)) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~d1 * ~d2 * ~f * (~p + 1)) + ((~m + 2 * ~p + 3) / (2 * ~d1 * ~d2 * (~p + 1))) * Antiderivative((~f * ~x) ^ ~m * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * ~f * (~p + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (LtQ(~p, -1) && (Not(GtQ(~m, 1)) && (IntegerQ(~m) || EqQ(~n, 1)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~e * (~m + 2 * ~p + 1)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * (~m + 2 * ~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~f * ~n) / (~c * (~m + 2 * ~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (IGtQ(~m, 1) && NeQ(~m + 2 * ~p + 1, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~e1 * ~e2 * (~m + 2 * ~p + 1)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * (~m + 2 * ~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~f * ~n) / (~c * (~m + 2 * ~p + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (IGtQ(~m, 1) && NeQ(~m + 2 * ~p + 1, 0)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n, ~x) => ((~f * ~x) ^ ~m * Simp(sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x) * (~d + ~e * (~x) ^ 2) ^ ~p) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) + ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (LtQ(~n, -1) && EqQ(~m + 2 * ~p + 1, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n, ~x) => ((~f * ~x) ^ ~m * Simp(sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x) * (~d1 + ~e1 * ~x) ^ ~p) * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) + ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (LtQ(~n, -1) && EqQ(~m + 2 * ~p + 1, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n, ~x) => (((~f * ~x) ^ ~m * Simp(sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x) * (~d + ~e * (~x) ^ 2) ^ ~p) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) + ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m - 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x)) - ((~c * (~m + 2 * ~p + 1)) / (~b * ~f * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative((~f * ~x) ^ (~m + 1) * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (LtQ(~n, -1) && (IGtQ(2 * ~p, 0) && (NeQ(~m + 2 * ~p + 1, 0) && IGtQ(~m, -3)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n, ~x) => (((~f * ~x) ^ ~m * sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x) * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) + ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m - 1) * (-1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x)) - ((~c * (~m + 2 * ~p + 1)) / (~b * ~f * (~n + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative((~f * ~x) ^ (~m + 1) * (-1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (LtQ(~n, -1) && (IGtQ(~p + 1 / 2, 0) && (NeQ(~m + 2 * ~p + 1, 0) && IGtQ(~m, -3))))))
    #= Antiderivative(((~f')*(~x))^(~m')*((~d)+(~e')*(~x)^2)^(~p')*((~a')+(~b')*acosh((~c')*(~x)))^(~n),(~x)*Symbol) :=  (f*x)^m*Simp(sqrt(1+c*x)*sqrt(-1+c*x)*(d+e*x^2)^p)*(a+b*acosh(c*x))^ (n+1)/(b*c*(n+1)) - f*m/(b*c*(n+1))*Simp((d+e*x^2)^p/((1+c*x)^p*(-1+c*x)^p))* Antiderivative((f*x)^(m-1)*(1+c*x)^(p+1/2)*(-1+c*x)^(p+1/2)*(a+b*acosh(c*x) )^(n+1),x) - c*(2*p+1)/(b*f*(n+1))*Simp((d+e*x^2)^p/((1+c*x)^p*(-1+c*x)^p))* Antiderivative((f*x)^(m+1)*(1+c*x)^(p-1/2)*(-1+c*x)^(p-1/2)*(a+b*acosh(c*x) )^(n+1),x) <-- FreeQ([a,b,c,d,e,f,m,p],x) && EqQ(c^2*d+e,0) &&  LtQ(n,-1) && NeQ(p,-1/2) && IntegerQ(2*p) && IGtQ(m,-3) =#
    #= Antiderivative(((~f')*(~x))^(~m')*((~d1)+(~e1')*(~x))^(~p)*((~d2)+(~e2')*(~x))^(~p)*((~a')+(~b')* acosh((~c')*(~x)))^(~n),~x) :=  (f*x)^m*sqrt(1+c*x)*sqrt(-1+c*x)*(d1+e1*x)^p*(d2+e2*x)^p*(a+b*acosh( c*x))^(n+1)/(b*c*(n+1)) - f*m/(b*c*(n+1))*Simp((d1+e1*x)^p/(1+c*x)^p)*Simp((d2+e2*x)^p/(-1+c* x)^p)* Antiderivative((f*x)^(m-1)*(-1+c^2*x^2)^(p+1/2)*(a+b*acosh(c*x))^(n+1),x) - c*(2*p+1)/(b*f*(n+1))*Simp((d1+e1*x)^p/(1+c*x)^p)*Simp((d2+e2*x)^p/( -1+c*x)^p)* Antiderivative((f*x)^(m+1)*(-1+c^2*x^2)^(p-1/2)*(a+b*acosh(c*x))^(n+1),x) <--  FreeQ([a,b,c,d1,e1,d2,e2,f,m,p],x) && EqQ(e1,c*d1) && EqQ(e2,-c*d2) &&  LtQ(n,-1) && ILtQ(p+1/2,0) && IGtQ(m,-3) =#
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~e * ~m) - ((~b * ~f * ~n) / (~c * ~m)) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && IGtQ(~m, 1)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n')) / (sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x)), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~e1 * ~e2 * ~m) - ((~b * ~f * ~n) / (~c * ~m)) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && IGtQ(~m, 1))))
    @apply_utils Antiderivative(((~x) ^ ~m * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~c) ^ (~m + 1)) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * cosh(~x) ^ ~m, ~x), ~x, acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~n, 0) && IntegerQ(~m)))
    @apply_utils Antiderivative(((~x) ^ ~m * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n')) / (sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x)), ~x) => (1 / (~c) ^ (~m + 1)) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * cosh(~x) ^ ~m, ~x), ~x, acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (IGtQ(~n, 0) && IntegerQ(~m))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acosh(~(c') * ~x))) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * ~x) ^ (~m + 1) / (~f * (~m + 1))) * Simp(sqrt(1 - (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * acosh(~c * ~x)) * HypergeometricFunctions._₂F₁(1 / 2, (1 + ~m) / 2, (3 + ~m) / 2, (~c) ^ 2 * (~x) ^ 2) + ((~b * ~c * (~f * ~x) ^ (~m + 2)) / ((~f) ^ 2 * (~m + 1) * (~m + 2))) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * HypergeometricPFQ([1, 1 + ~m / 2, 1 + ~m / 2], [3 / 2 + ~m / 2, 2 + ~m / 2], (~c) ^ 2 * (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acosh(~(c') * ~x))) / (sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x)), ~x) => ((~f * ~x) ^ (~m + 1) / (~f * (~m + 1))) * Simp(sqrt(1 - (~c) ^ 2 * (~x) ^ 2) / (sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x))) * (~a + ~b * acosh(~c * ~x)) * HypergeometricFunctions._₂F₁(1 / 2, (1 + ~m) / 2, (3 + ~m) / 2, (~c) ^ 2 * (~x) ^ 2) + ((~b * ~c * (~f * ~x) ^ (~m + 2)) / ((~f) ^ 2 * (~m + 1) * (~m + 2))) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * HypergeometricPFQ([1, 1 + ~m / 2, 1 + ~m / 2], [3 / 2 + ~m / 2, 2 + ~m / 2], (~c) ^ 2 * (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && Not(IntegerQ(~m))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (((~f * ~x) ^ ~m * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1))) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) - ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && LtQ(~n, -1))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n) / (sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x)), ~x) => (((~f * ~x) ^ ~m * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1))) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) - ((~f * ~m) / (~b * ~c * (~n + 1))) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && LtQ(~n, -1)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (1 / (~b * (~c) ^ (~m + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Subst(Antiderivative((~x) ^ ~n * cosh(-(~a) / ~b + ~x / ~b) ^ ~m * sinh(-(~a) / ~b + ~x / ~b) ^ (2 * ~p + 1), ~x), ~x, ~a + ~b * acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(2 * ~p + 2, 0) && IGtQ(~m, 0)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (1 / (~b * (~c) ^ (~m + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Subst(Antiderivative((~x) ^ ~n * cosh(-(~a) / ~b + ~x / ~b) ^ ~m * sinh(-(~a) / ~b + ~x / ~b) ^ (2 * ~p + 1), ~x), ~x, ~a + ~b * acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~n], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (IGtQ(~p + 3 / 2, 0) && IGtQ(~m, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acosh(~c * ~x)) ^ ~n / sqrt(~d + ~e * (~x) ^ 2), (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~p + 1 / 2, 0) && (Not(IGtQ((~m + 1) / 2, 0)) && (EqQ(~m, -1) || EqQ(~m, -2)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acosh(~c * ~x)) ^ ~n / (sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x)), (~f * ~x) ^ ~m * (~d1 + ~e1 * ~x) ^ (~p + 1 / 2) * (~d2 + ~e2 * ~x) ^ (~p + 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m, ~n], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~d1, 0) && (LtQ(~d2, 0) && (IGtQ(~p + 1 / 2, 0) && (Not(IGtQ((~m + 1) / 2, 0)) && (EqQ(~m, -1) || EqQ(~m, -2))))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => ((~d * (~f * ~x) ^ (~m + 1) * (~a + ~b * acosh(~c * ~x))) / (~f * (~m + 1)) + (~e * (~f * ~x) ^ (~m + 3) * (~a + ~b * acosh(~c * ~x))) / ((~f) ^ 3 * (~m + 3))) - ((~b * ~c) / (~f * (~m + 1) * (~m + 3))) * Antiderivative(((~f * ~x) ^ (~m + 1) * (~d * (~m + 3) + ~e * (~m + 1) * (~x) ^ 2)) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~c) ^ 2 * ~d + ~e, 0) && (NeQ(~m, -1) && NeQ(~m, -3)))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x))) / (2 * ~e * (~p + 1)) - ((~b * ~c) / (2 * ~e * (~p + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + 1) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~c) ^ 2 * ~d + ~e, 0) && NeQ(~p, -1))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * acosh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~p) && (GtQ(~p, 0) || IGtQ((~m - 1) / 2, 0) && LeQ(~m + ~p, 0))))
    #= Antiderivative((~x)^(~m')*((~d)+(~e')*(~x)^2)^(~p')*((~a')+(~b')*acosh((~c')*(~x)))^(~n),~x)  := 1/(b*c^(m+2*p+1))*Subst(Antiderivative(x^n*cosh(-a/b+x/b)^m*(c^2*d+e*cosh(- a/b+x/b)^2)^p*sinh(-a/b+x/b),x),x,a+b*acosh(c*x)) <--  FreeQ([a,b,c,d,e,n],x) && IGtQ(m,0) && IGtQ(p,0) =#
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acosh(~c * ~x)) ^ ~n, (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~n, 0) && (IntegerQ(~p) && IntegerQ(~m))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable((~f * ~x) ^ ~m * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~f, ~m, ~n, ~p], ~x)
end
