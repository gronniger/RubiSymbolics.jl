int_rules_7_2_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 7.2.3*(d+e*x^2)^p*(a+b*arccosh(c*x))^n =#
    @apply_utils Antiderivative((~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative((~d1 * ~d2 + ~e1 * ~e2 * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~n], ~x) && (EqQ(~d2 * ~e1 + ~d1 * ~e2, 0) && IntegerQ(~p))
    #= Antiderivative(((~a')+(~b')*acosh((~c')*(~x)))^(~n')/sqrt((~d)+(~e')*(~x)^2),~x) :=  1/c*Simp(sqrt(1+c*x)*sqrt(-1+c*x)/sqrt(d+e*x^2))*Subst(Antiderivative((a+b*x)^n, x),x,acosh(c*x)) <-- FreeQ([a,b,c,d,e,n],x) && EqQ(c^2*d+e,0) =#
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acosh(~(c') * ~x))), ~x) => (1 / (~b * ~c)) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * log(~a + ~b * acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ((~c) ^ 2 * ~d + ~e, 0)
    @apply_utils Antiderivative(1 / (sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x) * (~(a') + ~(b') * acosh(~(c') * ~x))), ~x) => (1 / (~b * ~c)) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * log(~a + ~b * acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && EqQ(~e2, -(~c) * ~d2))
    @apply_utils Antiderivative((~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n') / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~b * ~c * (~n + 1))) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && NeQ(~n, -1))
    @apply_utils Antiderivative((~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n') / (sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x)), ~x) => (1 / (~b * ~c * (~n + 1))) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~n], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && NeQ(~n, -1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * acosh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(~p, 0))
    @apply_utils Antiderivative(sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~x * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / 2 - ((~b * ~c * ~n) / 2) * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative(~x * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) - (1 / 2) * Simp(sqrt(~d + ~e * (~x) ^ 2) / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x))) * Antiderivative((~a + ~b * acosh(~c * ~x)) ^ ~n / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && GtQ(~n, 0))
    @apply_utils Antiderivative(sqrt(~d1 + ~(e1') * ~x) * sqrt(~d2 + ~(e2') * ~x) * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~x * sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / 2 - ((~b * ~c * ~n) / 2) * Simp(sqrt(~d1 + ~e1 * ~x) / sqrt(1 + ~c * ~x)) * Simp(sqrt(~d2 + ~e2 * ~x) / sqrt(-1 + ~c * ~x)) * Antiderivative(~x * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x)) - (1 / 2) * Simp(sqrt(~d1 + ~e1 * ~x) / sqrt(1 + ~c * ~x)) * Simp(sqrt(~d2 + ~e2 * ~x) / sqrt(-1 + ~c * ~x)) * Antiderivative((~a + ~b * acosh(~c * ~x)) ^ ~n / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && GtQ(~n, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~x * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~p + 1) + ((2 * ~d * ~p) / (2 * ~p + 1)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * ~p + 1)) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative(~x * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && GtQ(~p, 0)))
    @apply_utils Antiderivative((~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((~x * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~p + 1) + ((2 * ~d1 * ~d2 * ~p) / (2 * ~p + 1)) * Antiderivative((~d1 + ~e1 * ~x) ^ (~p - 1) * (~d2 + ~e2 * ~x) ^ (~p - 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * ~p + 1)) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative(~x * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && GtQ(~p, 0))))
    @apply_utils Antiderivative((~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n') / (~d + ~(e') * (~x) ^ 2) ^ (3 / 2), ~x) => (~x * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~d * sqrt(~d + ~e * (~x) ^ 2)) + ((~b * ~c * ~n) / ~d) * Simp((sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~x * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1)) / (1 - (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && GtQ(~n, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n') / ((~d1 + ~(e1') * ~x) ^ (3 / 2) * (~d2 + ~(e2') * ~x) ^ (3 / 2)), ~x) => (~x * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (~d1 * ~d2 * sqrt(~d1 + ~e1 * ~x) * sqrt(~d2 + ~e2 * ~x)) + ((~b * ~c * ~n) / (~d1 * ~d2)) * Simp(sqrt(1 + ~c * ~x) / sqrt(~d1 + ~e1 * ~x)) * Simp(sqrt(-1 + ~c * ~x) / sqrt(~d2 + ~e2 * ~x)) * Antiderivative((~x * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1)) / (1 - (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && GtQ(~n, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((-(~x) * (~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~d * (~p + 1)) + ((2 * ~p + 3) / (2 * ~d * (~p + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * (~p + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative(~x * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~n, 0) && (LtQ(~p, -1) && NeQ(~p, -3 / 2))))
    @apply_utils Antiderivative((~d1 + ~(e1') * ~x) ^ ~p * (~d2 + ~(e2') * ~x) ^ ~p * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => ((-(~x) * (~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n) / (2 * ~d1 * ~d2 * (~p + 1)) + ((2 * ~p + 3) / (2 * ~d1 * ~d2 * (~p + 1))) * Antiderivative((~d1 + ~e1 * ~x) ^ (~p + 1) * (~d2 + ~e2 * ~x) ^ (~p + 1) * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x)) - ((~b * ~c * ~n) / (2 * (~p + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative(~x * (1 + ~c * ~x) ^ (~p + 1 / 2) * (-1 + ~c * ~x) ^ (~p + 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (GtQ(~n, 0) && (LtQ(~p, -1) && NeQ(~p, -3 / 2)))))
    @apply_utils Antiderivative((~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n') / (~d + ~(e') * (~x) ^ 2), ~x) => (-1 / (~c * ~d)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * csch(~x), ~x), ~x, acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(~n, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n, ~x) => (Simp(sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x) * (~d + ~e * (~x) ^ 2) ^ ~p) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) - ((~c * (2 * ~p + 1)) / (~b * (~n + 1))) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Antiderivative(~x * (1 + ~c * ~x) ^ (~p - 1 / 2) * (-1 + ~c * ~x) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (LtQ(~n, -1) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative((~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~n, ~x) => (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x) * (~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1)) / (~b * ~c * (~n + 1)) - ((~c * (2 * ~p + 1)) / (~b * (~n + 1))) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Antiderivative(~x * (-1 + (~c) ^ 2 * (~x) ^ 2) ^ (~p - 1 / 2) * (~a + ~b * acosh(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~p], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && (LtQ(~n, -1) && IntegerQ(~p + 1 / 2))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (1 / (~b * ~c)) * Simp((~d + ~e * (~x) ^ 2) ^ ~p / ((1 + ~c * ~x) ^ ~p * (-1 + ~c * ~x) ^ ~p)) * Subst(Antiderivative((~x) ^ ~n * sinh(-(~a) / ~b + ~x / ~b) ^ (2 * ~p + 1), ~x), ~x, ~a + ~b * acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IGtQ(2 * ~p, 0))
    @apply_utils Antiderivative((~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => (1 / (~b * ~c)) * Simp((~d1 + ~e1 * ~x) ^ ~p / (1 + ~c * ~x) ^ ~p) * Simp((~d2 + ~e2 * ~x) ^ ~p / (-1 + ~c * ~x) ^ ~p) * Subst(Antiderivative((~x) ^ ~n * sinh(-(~a) / ~b + ~x / ~b) ^ (2 * ~p + 1), ~x), ~x, ~a + ~b * acosh(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~n], ~x) && (EqQ(~e1, ~c * ~d1) && (EqQ(~e2, -(~c) * ~d2) && IGtQ(2 * ~p, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * acosh(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / (sqrt(1 + ~c * ~x) * sqrt(-1 + ~c * ~x)), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~p, 0) || ILtQ(~p + 1 / 2, 0)))
    #= Antiderivative(((~d)+(~e')*(~x)^2)^(~p')*((~a')+(~b')*acosh((~c')*(~x)))^(~n),~x) :=  1/(b*c^(2*p+1))*Subst(Antiderivative(x^n*(c^2*d+e*cosh(-a/b+x/b)^2)^p*sinh(-a/b+ x/b),x),x,a+b*acosh(c*x)) <-- FreeQ([a,b,c,d,e,n],x) && IGtQ(p,0) =#
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acosh(~c * ~x)) ^ ~n, (~d + ~e * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (NeQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~p) && (~p > 0 || IGtQ(~n, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable((~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x)
    @apply_utils Antiderivative((~d1 + ~(e1') * ~x) ^ ~(p') * (~d2 + ~(e2') * ~x) ^ ~(p') * (~(a') + ~(b') * acosh(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable((~d1 + ~e1 * ~x) ^ ~p * (~d2 + ~e2 * ~x) ^ ~p * (~a + ~b * acosh(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d1, ~e1, ~d2, ~e2, ~n, ~p], ~x)
end
