int_rules_7_3_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 7.3.4*Miscellaneous*inverse*hyperbolic*tangent =#
    @apply_utils Antiderivative(atanh(~a + ~(b') * (~x) ^ ~n), ~x) => ~x * atanh(~a + ~b * (~x) ^ ~n) - ~b * ~n * Antiderivative((~x) ^ ~n / (((1 - (~a) ^ 2) - 2 * ~a * ~b * (~x) ^ ~n) - (~b) ^ 2 * (~x) ^ (2 * ~n)), ~x) <-- FreeQ([~a, ~b, ~n], ~x)
    @apply_utils Antiderivative(acoth(~a + ~(b') * (~x) ^ ~n), ~x) => ~x * acoth(~a + ~b * (~x) ^ ~n) - ~b * ~n * Antiderivative((~x) ^ ~n / (((1 - (~a) ^ 2) - 2 * ~a * ~b * (~x) ^ ~n) - (~b) ^ 2 * (~x) ^ (2 * ~n)), ~x) <-- FreeQ([~a, ~b, ~n], ~x)
    @apply_utils Antiderivative(atanh(~(a') + ~(b') * (~x) ^ ~(n')) / ~x, ~x) => (1 / 2) * Antiderivative(log(1 + ~a + ~b * (~x) ^ ~n) / ~x, ~x) - (1 / 2) * Antiderivative(log((1 - ~a) - ~b * (~x) ^ ~n) / ~x, ~x) <-- FreeQ([~a, ~b, ~n], ~x)
    @apply_utils Antiderivative(acoth(~(a') + ~(b') * (~x) ^ ~(n')) / ~x, ~x) => (1 / 2) * Antiderivative(log(1 + 1 / (~a + ~b * (~x) ^ ~n)) / ~x, ~x) - (1 / 2) * Antiderivative(log(1 - 1 / (~a + ~b * (~x) ^ ~n)) / ~x, ~x) <-- FreeQ([~a, ~b, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * atanh(~a + ~(b') * (~x) ^ ~n), ~x) => ((~x) ^ (~m + 1) * atanh(~a + ~b * (~x) ^ ~n)) / (~m + 1) - ((~b * ~n) / (~m + 1)) * Antiderivative((~x) ^ (~m + ~n) / (((1 - (~a) ^ 2) - 2 * ~a * ~b * (~x) ^ ~n) - (~b) ^ 2 * (~x) ^ (2 * ~n)), ~x) <-- FreeQ([~a, ~b], ~x) && (RationalQ(~m, ~n) && (NeQ(~m, -1) && NeQ(~m + 1, ~n)))
    @apply_utils Antiderivative((~x) ^ ~(m') * acoth(~a + ~(b') * (~x) ^ ~n), ~x) => ((~x) ^ (~m + 1) * acoth(~a + ~b * (~x) ^ ~n)) / (~m + 1) - ((~b * ~n) / (~m + 1)) * Antiderivative((~x) ^ (~m + ~n) / (((1 - (~a) ^ 2) - 2 * ~a * ~b * (~x) ^ ~n) - (~b) ^ 2 * (~x) ^ (2 * ~n)), ~x) <-- FreeQ([~a, ~b], ~x) && (RationalQ(~m, ~n) && (NeQ(~m, -1) && NeQ(~m + 1, ~n)))
    @apply_utils Antiderivative(atanh(~(a') + ~(b') * (~f) ^ (~(c') + ~(d') * ~x)), ~x) => (1 / 2) * Antiderivative(log(1 + ~a + ~b * (~f) ^ (~c + ~d * ~x)), ~x) - (1 / 2) * Antiderivative(log((1 - ~a) - ~b * (~f) ^ (~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~f], ~x)
    @apply_utils Antiderivative(acoth(~(a') + ~(b') * (~f) ^ (~(c') + ~(d') * ~x)), ~x) => (1 / 2) * Antiderivative(log(1 + 1 / (~a + ~b * (~f) ^ (~c + ~d * ~x))), ~x) - (1 / 2) * Antiderivative(log(1 - 1 / (~a + ~b * (~f) ^ (~c + ~d * ~x))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~f], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * atanh(~(a') + ~(b') * (~f) ^ (~(c') + ~(d') * ~x)), ~x) => (1 / 2) * Antiderivative((~x) ^ ~m * log(1 + ~a + ~b * (~f) ^ (~c + ~d * ~x)), ~x) - (1 / 2) * Antiderivative((~x) ^ ~m * log((1 - ~a) - ~b * (~f) ^ (~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~f], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * acoth(~(a') + ~(b') * (~f) ^ (~(c') + ~(d') * ~x)), ~x) => (1 / 2) * Antiderivative((~x) ^ ~m * log(1 + 1 / (~a + ~b * (~f) ^ (~c + ~d * ~x))), ~x) - (1 / 2) * Antiderivative((~x) ^ ~m * log(1 - 1 / (~a + ~b * (~f) ^ (~c + ~d * ~x))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~f], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative(~(u') * atanh(~(c') / (~(a') + ~(b') * (~x) ^ ~(n'))) ^ ~(m'), ~x) => Antiderivative(~u * acoth(~a / ~c + (~b * (~x) ^ ~n) / ~c) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~c, ~n, ~m], ~x)
    @apply_utils Antiderivative(~(u') * acoth(~(c') / (~(a') + ~(b') * (~x) ^ ~(n'))) ^ ~(m'), ~x) => Antiderivative(~u * atanh(~a / ~c + (~b * (~x) ^ ~n) / ~c) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~c, ~n, ~m], ~x)
    @apply_utils Antiderivative(atanh((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)), ~x) => ~x * atanh((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) - ~c * Antiderivative(~x / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ(~b, (~c) ^ 2)
    @apply_utils Antiderivative(acoth((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)), ~x) => ~x * acoth((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) - ~c * Antiderivative(~x / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ(~b, (~c) ^ 2)
    @apply_utils Antiderivative(atanh((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)) / ~x, ~x) => atanh((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) * log(~x) - ~c * Antiderivative(log(~x) / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ(~b, (~c) ^ 2)
    @apply_utils Antiderivative(acoth((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)) / ~x, ~x) => acoth((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) * log(~x) - ~c * Antiderivative(log(~x) / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ(~b, (~c) ^ 2)
    @apply_utils Antiderivative((~(d') * ~x) ^ ~(m') * atanh((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)), ~x) => ((~d * ~x) ^ (~m + 1) * atanh((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2))) / (~d * (~m + 1)) - (~c / (~d * (~m + 1))) * Antiderivative((~d * ~x) ^ (~m + 1) / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (EqQ(~b, (~c) ^ 2) && NeQ(~m, -1))
    @apply_utils Antiderivative((~(d') * ~x) ^ ~(m') * acoth((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)), ~x) => ((~d * ~x) ^ (~m + 1) * acoth((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2))) / (~d * (~m + 1)) - (~c / (~d * (~m + 1))) * Antiderivative((~d * ~x) ^ (~m + 1) / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (EqQ(~b, (~c) ^ 2) && NeQ(~m, -1))
    @apply_utils Antiderivative(1 / (sqrt(~(a') + ~(b') * (~x) ^ 2) * atanh((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2))), ~x) => (1 / ~c) * log(atanh((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2))) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ(~b, (~c) ^ 2)
    @apply_utils Antiderivative(1 / (sqrt(~(a') + ~(b') * (~x) ^ 2) * acoth((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2))), ~x) => (-1 / ~c) * log(acoth((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2))) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ(~b, (~c) ^ 2)
    @apply_utils Antiderivative(atanh((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)) ^ ~(m') / sqrt(~(a') + ~(b') * (~x) ^ 2), ~x) => atanh((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) ^ (~m + 1) / (~c * (~m + 1)) <-- FreeQ([~a, ~b, ~c, ~m], ~x) && (EqQ(~b, (~c) ^ 2) && NeQ(~m, -1))
    @apply_utils Antiderivative(acoth((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)) ^ ~(m') / sqrt(~(a') + ~(b') * (~x) ^ 2), ~x) => -(acoth((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) ^ (~m + 1)) / (~c * (~m + 1)) <-- FreeQ([~a, ~b, ~c, ~m], ~x) && (EqQ(~b, (~c) ^ 2) && NeQ(~m, -1))
    @apply_utils Antiderivative(atanh((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)) ^ ~(m') / sqrt(~(d') + ~(e') * (~x) ^ 2), ~x) => (sqrt(~a + ~b * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative(atanh((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) ^ ~m / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (EqQ(~b, (~c) ^ 2) && EqQ(~b * ~d - ~a * ~e, 0))
    @apply_utils Antiderivative(acoth((~(c') * ~x) / sqrt(~(a') + ~(b') * (~x) ^ 2)) ^ ~(m') / sqrt(~(d') + ~(e') * (~x) ^ 2), ~x) => (sqrt(~a + ~b * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative(acoth((~c * ~x) / sqrt(~a + ~b * (~x) ^ 2)) ^ ~m / sqrt(~a + ~b * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (EqQ(~b, (~c) ^ 2) && EqQ(~b * ~d - ~a * ~e, 0))
    If(TrueQ($LoadShowSteps), Antiderivative((~u)*(~v)^(~n'), ~x) := With([tmp = InverseFunctionOfLinear(u, x)], ShowStep("", "Antiderivative(f(x,atanh(a+b*x))/(1-(a+b*x)^2),x)", "Subst(Antiderivative(f(-a/b+tanh(x)/b,x),x),x,atanh(a+b*x))/b", Hold( (-Discriminant(v, x)/(4*Coefficient(v, x, 2)))^n/ Coefficient(tmp((1)), x, 1)* Subst( Antiderivative(SimplifyIntegrand( SubstForInverseFunction(u, tmp, x)*sech(x)^(2*(n + 1)), x), x), x, tmp))) <-- Not(FalseQ(tmp)) && EqQ(Head(tmp), atanh) && EqQ(Discriminant(v, x)*tmp((1))^2 - D(v, x)^2, 0)) <-- SimplifyFlag && QuadraticQ(v, x) && ILtQ(n, 0) && PosQ(Discriminant(v, x)) && MatchQ(u, (~r')*(~f)^(~w) <-- FreeQ(f, x)), Antiderivative((~u)*(~v)^(~n'), ~x) := With([tmp = InverseFunctionOfLinear(u, x)], (-Discriminant(v, x)/(4*Coefficient(v, x, 2)))^n/ Coefficient(tmp((1)), x, 1)* Subst( Antiderivative(SimplifyIntegrand( SubstForInverseFunction(u, tmp, x)*sech(x)^(2*(n + 1)), x), x), x, tmp) <-- Not(FalseQ(tmp)) && EqQ(Head(tmp), atanh) && EqQ(Discriminant(v, x)*tmp((1))^2 - D(v, x)^2, 0)) <-- QuadraticQ(v, x) && ILtQ(n, 0) && PosQ(Discriminant(v, x)) && MatchQ(u, (~r')*(~f)^(~w) <-- FreeQ(f, x)))
    If(TrueQ($LoadShowSteps), Antiderivative((~u)*(~v)^(~n'), ~x) := With([tmp = InverseFunctionOfLinear(u, x)], ShowStep("", "Antiderivative(f(x,acoth(a+b*x))/(1-(a+b*x)^2),x)", "Subst(Antiderivative(f(-a/b+coth(x)/b,x),x),x,acoth(a+b*x))/b", Hold( (-Discriminant(v, x)/(4*Coefficient(v, x, 2)))^n/ Coefficient(tmp((1)), x, 1)* Subst( Antiderivative(SimplifyIntegrand( SubstForInverseFunction(u, tmp, x)*(-csch(x)^2)^(n + 1), x), x), x, tmp))) <-- Not(FalseQ(tmp)) && EqQ(Head(tmp), acoth) && EqQ(Discriminant(v, x)*tmp((1))^2 - D(v, x)^2, 0)) <-- SimplifyFlag && QuadraticQ(v, x) && ILtQ(n, 0) && PosQ(Discriminant(v, x)) && MatchQ(u, (~r')*(~f)^(~w) <-- FreeQ(f, x)), Antiderivative((~u)*(~v)^(~n'), ~x) := With([tmp = InverseFunctionOfLinear(u, x)], (-Discriminant(v, x)/(4*Coefficient(v, x, 2)))^n/ Coefficient(tmp((1)), x, 1)* Subst( Antiderivative(SimplifyIntegrand( SubstForInverseFunction(u, tmp, x)*(-csch(x)^2)^(n + 1), x), x), x, tmp) <-- Not(FalseQ(tmp)) && EqQ(Head(tmp), acoth) && EqQ(Discriminant(v, x)*tmp((1))^2 - D(v, x)^2, 0)) <-- QuadraticQ(v, x) && ILtQ(n, 0) && PosQ(Discriminant(v, x)) && MatchQ(u, (~r')*(~f)^(~w) <-- FreeQ(f, x)))
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => ~x * atanh(~c + ~d * tanh(~a + ~b * ~x)) + ~b * Antiderivative(~x / ((~c - ~d) + ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => ~x * acoth(~c + ~d * tanh(~a + ~b * ~x)) + ~b * Antiderivative(~x / ((~c - ~d) + ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => ~x * atanh(~c + ~d * coth(~a + ~b * ~x)) + ~b * Antiderivative(~x / ((~c - ~d) - ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => ~x * acoth(~c + ~d * coth(~a + ~b * ~x)) + ~b * Antiderivative(~x / ((~c - ~d) - ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => (~x * atanh(~c + ~d * tanh(~a + ~b * ~x)) + ~b * ((1 - ~c) - ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / ((1 - ~c) + ~d + ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ~b * (1 + ~c + ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) + (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => (~x * acoth(~c + ~d * tanh(~a + ~b * ~x)) + ~b * ((1 - ~c) - ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / ((1 - ~c) + ~d + ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ~b * (1 + ~c + ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) + (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => (~x * atanh(~c + ~d * coth(~a + ~b * ~x)) + ~b * (1 + ~c + ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) - (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ~b * ((1 - ~c) - ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 - ~c) + ~d) - ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => (~x * acoth(~c + ~d * coth(~a + ~b * ~x)) + ~b * (1 + ~c + ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) - (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ~b * ((1 - ~c) - ~d) * Antiderivative((~x * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 - ~c) + ~d) - ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c - ~d) ^ 2, 1)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * tanh(~a + ~b * ~x))) / (~f * (~m + 1)) + (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / ((~c - ~d) + ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * tanh(~a + ~b * ~x))) / (~f * (~m + 1)) + (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / ((~c - ~d) + ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * coth(~a + ~b * ~x))) / (~f * (~m + 1)) + (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / ((~c - ~d) - ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * coth(~a + ~b * ~x))) / (~f * (~m + 1)) + (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / ((~c - ~d) - ~c * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * tanh(~a + ~b * ~x))) / (~f * (~m + 1)) + ((~b * ((1 - ~c) - ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / ((1 - ~c) + ~d + ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ((~b * (1 + ~c + ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) + (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * tanh(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * tanh(~a + ~b * ~x))) / (~f * (~m + 1)) + ((~b * ((1 - ~c) - ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / ((1 - ~c) + ~d + ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ((~b * (1 + ~c + ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) + (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * coth(~a + ~b * ~x))) / (~f * (~m + 1)) + ((~b * (1 + ~c + ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) - (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ((~b * ((1 - ~c) - ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 - ~c) + ~d) - ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * coth(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * coth(~a + ~b * ~x))) / (~f * (~m + 1)) + ((~b * (1 + ~c + ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 + ~c) - ~d) - (1 + ~c + ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x)) - ((~b * ((1 - ~c) - ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * ~a + 2 * ~b * ~x)) / (((1 - ~c) + ~d) - ((1 - ~c) - ~d) * ℯ ^ (2 * ~a + 2 * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c - ~d) ^ 2, 1))
    @apply_utils Antiderivative(atanh(tan(~(a') + ~(b') * ~x)), ~x) => ~x * atanh(tan(~a + ~b * ~x)) - ~b * Antiderivative(~x * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative(acoth(tan(~(a') + ~(b') * ~x)), ~x) => ~x * acoth(tan(~a + ~b * ~x)) - ~b * Antiderivative(~x * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative(atanh(cot(~(a') + ~(b') * ~x)), ~x) => ~x * atanh(cot(~a + ~b * ~x)) - ~b * Antiderivative(~x * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative(acoth(cot(~(a') + ~(b') * ~x)), ~x) => ~x * acoth(cot(~a + ~b * ~x)) - ~b * Antiderivative(~x * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b], ~x)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(tan(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * atanh(tan(~a + ~b * ~x))) / (~f * (~m + 1)) - (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(tan(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * acoth(tan(~a + ~b * ~x))) / (~f * (~m + 1)) - (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(cot(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * atanh(cot(~a + ~b * ~x))) / (~f * (~m + 1)) - (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(cot(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * acoth(cot(~a + ~b * ~x))) / (~f * (~m + 1)) - (~b / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) * sec(2 * ~a + 2 * ~b * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => ~x * atanh(~c + ~d * tan(~a + ~b * ~x)) + im * ~b * Antiderivative(~x / (~c + im * ~d + ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c + im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => ~x * acoth(~c + ~d * tan(~a + ~b * ~x)) + im * ~b * Antiderivative(~x / (~c + im * ~d + ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c + im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => ~x * atanh(~c + ~d * cot(~a + ~b * ~x)) + im * ~b * Antiderivative(~x / ((~c - im * ~d) - ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c - im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => ~x * acoth(~c + ~d * cot(~a + ~b * ~x)) + im * ~b * Antiderivative(~x / ((~c - im * ~d) - ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && EqQ((~c - im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => (~x * atanh(~c + ~d * tan(~a + ~b * ~x)) + im * ~b * ((1 - ~c) + im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) - im * ~d) + ((1 - ~c) + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) - im * ~b * ((1 + ~c) - im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (1 + ~c + im * ~d + ((1 + ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c + im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => (~x * acoth(~c + ~d * tan(~a + ~b * ~x)) + im * ~b * ((1 - ~c) + im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) - im * ~d) + ((1 - ~c) + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) - im * ~b * ((1 + ~c) - im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (1 + ~c + im * ~d + ((1 + ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c + im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(atanh(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => (~x * atanh(~c + ~d * cot(~a + ~b * ~x)) - im * ~b * ((1 - ~c) - im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) + im * ~d) - ((1 - ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) + im * ~b * (1 + ~c + im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 + ~c) - im * ~d) - (1 + ~c + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c - im * ~d) ^ 2, 1)
    @apply_utils Antiderivative(acoth(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => (~x * acoth(~c + ~d * cot(~a + ~b * ~x)) - im * ~b * ((1 - ~c) - im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) + im * ~d) - ((1 - ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) + im * ~b * (1 + ~c + im * ~d) * Antiderivative((~x * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 + ~c) - im * ~d) - (1 + ~c + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ((~c - im * ~d) ^ 2, 1)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * tan(~a + ~b * ~x))) / (~f * (~m + 1)) + ((im * ~b) / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / (~c + im * ~d + ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c + im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * tan(~a + ~b * ~x))) / (~f * (~m + 1)) + ((im * ~b) / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / (~c + im * ~d + ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c + im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * cot(~a + ~b * ~x))) / (~f * (~m + 1)) + ((im * ~b) / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / ((~c - im * ~d) - ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c - im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * cot(~a + ~b * ~x))) / (~f * (~m + 1)) + ((im * ~b) / (~f * (~m + 1))) * Antiderivative((~e + ~f * ~x) ^ (~m + 1) / ((~c - im * ~d) - ~c * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && EqQ((~c - im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * tan(~a + ~b * ~x))) / (~f * (~m + 1)) + ((im * ~b * ((1 - ~c) + im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) - im * ~d) + ((1 - ~c) + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) - ((im * ~b * ((1 + ~c) - im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (1 + ~c + im * ~d + ((1 + ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c + im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * tan(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * tan(~a + ~b * ~x))) / (~f * (~m + 1)) + ((im * ~b * ((1 - ~c) + im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) - im * ~d) + ((1 - ~c) + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) - ((im * ~b * ((1 + ~c) - im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (1 + ~c + im * ~d + ((1 + ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c + im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * atanh(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * atanh(~c + ~d * cot(~a + ~b * ~x))) / (~f * (~m + 1)) - ((im * ~b * ((1 - ~c) - im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) + im * ~d) - ((1 - ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) + ((im * ~b * (1 + ~c + im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 + ~c) - im * ~d) - (1 + ~c + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c - im * ~d) ^ 2, 1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * acoth(~(c') + ~(d') * cot(~(a') + ~(b') * ~x)), ~x) => (((~e + ~f * ~x) ^ (~m + 1) * acoth(~c + ~d * cot(~a + ~b * ~x))) / (~f * (~m + 1)) - ((im * ~b * ((1 - ~c) - im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 - ~c) + im * ~d) - ((1 - ~c) - im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x)) + ((im * ~b * (1 + ~c + im * ~d)) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)) / (((1 + ~c) - im * ~d) - (1 + ~c + im * ~d) * ℯ ^ (2 * im * ~a + 2 * im * ~b * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~m, 0) && NeQ((~c - im * ~d) ^ 2, 1))
    @apply_utils Antiderivative(atanh(~u), ~x) => ~x * atanh(~u) - Antiderivative(SimplifyIntegrand((~x * D(~u, ~x)) / (1 - (~u) ^ 2), ~x), ~x) <-- InverseFunctionFreeQ(~u, ~x)
    @apply_utils Antiderivative(acoth(~u), ~x) => ~x * acoth(~u) - Antiderivative(SimplifyIntegrand((~x * D(~u, ~x)) / (1 - (~u) ^ 2), ~x), ~x) <-- InverseFunctionFreeQ(~u, ~x)
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * (~(a') + ~(b') * atanh(~u)), ~x) => ((~c + ~d * ~x) ^ (~m + 1) * (~a + ~b * atanh(~u))) / (~d * (~m + 1)) - (~b / (~d * (~m + 1))) * Antiderivative(SimplifyIntegrand(((~c + ~d * ~x) ^ (~m + 1) * D(~u, ~x)) / (1 - (~u) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (NeQ(~m, -1) && (InverseFunctionFreeQ(~u, ~x) && (Not(FunctionOfQ((~c + ~d * ~x) ^ (~m + 1), ~u, ~x)) && FalseQ(PowerVariableExpn(~u, ~m + 1, ~x)))))
    @apply_utils Antiderivative((~(c') + ~(d') * ~x) ^ ~(m') * (~(a') + ~(b') * acoth(~u)), ~x) => ((~c + ~d * ~x) ^ (~m + 1) * (~a + ~b * acoth(~u))) / (~d * (~m + 1)) - (~b / (~d * (~m + 1))) * Antiderivative(SimplifyIntegrand(((~c + ~d * ~x) ^ (~m + 1) * D(~u, ~x)) / (1 - (~u) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (NeQ(~m, -1) && (InverseFunctionFreeQ(~u, ~x) && (Not(FunctionOfQ((~c + ~d * ~x) ^ (~m + 1), ~u, ~x)) && FalseQ(PowerVariableExpn(~u, ~m + 1, ~x)))))
    @apply_utils Antiderivative(~v * (~(a') + ~(b') * atanh(~u)), ~x) => With([w = IntHide(~v, ~x)], Dist(~a + ~b * atanh(~u), w, ~x) - ~b * Antiderivative(SimplifyIntegrand((w * D(~u, ~x)) / (1 - (~u) ^ 2), ~x), ~x) <-- InverseFunctionFreeQ(w, ~x)) <-- FreeQ([~a, ~b], ~x) && (InverseFunctionFreeQ(~u, ~x) && (Not(MatchQ(~v, (~(c') + ~(d') * ~x) ^ ~(m') <-- FreeQ([c, d, m], ~x))) && FalseQ(FunctionOfLinear(~v * (~a + ~b * atanh(~u)), ~x))))
    @apply_utils Antiderivative(~v * (~(a') + ~(b') * acoth(~u)), ~x) => With([w = IntHide(~v, ~x)], Dist(~a + ~b * acoth(~u), w, ~x) - ~b * Antiderivative(SimplifyIntegrand((w * D(~u, ~x)) / (1 - (~u) ^ 2), ~x), ~x) <-- InverseFunctionFreeQ(w, ~x)) <-- FreeQ([~a, ~b], ~x) && (InverseFunctionFreeQ(~u, ~x) && (Not(MatchQ(~v, (~(c') + ~(d') * ~x) ^ ~(m') <-- FreeQ([c, d, m], ~x))) && FalseQ(FunctionOfLinear(~v * (~a + ~b * acoth(~u)), ~x))))
end
