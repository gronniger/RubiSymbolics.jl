int_rules_7_3_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 7.3.3*Exponentials*of*inverse*hyperbolic*tangent =#
    @apply_utils Antiderivative(ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => Antiderivative((1 + ~a * ~x) ^ ((~n + 1) / 2) / ((1 - ~a * ~x) ^ ((~n - 1) / 2) * sqrt(1 - (~a) ^ 2 * (~x) ^ 2)), ~x) <-- FreeQ(~a, ~x) && IntegerQ((~n - 1) / 2)
    @apply_utils Antiderivative((~x) ^ ~(m') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => Antiderivative((~x) ^ ~m * ((1 + ~a * ~x) ^ ((~n + 1) / 2) / ((1 - ~a * ~x) ^ ((~n - 1) / 2) * sqrt(1 - (~a) ^ 2 * (~x) ^ 2))), ~x) <-- FreeQ([~a, ~m], ~x) && IntegerQ((~n - 1) / 2)
    @apply_utils Antiderivative(ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => Antiderivative((1 + ~a * ~x) ^ (~n / 2) / (1 - ~a * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~n], ~x) && Not(IntegerQ((~n - 1) / 2))
    @apply_utils Antiderivative((~x) ^ ~(m') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => Antiderivative(((~x) ^ ~m * (1 + ~a * ~x) ^ (~n / 2)) / (1 - ~a * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~m, ~n], ~x) && Not(IntegerQ((~n - 1) / 2))
    @apply_utils Antiderivative((~c + ~(d') * ~x) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~n * Antiderivative((~c + ~d * ~x) ^ (~p - ~n) * (1 - (~a) ^ 2 * (~x) ^ 2) ^ (~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ(~a * ~c + ~d, 0) && (IntegerQ((~n - 1) / 2) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~c + ~(d') * ~x) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~n * Antiderivative((~e + ~f * ~x) ^ ~m * (~c + ~d * ~x) ^ (~p - ~n) * (1 - (~a) ^ 2 * (~x) ^ 2) ^ (~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (EqQ(~a * ~c + ~d, 0) && (IntegerQ((~n - 1) / 2) && ((IntegerQ(~p) || (EqQ(~p, ~n / 2) || EqQ((~p - ~n / 2) - 1, 0))) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative((~u * (1 + (~d * ~x) / ~c) ^ ~p * (1 + ~a * ~x) ^ (~n / 2)) / (1 - ~a * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * (~c) ^ 2 - (~d) ^ 2, 0) && (IntegerQ(~p) || GtQ(~c, 0)))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => Antiderivative((~u * (~c + ~d * ~x) ^ ~p * (1 + ~a * ~x) ^ (~n / 2)) / (1 - ~a * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * (~c) ^ 2 - (~d) ^ 2, 0) && Not(IntegerQ(~p) || GtQ(~c, 0)))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / ~x) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~d) ^ ~p * Antiderivative((~u * (1 + (~c * ~x) / ~d) ^ ~p * ℯ ^ (~n * atanh(~a * ~x))) / (~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && IntegerQ(~p))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / ~x) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (-1) ^ (~n / 2) * (~c) ^ ~p * Antiderivative((~u * (1 + ~d / (~c * ~x)) ^ ~p * (1 + 1 / (~a * ~x)) ^ (~n / 2)) / (1 - 1 / (~a * ~x)) ^ (~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && (Not(IntegerQ(~p)) && (IntegerQ(~n / 2) && GtQ(~c, 0))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / ~x) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => Antiderivative((~u * (~c + ~d / ~x) ^ ~p * (1 + ~a * ~x) ^ (~n / 2)) / (1 - ~a * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && (Not(IntegerQ(~p)) && (IntegerQ(~n / 2) && Not(GtQ(~c, 0)))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / ~x) ^ ~p * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (((~x) ^ ~p * (~c + ~d / ~x) ^ ~p) / (1 + (~c * ~x) / ~d) ^ ~p) * Antiderivative((~u * (1 + (~c * ~x) / ~d) ^ ~p * ℯ ^ (~n * atanh(~a * ~x))) / (~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && Not(IntegerQ(~p)))
    @apply_utils Antiderivative(ℯ ^ (~n * atanh(~(a') * ~x)) / (~c + ~(d') * (~x) ^ 2) ^ (3 / 2), ~x) => ((~n - ~a * ~x) * ℯ ^ (~n * atanh(~a * ~x))) / (~a * ~c * ((~n) ^ 2 - 1) * sqrt(~c + ~d * (~x) ^ 2)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~n)))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => ((~n + 2 * ~a * (~p + 1) * ~x) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * atanh(~a * ~x))) / (~a * ~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2)) - ((2 * (~p + 1) * (2 * ~p + 3)) / (~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2))) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (LtQ(~p, -1) && (Not(IntegerQ(~n)) && (NeQ((~n) ^ 2 - 4 * (~p + 1) ^ 2, 0) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative(ℯ ^ (~(n') * atanh(~(a') * ~x)) / (~c + ~(d') * (~x) ^ 2), ~x) => ℯ ^ (~n * atanh(~a * ~x)) / (~a * ~c * ~n) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~n / 2)))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative((1 - (~a) ^ 2 * (~x) ^ 2) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (IntegerQ(~p) && (IGtQ((~n + 1) / 2, 0) && Not(IntegerQ(~p - ~n / 2)))))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative((1 - (~a) ^ 2 * (~x) ^ 2) ^ (~p + ~n / 2) / (1 - ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (IntegerQ(~p) && (ILtQ((~n - 1) / 2, 0) && Not(IntegerQ(~p - ~n / 2)))))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative((1 - ~a * ~x) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (IntegerQ(~p) || GtQ(~c, 0)))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (~c) ^ (~n / 2) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && IGtQ(~n / 2, 0)))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (1 / (~c) ^ (~n / 2)) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p + ~n / 2) / (1 - ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && ILtQ(~n / 2, 0)))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (((~c) ^ IntPart(~p) * (~c + ~d * (~x) ^ 2) ^ FracPart(~p)) / (1 - (~a) ^ 2 * (~x) ^ 2) ^ FracPart(~p)) * Antiderivative((1 - (~a) ^ 2 * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~p) || GtQ(~c, 0)))
    @apply_utils Antiderivative((~x * ℯ ^ (~n * atanh(~(a') * ~x))) / (~c + ~(d') * (~x) ^ 2) ^ (3 / 2), ~x) => ((1 - ~a * ~n * ~x) * ℯ ^ (~n * atanh(~a * ~x))) / (~d * ((~n) ^ 2 - 1) * sqrt(~c + ~d * (~x) ^ 2)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~n)))
    @apply_utils Antiderivative(~x * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => ((~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * atanh(~a * ~x))) / (2 * ~d * (~p + 1)) - ((~a * ~c * ~n) / (2 * ~d * (~p + 1))) * Antiderivative((~c + ~d * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (LtQ(~p, -1) && (Not(IntegerQ(~n)) && IntegerQ(2 * ~p))))
    #= Antiderivative((~x)*((~c)+(~d')*(~x)^2)^(~p)*ℯ^((~n)*atanh((~a')*(~x))),~x) :=  -(2*(p+1)+a*n*x)*(c+d*x^2)^(p+1)*ℯ^(n*atanh(a*x))/(d*(n^2-4*(p+1)^2) ) - n*(2*p+3)/(a*c*(n^2-4*(p+1)^2))*Antiderivative((c+d*x^2)^(p+1)*ℯ^(n*atanh(a* x)),x) <-- FreeQ([a,c,d,n],x) && EqQ(a^2*c+d,0) && LeQ(p,-1) &&  NeQ(n^2-4*(p+1)^2,0) && Not(IntegerQ(n)) =#
    @apply_utils Antiderivative((~x) ^ 2 * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => ((1 - ~a * ~n * ~x) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * atanh(~a * ~x))) / (~a * ~d * ~n * ((~n) ^ 2 - 1)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (EqQ((~n) ^ 2 + 2 * (~p + 1), 0) && Not(IntegerQ(~n))))
    @apply_utils Antiderivative((~x) ^ 2 * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (-((~n + 2 * (~p + 1) * ~a * ~x)) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * atanh(~a * ~x))) / (~a * ~d * ((~n) ^ 2 - 4 * (~p + 1) ^ 2)) + (((~n) ^ 2 + 2 * (~p + 1)) / (~d * ((~n) ^ 2 - 4 * (~p + 1) ^ 2))) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (LtQ(~p, -1) && (Not(IntegerQ(~n)) && (NeQ((~n) ^ 2 - 4 * (~p + 1) ^ 2, 0) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative((~x) ^ ~m * (1 - (~a) ^ 2 * (~x) ^ 2) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && ((IntegerQ(~p) || GtQ(~c, 0)) && (IGtQ((~n + 1) / 2, 0) && Not(IntegerQ(~p - ~n / 2)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative(((~x) ^ ~m * (1 - (~a) ^ 2 * (~x) ^ 2) ^ (~p + ~n / 2)) / (1 - ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && ((IntegerQ(~p) || GtQ(~c, 0)) && (ILtQ((~n - 1) / 2, 0) && Not(IntegerQ(~p - ~n / 2)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative((~x) ^ ~m * (1 - ~a * ~x) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (IntegerQ(~p) || GtQ(~c, 0)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (~c) ^ (~n / 2) * Antiderivative((~x) ^ ~m * (~c + ~d * (~x) ^ 2) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && IGtQ(~n / 2, 0)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (1 / (~c) ^ (~n / 2)) * Antiderivative(((~x) ^ ~m * (~c + ~d * (~x) ^ 2) ^ (~p + ~n / 2)) / (1 - ~a * ~x) ^ ~n, ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && ILtQ(~n / 2, 0)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (((~c) ^ IntPart(~p) * (~c + ~d * (~x) ^ 2) ^ FracPart(~p)) / (1 - (~a) ^ 2 * (~x) ^ 2) ^ FracPart(~p)) * Antiderivative((~x) ^ ~m * (1 - (~a) ^ 2 * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && Not(IntegerQ(~n / 2))))
    @apply_utils Antiderivative(~u * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative(~u * (1 - ~a * ~x) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (IntegerQ(~p) || GtQ(~c, 0)))
    @apply_utils Antiderivative(~u * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (((~c) ^ IntPart(~p) * (~c + ~d * (~x) ^ 2) ^ FracPart(~p)) / ((1 - ~a * ~x) ^ FracPart(~p) * (1 + ~a * ~x) ^ FracPart(~p))) * Antiderivative(~u * (1 - ~a * ~x) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && IntegerQ(~n / 2)))
    @apply_utils Antiderivative(~u * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (((~c) ^ IntPart(~p) * (~c + ~d * (~x) ^ 2) ^ FracPart(~p)) / (1 - (~a) ^ 2 * (~x) ^ 2) ^ FracPart(~p)) * Antiderivative(~u * (1 - (~a) ^ 2 * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~p) || GtQ(~c, 0)) && Not(IntegerQ(~n / 2))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (~d) ^ ~p * Antiderivative((~u / (~x) ^ (2 * ~p)) * (1 - (~a) ^ 2 * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && IntegerQ(~p))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (~c) ^ ~p * Antiderivative(~u * (1 - 1 / (~a * ~x)) ^ ~p * (1 + 1 / (~a * ~x)) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~p)) && (IntegerQ(~n / 2) && GtQ(~c, 0))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~(a') * ~x)), ~x) => (((~x) ^ (2 * ~p) * (~c + ~d / (~x) ^ 2) ^ ~p) / ((1 - ~a * ~x) ^ ~p * (1 + ~a * ~x) ^ ~p)) * Antiderivative((~u / (~x) ^ (2 * ~p)) * (1 - ~a * ~x) ^ ~p * (1 + ~a * ~x) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~p)) && (IntegerQ(~n / 2) && Not(GtQ(~c, 0)))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * atanh(~(a') * ~x)), ~x) => (((~x) ^ (2 * ~p) * (~c + ~d / (~x) ^ 2) ^ ~p) / (1 + (~c * (~x) ^ 2) / ~d) ^ ~p) * Antiderivative((~u / (~x) ^ (2 * ~p)) * (1 + (~c * (~x) ^ 2) / ~d) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~p)) && Not(IntegerQ(~n / 2))))
    @apply_utils Antiderivative(ℯ ^ (~(n') * atanh(~(c') * (~a + ~(b') * ~x))), ~x) => Antiderivative((1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2) / ((1 - ~a * ~c) - ~b * ~c * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~m * ℯ ^ (~n * atanh(~(c') * (~a + ~(b') * ~x))), ~x) => (4 / (~n * (~b) ^ (~m + 1) * (~c) ^ (~m + 1))) * Subst(Antiderivative(((~x) ^ (2 / ~n) * ((-1 - ~a * ~c) + (1 - ~a * ~c) * (~x) ^ (2 / ~n)) ^ ~m) / (1 + (~x) ^ (2 / ~n)) ^ (~m + 2), ~x), ~x, (1 + ~c * (~a + ~b * ~x)) ^ (~n / 2) / (1 - ~c * (~a + ~b * ~x)) ^ (~n / 2)) <-- FreeQ([~a, ~b, ~c], ~x) && (ILtQ(~m, 0) && LtQ(-1, ~n, 1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * ℯ ^ (~(n') * atanh(~(c') * (~a + ~(b') * ~x))), ~x) => Antiderivative(((~d + ~e * ~x) ^ ~m * (1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2)) / ((1 - ~a * ~c) - ~b * ~c * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x)
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x + ~(e') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~a + ~(b') * ~x)), ~x) => (~c / (1 - (~a) ^ 2)) ^ ~p * Antiderivative(~u * ((1 - ~a) - ~b * ~x) ^ (~p - ~n / 2) * (1 + ~a + ~b * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && (EqQ(~b * ~d - 2 * ~a * ~e, 0) && (EqQ((~b) ^ 2 * ~c + ~e * (1 - (~a) ^ 2), 0) && (IntegerQ(~p) || GtQ(~c / (1 - (~a) ^ 2), 0))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x + ~(e') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * atanh(~a + ~(b') * ~x)), ~x) => ((~c + ~d * ~x + ~e * (~x) ^ 2) ^ ~p / (((1 - (~a) ^ 2) - 2 * ~a * ~b * ~x) - (~b) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(~u * (((1 - (~a) ^ 2) - 2 * ~a * ~b * ~x) - (~b) ^ 2 * (~x) ^ 2) ^ ~p * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && (EqQ(~b * ~d - 2 * ~a * ~e, 0) && (EqQ((~b) ^ 2 * ~c + ~e * (1 - (~a) ^ 2), 0) && Not(IntegerQ(~p) || GtQ(~c / (1 - (~a) ^ 2), 0))))
    @apply_utils Antiderivative(~(u') * ℯ ^ (~(n') * atanh(~(c') / (~(a') + ~(b') * ~x))), ~x) => Antiderivative(~u * ℯ ^ (~n * acoth(~a / ~c + (~b * ~x) / ~c)), ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
    @apply_utils Antiderivative(~(u') * ℯ ^ (~n * acoth(~(a') * ~x)), ~x) => (-1) ^ (~n / 2) * Antiderivative(~u * ℯ ^ (~n * atanh(~a * ~x)), ~x) <-- FreeQ(~a, ~x) && IntegerQ(~n / 2)
    @apply_utils Antiderivative(ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -(Subst(Antiderivative((1 + ~x / ~a) ^ ((~n + 1) / 2) / ((~x) ^ 2 * (1 - ~x / ~a) ^ ((~n - 1) / 2) * sqrt(1 - (~x) ^ 2 / (~a) ^ 2)), ~x), ~x, 1 / ~x)) <-- FreeQ(~a, ~x) && IntegerQ((~n - 1) / 2)
    @apply_utils Antiderivative((~x) ^ ~(m') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -(Subst(Antiderivative((1 + ~x / ~a) ^ ((~n + 1) / 2) / ((~x) ^ (~m + 2) * (1 - ~x / ~a) ^ ((~n - 1) / 2) * sqrt(1 - (~x) ^ 2 / (~a) ^ 2)), ~x), ~x, 1 / ~x)) <-- FreeQ(~a, ~x) && (IntegerQ((~n - 1) / 2) && IntegerQ(~m))
    @apply_utils Antiderivative(ℯ ^ (~n * acoth(~(a') * ~x)), ~x) => -(Subst(Antiderivative((1 + ~x / ~a) ^ (~n / 2) / ((~x) ^ 2 * (1 - ~x / ~a) ^ (~n / 2)), ~x), ~x, 1 / ~x)) <-- FreeQ([~a, ~n], ~x) && Not(IntegerQ(~n))
    @apply_utils Antiderivative((~x) ^ ~(m') * ℯ ^ (~n * acoth(~(a') * ~x)), ~x) => -(Subst(Antiderivative((1 + ~x / ~a) ^ (~n / 2) / ((~x) ^ (~m + 2) * (1 - ~x / ~a) ^ (~n / 2)), ~x), ~x, 1 / ~x)) <-- FreeQ([~a, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~x) ^ ~m * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~x) ^ ~m) * (1 / ~x) ^ ~m * Subst(Antiderivative((1 + ~x / ~a) ^ ((~n + 1) / 2) / ((~x) ^ (~m + 2) * (1 - ~x / ~a) ^ ((~n - 1) / 2) * sqrt(1 - (~x) ^ 2 / (~a) ^ 2)), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~m], ~x) && (IntegerQ((~n - 1) / 2) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative((~x) ^ ~m * ℯ ^ (~n * acoth(~(a') * ~x)), ~x) => -((~x) ^ ~m) * (1 / ~x) ^ ~m * Subst(Antiderivative((1 + ~x / ~a) ^ (~n / 2) / ((~x) ^ (~m + 2) * (1 - ~x / ~a) ^ (~n / 2)), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~m, ~n], ~x) && (Not(IntegerQ(~n)) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative((~c + ~(d') * ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((1 + ~a * ~x) * (~c + ~d * ~x) ^ ~p * ℯ ^ (~n * acoth(~a * ~x))) / (~a * (~p + 1)) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~a * ~c + ~d, 0) && (EqQ(~p, ~n / 2) && Not(IntegerQ(~n / 2))))
    #= Antiderivative(((~c)+(~d')*(~x))^(~p')*ℯ^((~n')*acoth((~a')*(~x))),~x) :=  -(-a)^n*c^n*Subst(Antiderivative((d+c*x)^(p-n)*(1-x^2/a^2)^(n/2)/x^(p+2),x),x,1/ x) <-- FreeQ([a,c,d],x) && EqQ(a*c+d,0) && IntegerQ((n-1)/2) &&  IntegerQ(p) =#
    #= Antiderivative((~x)^(~m')*((~c)+(~d')*(~x))^(~p')*ℯ^((~n')*acoth((~a')*(~x))),~x) :=  -(-a)^n*c^n*Subst(Antiderivative((d+c*x)^(p-n)*(1-x^2/a^2)^(n/2)/x^(m+p+2),x),x, 1/x) <-- FreeQ([a,c,d],x) && EqQ(a*c+d,0) && IntegerQ((n-1)/2) &&  IntegerQ(m) && IntegerQ(p) =#
    #= Antiderivative(((~c)+(~d')*(~x))^(~p')*ℯ^((~n')*acoth((~a')*(~x))),~x) :=  -(-a)^n*c^n*sqrt(c+d*x)/(sqrt(x)*sqrt(d+c/x))*Subst(Antiderivative((d+c*x)^(p-n)* (1-x^2/a^2)^(n/2)/x^(p+2),x),x,1/x) <-- FreeQ([a,c,d],x) &&  EqQ(a*c+d,0) && IntegerQ((n-1)/2) && IntegerQ(p-1/2) =#
    #= Antiderivative((~x)^(~m')*((~c)+(~d')*(~x))^(~p')*ℯ^((~n')*acoth((~a')*(~x))),~x) :=  -(-a)^n*c^n*sqrt(c+d*x)/(sqrt(x)*sqrt(d+c/x))*Subst(Antiderivative((d+c*x)^(p-n)* (1-x^2/a^2)^(n/2)/x^(m+p+2),x),x,1/x) <-- FreeQ([a,c,d],x) &&  EqQ(a*c+d,0) && IntegerQ((n-1)/2) && IntegerQ(m) && IntegerQ(p-1/2) =#
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => (~d) ^ ~p * Antiderivative(~u * (~x) ^ ~p * (1 + ~c / (~d * ~x)) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * (~c) ^ 2 - (~d) ^ 2, 0) && (Not(IntegerQ(~n / 2)) && IntegerQ(~p)))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((~c + ~d * ~x) ^ ~p / ((~x) ^ ~p * (1 + ~c / (~d * ~x)) ^ ~p)) * Antiderivative(~u * (~x) ^ ~p * (1 + ~c / (~d * ~x)) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * (~c) ^ 2 - (~d) ^ 2, 0) && (Not(IntegerQ(~n / 2)) && Not(IntegerQ(~p))))
    @apply_utils Antiderivative((~c + ~(d') / ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~n) * Subst(Antiderivative(((~c + ~d * ~x) ^ (~p - ~n) * (1 - (~x) ^ 2 / (~a) ^ 2) ^ (~n / 2)) / (~x) ^ 2, ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ(~c + ~a * ~d, 0) && (IntegerQ((~n - 1) / 2) && ((IntegerQ(~p) || (EqQ(~p, ~n / 2) || EqQ(~p, ~n / 2 + 1))) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') / ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~n) * Subst(Antiderivative(((~c + ~d * ~x) ^ (~p - ~n) * (1 - (~x) ^ 2 / (~a) ^ 2) ^ (~n / 2)) / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~p], ~x) && (EqQ(~c + ~a * ~d, 0) && (IntegerQ((~n - 1) / 2) && (IntegerQ(~m) && ((IntegerQ(~p) || (EqQ(~p, ~n / 2) || (EqQ(~p, ~n / 2 + 1) || LtQ(-5, ~m, -1)))) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~c + ~(d') / ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~p) * Subst(Antiderivative(((1 + (~d * ~x) / ~c) ^ ~p * (1 + ~x / ~a) ^ (~n / 2)) / ((~x) ^ 2 * (1 - ~x / ~a) ^ (~n / 2)), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && (Not(IntegerQ(~n / 2)) && (IntegerQ(~p) || GtQ(~c, 0))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') / ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~p) * Subst(Antiderivative(((1 + (~d * ~x) / ~c) ^ ~p * (1 + ~x / ~a) ^ (~n / 2)) / ((~x) ^ (~m + 2) * (1 - ~x / ~a) ^ (~n / 2)), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && (Not(IntegerQ(~n / 2)) && ((IntegerQ(~p) || GtQ(~c, 0)) && IntegerQ(~m))))
    @apply_utils Antiderivative((~x) ^ ~m * (~c + ~(d') / ~x) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~p) * (~x) ^ ~m * (1 / ~x) ^ ~m * Subst(Antiderivative(((1 + (~d * ~x) / ~c) ^ ~p * (1 + ~x / ~a) ^ (~n / 2)) / ((~x) ^ (~m + 2) * (1 - ~x / ~a) ^ (~n / 2)), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~n, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && (Not(IntegerQ(~n / 2)) && ((IntegerQ(~p) || GtQ(~c, 0)) && Not(IntegerQ(~m)))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / ~x) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((~c + ~d / ~x) ^ ~p / (1 + ~d / (~c * ~x)) ^ ~p) * Antiderivative(~u * (1 + ~d / (~c * ~x)) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~c) ^ 2 - (~a) ^ 2 * (~d) ^ 2, 0) && (Not(IntegerQ(~n / 2)) && Not(IntegerQ(~p) || GtQ(~c, 0))))
    @apply_utils Antiderivative(ℯ ^ (~(n') * acoth(~(a') * ~x)) / (~c + ~(d') * (~x) ^ 2), ~x) => ℯ ^ (~n * acoth(~a * ~x)) / (~a * ~c * ~n) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~n / 2)))
    @apply_utils Antiderivative(ℯ ^ (~n * acoth(~(a') * ~x)) / (~c + ~(d') * (~x) ^ 2) ^ (3 / 2), ~x) => ((~n - ~a * ~x) * ℯ ^ (~n * acoth(~a * ~x))) / (~a * ~c * ((~n) ^ 2 - 1) * sqrt(~c + ~d * (~x) ^ 2)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~n)))
    @apply_utils Antiderivative((~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((~n + 2 * ~a * (~p + 1) * ~x) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x))) / (~a * ~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2)) - ((2 * (~p + 1) * (2 * ~p + 3)) / (~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2))) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && (LtQ(~p, -1) && (NeQ(~p, -3 / 2) && (NeQ((~n) ^ 2 - 4 * (~p + 1) ^ 2, 0) && (IntegerQ(~p) || Not(IntegerQ(~n))))))))
    @apply_utils Antiderivative((~x * ℯ ^ (~n * acoth(~(a') * ~x))) / (~c + ~(d') * (~x) ^ 2) ^ (3 / 2), ~x) => (-((1 - ~a * ~n * ~x)) * ℯ ^ (~n * acoth(~a * ~x))) / ((~a) ^ 2 * ~c * ((~n) ^ 2 - 1) * sqrt(~c + ~d * (~x) ^ 2)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && Not(IntegerQ(~n)))
    @apply_utils Antiderivative(~x * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((2 * (~p + 1) + ~a * ~n * ~x) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x))) / ((~a) ^ 2 * ~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2)) - ((~n * (2 * ~p + 3)) / (~a * ~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2))) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && (LeQ(~p, -1) && (NeQ(~p, -3 / 2) && (NeQ((~n) ^ 2 - 4 * (~p + 1) ^ 2, 0) && (IntegerQ(~p) || Not(IntegerQ(~n))))))))
    @apply_utils Antiderivative((~x) ^ 2 * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => (-((~n + 2 * (~p + 1) * ~a * ~x)) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x))) / ((~a) ^ 3 * ~c * (~n) ^ 2 * ((~n) ^ 2 - 1)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && (EqQ((~n) ^ 2 + 2 * (~p + 1), 0) && NeQ((~n) ^ 2, 1))))
    @apply_utils Antiderivative((~x) ^ 2 * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((~n + 2 * (~p + 1) * ~a * ~x) * (~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x))) / ((~a) ^ 3 * ~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2)) - (((~n) ^ 2 + 2 * (~p + 1)) / ((~a) ^ 2 * ~c * ((~n) ^ 2 - 4 * (~p + 1) ^ 2))) * Antiderivative((~c + ~d * (~x) ^ 2) ^ (~p + 1) * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && (LeQ(~p, -1) && (NeQ((~n) ^ 2 + 2 * (~p + 1), 0) && (NeQ((~n) ^ 2 - 4 * (~p + 1) ^ 2, 0) && (IntegerQ(~p) || Not(IntegerQ(~n))))))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => (-((-(~c)) ^ ~p) / (~a) ^ (~m + 1)) * Subst(Antiderivative((ℯ ^ (~n * ~x) * coth(~x) ^ (~m + 2 * (~p + 1))) / cosh(~x) ^ (2 * (~p + 1)), ~x), ~x, acoth(~a * ~x)) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && (IntegerQ(~m) && (LeQ(3, ~m, -2 * (~p + 1)) && IntegerQ(~p)))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => (~d) ^ ~p * Antiderivative(~u * (~x) ^ (2 * ~p) * (1 - 1 / ((~a) ^ 2 * (~x) ^ 2)) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && IntegerQ(~p)))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((~c + ~d * (~x) ^ 2) ^ ~p / ((~x) ^ (2 * ~p) * (1 - 1 / ((~a) ^ 2 * (~x) ^ 2)) ^ ~p)) * Antiderivative(~u * (~x) ^ (2 * ~p) * (1 - 1 / ((~a) ^ 2 * (~x) ^ 2)) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ((~a) ^ 2 * ~c + ~d, 0) && (Not(IntegerQ(~n / 2)) && Not(IntegerQ(~p))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => ((~c) ^ ~p / (~a) ^ (2 * ~p)) * Antiderivative((~u / (~x) ^ (2 * ~p)) * (-1 + ~a * ~x) ^ (~p - ~n / 2) * (1 + ~a * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~n / 2)) && ((IntegerQ(~p) || GtQ(~c, 0)) && IntegersQ(2 * ~p, ~p + ~n / 2))))
    @apply_utils Antiderivative((~c + ~(d') / (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~p) * Subst(Antiderivative(((1 - ~x / ~a) ^ (~p - ~n / 2) * (1 + ~x / ~a) ^ (~p + ~n / 2)) / (~x) ^ 2, ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~n / 2)) && ((IntegerQ(~p) || GtQ(~c, 0)) && Not(IntegersQ(2 * ~p, ~p + ~n / 2)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~c + ~(d') / (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~p) * Subst(Antiderivative(((1 - ~x / ~a) ^ (~p - ~n / 2) * (1 + ~x / ~a) ^ (~p + ~n / 2)) / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~n / 2)) && ((IntegerQ(~p) || GtQ(~c, 0)) && (Not(IntegersQ(2 * ~p, ~p + ~n / 2)) && IntegerQ(~m)))))
    @apply_utils Antiderivative((~x) ^ ~m * (~c + ~(d') / (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => -((~c) ^ ~p) * (~x) ^ ~m * (1 / ~x) ^ ~m * Subst(Antiderivative(((1 - ~x / ~a) ^ (~p - ~n / 2) * (1 + ~x / ~a) ^ (~p + ~n / 2)) / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~c, ~d, ~m, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~n / 2)) && ((IntegerQ(~p) || GtQ(~c, 0)) && (Not(IntegersQ(2 * ~p, ~p + ~n / 2)) && Not(IntegerQ(~m))))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') / (~x) ^ 2) ^ ~p * ℯ ^ (~(n') * acoth(~(a') * ~x)), ~x) => (((~c) ^ IntPart(~p) * (~c + ~d / (~x) ^ 2) ^ FracPart(~p)) / (1 - 1 / ((~a) ^ 2 * (~x) ^ 2)) ^ FracPart(~p)) * Antiderivative(~u * (1 - 1 / ((~a) ^ 2 * (~x) ^ 2)) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~c, ~d, ~n, ~p], ~x) && (EqQ(~c + (~a) ^ 2 * ~d, 0) && (Not(IntegerQ(~n / 2)) && Not(IntegerQ(~p) || GtQ(~c, 0))))
    @apply_utils Antiderivative(~(u') * ℯ ^ (~n * acoth(~(c') * (~a + ~(b') * ~x))), ~x) => (-1) ^ (~n / 2) * Antiderivative(~u * ℯ ^ (~n * atanh(~c * (~a + ~b * ~x))), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && IntegerQ(~n / 2)
    @apply_utils Antiderivative(ℯ ^ (~(n') * acoth(~(c') * (~a + ~(b') * ~x))), ~x) => (((~c * (~a + ~b * ~x)) ^ (~n / 2) * (1 + 1 / (~c * (~a + ~b * ~x))) ^ (~n / 2)) / (1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2)) * Antiderivative((1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2) / (-1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x) && Not(IntegerQ(~n / 2))
    @apply_utils Antiderivative((~x) ^ ~m * ℯ ^ (~n * acoth(~(c') * (~a + ~(b') * ~x))), ~x) => (-4 / (~n * (~b) ^ (~m + 1) * (~c) ^ (~m + 1))) * Subst(Antiderivative(((~x) ^ (2 / ~n) * (1 + ~a * ~c + (1 - ~a * ~c) * (~x) ^ (2 / ~n)) ^ ~m) / (-1 + (~x) ^ (2 / ~n)) ^ (~m + 2), ~x), ~x, (1 + 1 / (~c * (~a + ~b * ~x))) ^ (~n / 2) / (1 - 1 / (~c * (~a + ~b * ~x))) ^ (~n / 2)) <-- FreeQ([~a, ~b, ~c], ~x) && (ILtQ(~m, 0) && LtQ(-1, ~n, 1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * ℯ ^ (~(n') * acoth(~(c') * (~a + ~(b') * ~x))), ~x) => (((~c * (~a + ~b * ~x)) ^ (~n / 2) * (1 + 1 / (~c * (~a + ~b * ~x))) ^ (~n / 2)) / (1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2)) * Antiderivative(((~d + ~e * ~x) ^ ~m * (1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2)) / (-1 + ~a * ~c + ~b * ~c * ~x) ^ (~n / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && Not(IntegerQ(~n / 2))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x + ~(e') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~a + ~(b') * ~x)), ~x) => (~c / (1 - (~a) ^ 2)) ^ ~p * ((~a + ~b * ~x) / (1 + ~a + ~b * ~x)) ^ (~n / 2) * ((1 + ~a + ~b * ~x) / (~a + ~b * ~x)) ^ (~n / 2) * (((1 - ~a) - ~b * ~x) ^ (~n / 2) / (-1 + ~a + ~b * ~x) ^ (~n / 2)) * Antiderivative(~u * ((1 - ~a) - ~b * ~x) ^ (~p - ~n / 2) * (1 + ~a + ~b * ~x) ^ (~p + ~n / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && (Not(IntegerQ(~n / 2)) && (EqQ(~b * ~d - 2 * ~a * ~e, 0) && (EqQ((~b) ^ 2 * ~c + ~e * (1 - (~a) ^ 2), 0) && (IntegerQ(~p) || GtQ(~c / (1 - (~a) ^ 2), 0)))))
    @apply_utils Antiderivative(~(u') * (~c + ~(d') * ~x + ~(e') * (~x) ^ 2) ^ ~(p') * ℯ ^ (~(n') * acoth(~a + ~(b') * ~x)), ~x) => ((~c + ~d * ~x + ~e * (~x) ^ 2) ^ ~p / (((1 - (~a) ^ 2) - 2 * ~a * ~b * ~x) - (~b) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(~u * (((1 - (~a) ^ 2) - 2 * ~a * ~b * ~x) - (~b) ^ 2 * (~x) ^ 2) ^ ~p * ℯ ^ (~n * acoth(~a * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && (Not(IntegerQ(~n / 2)) && (EqQ(~b * ~d - 2 * ~a * ~e, 0) && (EqQ((~b) ^ 2 * ~c + ~e * (1 - (~a) ^ 2), 0) && Not(IntegerQ(~p) || GtQ(~c / (1 - (~a) ^ 2), 0)))))
    @apply_utils Antiderivative(~(u') * ℯ ^ (~(n') * acoth(~(c') / (~(a') + ~(b') * ~x))), ~x) => Antiderivative(~u * ℯ ^ (~n * atanh(~a / ~c + (~b * ~x) / ~c)), ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
end
