int_rules_4_5_1_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.5.1.4*(d*tan)^n*(a+b*sec)^m =#
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~(m') * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~(n'), ~x) => (1 / ((~a) ^ ((~m - ~n) - 1) * (~b) ^ ~n * ~d)) * Subst(Antiderivative(((~a - ~b * ~x) ^ ((~m - 1) / 2) * (~a + ~b * ~x) ^ ((~m - 1) / 2 + ~n)) / (~x) ^ (~m + ~n), ~x), ~x, sin(~c + ~d * ~x)) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (IntegerQ((~m - 1) / 2) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegerQ(~n)))
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~(m') * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => (-1 / (~d * (~b) ^ (~m - 1))) * Subst(Antiderivative(((-(~a) + ~b * ~x) ^ ((~m - 1) / 2) * (~a + ~b * ~x) ^ ((~m - 1) / 2 + ~n)) / ~x, ~x), ~x, csc(~c + ~d * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && (IntegerQ((~m - 1) / 2) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && Not(IntegerQ(~n))))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)), ~x) => (-(~e) * (~e * cot(~c + ~d * ~x)) ^ (~m - 1) * (~a * ~m + ~b * (~m - 1) * csc(~c + ~d * ~x))) / (~d * ~m * (~m - 1)) - ((~e) ^ 2 / ~m) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m - 2) * (~a * ~m + ~b * (~m - 1) * csc(~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ(~m, 1)
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)), ~x) => (-((~e * cot(~c + ~d * ~x)) ^ (~m + 1)) * (~a + ~b * csc(~c + ~d * ~x))) / (~d * ~e * (~m + 1)) - (1 / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m + 2) * (~a * (~m + 1) + ~b * (~m + 2) * csc(~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && LtQ(~m, -1)
    @apply_utils Antiderivative((~a + ~(b') * csc(~(c') + ~(d') * ~x)) / cot(~(c') + ~(d') * ~x), ~x) => Antiderivative((~b + ~a * sin(~c + ~d * ~x)) / cos(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x)
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~(m') * (~a + ~(b') * csc(~(c') + ~(d') * ~x)), ~x) => ~a * Antiderivative((~e * cot(~c + ~d * ~x)) ^ ~m, ~x) + ~b * Antiderivative((~e * cot(~c + ~d * ~x)) ^ ~m * csc(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x)
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~(m') * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => (-((-1) ^ ((~m - 1) / 2)) / (~d * (~b) ^ (~m - 1))) * Subst(Antiderivative((((~b) ^ 2 - (~x) ^ 2) ^ ((~m - 1) / 2) * (~a + ~x) ^ ~n) / ~x, ~x), ~x, ~b * csc(~c + ~d * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && (IntegerQ((~m - 1) / 2) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand((~e * cot(~c + ~d * ~x)) ^ ~m, (~a + ~b * csc(~c + ~d * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~(m') * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~(n'), ~x) => ((-2 * (~a) ^ (~m / 2 + ~n + 1 / 2)) / ~d) * Subst(Antiderivative(((~x) ^ ~m * (2 + ~a * (~x) ^ 2) ^ ((~m / 2 + ~n) - 1 / 2)) / (1 + ~a * (~x) ^ 2), ~x), ~x, cot(~c + ~d * ~x) / sqrt(~a + ~b * csc(~c + ~d * ~x))) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~m / 2) && IntegerQ(~n - 1 / 2)))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => (~a) ^ (2 * ~n) * (~e) ^ (-2 * ~n) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m + 2 * ~n) / (-(~a) + ~b * csc(~c + ~d * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && ILtQ(~n, 0))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => ((-(2 ^ (~m + ~n + 1)) * (~e * cot(~c + ~d * ~x)) ^ (~m + 1) * (~a + ~b * csc(~c + ~d * ~x)) ^ ~n) / (~d * ~e * (~m + 1))) * (~a / (~a + ~b * csc(~c + ~d * ~x))) ^ (~m + ~n + 1) * AppellF1((~m + 1) / 2, ~m + ~n, 1, (~m + 3) / 2, -((~a - ~b * csc(~c + ~d * ~x))) / (~a + ~b * csc(~c + ~d * ~x)), (~a - ~b * csc(~c + ~d * ~x)) / (~a + ~b * csc(~c + ~d * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && Not(IntegerQ(~n)))
    @apply_utils Antiderivative(sqrt(~(e') * cot(~(c') + ~(d') * ~x)) / (~a + ~(b') * csc(~(c') + ~(d') * ~x)), ~x) => (1 / ~a) * Antiderivative(sqrt(~e * cot(~c + ~d * ~x)), ~x) - (~b / ~a) * Antiderivative(sqrt(~e * cot(~c + ~d * ~x)) / (~b + ~a * sin(~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m / (~a + ~(b') * csc(~(c') + ~(d') * ~x)), ~x) => (-((~e) ^ 2) / (~b) ^ 2) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m - 2) * (~a - ~b * csc(~c + ~d * ~x)), ~x) + (((~e) ^ 2 * ((~a) ^ 2 - (~b) ^ 2)) / (~b) ^ 2) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m - 2) / (~a + ~b * csc(~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && IGtQ(~m - 1 / 2, 0))
    @apply_utils Antiderivative(1 / (sqrt(~(e') * cot(~(c') + ~(d') * ~x)) * (~a + ~(b') * csc(~(c') + ~(d') * ~x))), ~x) => (1 / ~a) * Antiderivative(1 / sqrt(~e * cot(~c + ~d * ~x)), ~x) - (~b / ~a) * Antiderivative(1 / (sqrt(~e * cot(~c + ~d * ~x)) * (~b + ~a * sin(~c + ~d * ~x))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m / (~a + ~(b') * csc(~(c') + ~(d') * ~x)), ~x) => (1 / ((~a) ^ 2 - (~b) ^ 2)) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ ~m * (~a - ~b * csc(~c + ~d * ~x)), ~x) + ((~b) ^ 2 / ((~e) ^ 2 * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m + 2) / (~a + ~b * csc(~c + ~d * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && ILtQ(~m + 1 / 2, 0))
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ 2 * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => Antiderivative((-1 + csc(~c + ~d * ~x) ^ 2) * (~a + ~b * csc(~c + ~d * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand((~a + ~b * csc(~c + ~d * ~x)) ^ ~n, (-1 + csc(~c + ~d * ~x) ^ 2) ^ (~m / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (IGtQ(~m / 2, 0) && IntegerQ(~n - 1 / 2)))
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand((~a + ~b * csc(~c + ~d * ~x)) ^ ~n, (-1 + sec(~c + ~d * ~x) ^ 2) ^ (-(~m) / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (ILtQ(~m / 2, 0) && (IntegerQ(~n - 1 / 2) && EqQ(~m, -2))))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand((~e * cot(~c + ~d * ~x)) ^ ~m, (~a + ~b * csc(~c + ~d * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && IGtQ(~n, 0))
    @apply_utils Antiderivative(cot(~(c') + ~(d') * ~x) ^ ~(m') * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~n, ~x) => Antiderivative((cos(~c + ~d * ~x) ^ ~m * (~b + ~a * sin(~c + ~d * ~x)) ^ ~n) / sin(~c + ~d * ~x) ^ (~m + ~n), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~n) && (IntegerQ(~m) && (IntegerQ(~m / 2) || LeQ(~m, 1)))))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~(m') * (~(a') + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~(n'), ~x) => Unintegrable((~e * cot(~c + ~d * ~x)) ^ ~m * (~a + ~b * csc(~c + ~d * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x)
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x)) ^ ~m * (~a + ~(b') * sec(~(c') + ~(d') * ~x)) ^ ~(n'), ~x) => (~e * cot(~c + ~d * ~x)) ^ ~m * tan(~c + ~d * ~x) ^ ~m * Antiderivative((~a + ~b * sec(~c + ~d * ~x)) ^ ~n / tan(~c + ~d * ~x) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && Not(IntegerQ(~m))
    @apply_utils Antiderivative((~(e') * tan(~(c') + ~(d') * ~x) ^ ~p) ^ ~m * (~a + ~(b') * sec(~(c') + ~(d') * ~x)) ^ ~(n'), ~x) => ((~e * tan(~c + ~d * ~x) ^ ~p) ^ ~m / (~e * tan(~c + ~d * ~x)) ^ (~m * ~p)) * Antiderivative((~e * tan(~c + ~d * ~x)) ^ (~m * ~p) * (~a + ~b * sec(~c + ~d * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x) && Not(IntegerQ(~m))
    @apply_utils Antiderivative((~(e') * cot(~(c') + ~(d') * ~x) ^ ~p) ^ ~m * (~a + ~(b') * csc(~(c') + ~(d') * ~x)) ^ ~(n'), ~x) => ((~e * cot(~c + ~d * ~x) ^ ~p) ^ ~m / (~e * cot(~c + ~d * ~x)) ^ (~m * ~p)) * Antiderivative((~e * cot(~c + ~d * ~x)) ^ (~m * ~p) * (~a + ~b * csc(~c + ~d * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x) && Not(IntegerQ(~m))
end
