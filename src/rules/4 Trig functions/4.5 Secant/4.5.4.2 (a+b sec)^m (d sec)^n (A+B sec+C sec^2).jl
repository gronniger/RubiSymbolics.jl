int_rules_4_5_4_2 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.5.4.2*(a+b*sec)^m*(d*sec)^n*(A+B*sec+C*sec^2) =#
    @apply_utils Antiderivative((~(a') + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') + ~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (1 / (~b) ^ 2) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * csc(~e + ~f * ~x)) ^ ~n * ((~b * ~B - ~a * ~C) + ~b * ~C * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n], ~x) && EqQ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') + ~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) / (~b) ^ 2) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * csc(~e + ~f * ~x)) ^ ~n * (~a - ~b * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~m, ~n], ~x) && EqQ(~A * (~b) ^ 2 + (~a) ^ 2 * ~C, 0)
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * ~a * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) + (1 / (~d * ~n)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(~n * (~B * ~a + ~A * ~b) + (~n * (~a * ~C + ~B * ~b) + ~A * ~a * (~n + 1)) * csc(~e + ~f * ~x) + ~b * ~C * ~n * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C], ~x) && LtQ(~n, -1)
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * ~a * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) + (1 / (~d * ~n)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(~A * ~b * ~n + ~a * (~C * ~n + ~A * (~n + 1)) * csc(~e + ~f * ~x) + ~b * ~C * ~n * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C], ~x) && LtQ(~n, -1)
    @apply_utils Antiderivative((~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~b) * ~C * csc(~e + ~f * ~x) * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~n + 2)) + (1 / (~n + 2)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~A * ~a * (~n + 2) + (~B * ~a * (~n + 2) + ~b * (~C * (~n + 1) + ~A * (~n + 2))) * csc(~e + ~f * ~x) + (~a * ~C + ~B * ~b) * (~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n], ~x) && Not(LtQ(~n, -1))
    @apply_utils Antiderivative((~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~b) * ~C * csc(~e + ~f * ~x) * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~n + 2)) + (1 / (~n + 2)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~A * ~a * (~n + 2) + ~b * (~C * (~n + 1) + ~A * (~n + 2)) * csc(~e + ~f * ~x) + ~a * ~C * (~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n], ~x) && Not(LtQ(~n, -1))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(((~a * ~A - ~b * ~B) + ~a * ~C)) * cot(~e + ~f * ~x) * csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~a * ~f * (2 * ~m + 1)) - (1 / (~a * ~b * (2 * ~m + 1))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp(((~a * ~B - ~b * ~C) - 2 * ~A * ~b * (~m + 1)) - (~b * ~B * (~m + 2) - ~a * (~A * (~m + 2) - ~C * (~m - 1))) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (LtQ(~m, -1) && EqQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-((~A + ~C)) * cot(~e + ~f * ~x) * csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~f * (2 * ~m + 1)) - (1 / (~a * ~b * (2 * ~m + 1))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp((-(~b) * ~C - 2 * ~A * ~b * (~m + 1)) + ~a * (~A * (~m + 2) - ~C * (~m - 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C], ~x) && (LtQ(~m, -1) && EqQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / (~b * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp(~b * ((~a * ~A - ~b * ~B) + ~a * ~C) * (~m + 1) - ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C + ~b * ((~A * ~b - ~a * ~B) + ~b * ~C) * (~m + 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (LtQ(~m, -1) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-((~A * (~b) ^ 2 + (~a) ^ 2 * ~C)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / (~b * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp(~a * ~b * (~A + ~C) * (~m + 1) - (~A * (~b) ^ 2 + (~a) ^ 2 * ~C + ~b * (~A * ~b + ~b * ~C) * (~m + 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C], ~x) && (LtQ(~m, -1) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 2)) + (1 / (~b * (~m + 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * Simp(~b * ~A * (~m + 2) + ~b * ~C * (~m + 1) + (~b * ~B * (~m + 2) - ~a * ~C) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && Not(LtQ(~m, -1))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 2)) + (1 / (~b * (~m + 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * Simp((~b * ~A * (~m + 2) + ~b * ~C * (~m + 1)) - ~a * ~C * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C, ~m], ~x) && Not(LtQ(~m, -1))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(((~a * ~A - ~b * ~B) + ~a * ~C)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * (2 * ~m + 1)) - (1 / (~a * ~b * (2 * ~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(((~a * ~B * ~n - ~b * ~C * ~n) - ~A * ~b * (2 * ~m + ~n + 1)) - (~b * ~B * (~m + ~n + 1) - ~a * (~A * (~m + ~n + 1) - ~C * (~m - ~n))) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1 / 2))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~a) * (~A + ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * (2 * ~m + 1)) + (1 / (~a * ~b * (2 * ~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp((~b * ~C * ~n + ~A * ~b * (2 * ~m + ~n + 1)) - (~a * (~A * (~m + ~n + 1) - ~C * (~m - ~n))) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1 / 2))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (1 / (~b * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp((~a * ~A * ~m - ~b * ~B * ~n) - ~b * (~A * (~m + ~n + 1) + ~C * ~n) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(LtQ(~m, -1 / 2)) && (LtQ(~n, -1 / 2) || EqQ(~m + ~n + 1, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (1 / (~b * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(~a * ~A * ~m - ~b * (~A * (~m + ~n + 1) + ~C * ~n) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(LtQ(~m, -1 / 2)) && (LtQ(~n, -1 / 2) || EqQ(~m + ~n + 1, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~m + ~n + 1)) + (1 / (~b * (~m + ~n + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~A * ~b * (~m + ~n + 1) + ~b * ~C * ~n + (~a * ~C * ~m + ~b * ~B * (~m + ~n + 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(LtQ(~m, -1 / 2)) && (Not(LtQ(~n, -1 / 2)) && NeQ(~m + ~n + 1, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~m + ~n + 1)) + (1 / (~b * (~m + ~n + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~A * ~b * (~m + ~n + 1) + ~b * ~C * ~n + ~a * ~C * ~m * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m, ~n], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(LtQ(~m, -1 / 2)) && (Not(LtQ(~n, -1 / 2)) && NeQ(~m + ~n + 1, 0))))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~a * ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / ((~b) ^ 2 * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) - (1 / ((~b) ^ 2 * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp((~b * (~m + 1) * (-(~a) * (~b * ~B - ~a * ~C) + ~A * (~b) ^ 2) + (~b * ~B * ((~a) ^ 2 + (~b) ^ 2 * (~m + 1)) - ~a * (~A * (~b) ^ 2 * (~m + 2) + ~C * ((~a) ^ 2 + (~b) ^ 2 * (~m + 1)))) * csc(~e + ~f * ~x)) - ~b * ~C * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~a * (~A * (~b) ^ 2 + (~a) ^ 2 * ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / ((~b) ^ 2 * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) - (1 / ((~b) ^ 2 * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp((~b * (~m + 1) * ((~a) ^ 2 * ~C + ~A * (~b) ^ 2) - ~a * (~A * (~b) ^ 2 * (~m + 2) + ~C * ((~a) ^ 2 + (~b) ^ 2 * (~m + 1))) * csc(~e + ~f * ~x)) - ~b * ~C * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * csc(~e + ~f * ~x) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 3)) + (1 / (~b * (~m + 3))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * Simp((~a * ~C + ~b * (~C * (~m + 2) + ~A * (~m + 3)) * csc(~e + ~f * ~x)) - (2 * ~a * ~C - ~b * ~B * (~m + 3)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && Not(LtQ(~m, -1)))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * csc(~e + ~f * ~x) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 3)) + (1 / (~b * (~m + 3))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * Simp((~a * ~C + ~b * (~C * (~m + 2) + ~A * (~m + 3)) * csc(~e + ~f * ~x)) - 2 * ~a * ~C * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && Not(LtQ(~m, -1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (1 / (~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(((~A * ~b * ~m - ~a * ~B * ~n) - (~b * ~B * ~n + ~a * (~C * ~n + ~A * (~n + 1))) * csc(~e + ~f * ~x)) - ~b * (~C * ~n + ~A * (~m + ~n + 1)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 0) && LeQ(~n, -1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (1 / (~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp((~A * ~b * ~m - ~a * (~C * ~n + ~A * (~n + 1)) * csc(~e + ~f * ~x)) - ~b * (~C * ~n + ~A * (~m + ~n + 1)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 0) && LeQ(~n, -1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~m + ~n + 1)) + (1 / (~m + ~n + 1)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~a * ~A * (~m + ~n + 1) + ~a * ~C * ~n + ((~A * ~b + ~a * ~B) * (~m + ~n + 1) + ~b * ~C * (~m + ~n)) * csc(~e + ~f * ~x) + (~b * ~B * (~m + ~n + 1) + ~a * ~C * ~m) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 0) && Not(LeQ(~n, -1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~m + ~n + 1)) + (1 / (~m + ~n + 1)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~a * ~A * (~m + ~n + 1) + ~a * ~C * ~n + ~b * (~A * (~m + ~n + 1) + ~C * (~m + ~n)) * csc(~e + ~f * ~x) + ~a * ~C * ~m * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 0) && Not(LeQ(~n, -1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~d) * ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~b * ~f * ((~a) ^ 2 - (~b) ^ 2) * (~m + 1)) + (~d / (~b * ((~a) ^ 2 - (~b) ^ 2) * (~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp(((~A * (~b) ^ 2 * (~n - 1) - ~a * (~b * ~B - ~a * ~C) * (~n - 1)) + ~b * ((~a * ~A - ~b * ~B) + ~a * ~C) * (~m + 1) * csc(~e + ~f * ~x)) - (~b * (~A * ~b - ~a * ~B) * (~m + ~n + 1) + ~C * ((~a) ^ 2 * ~n + (~b) ^ 2 * (~m + 1))) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && GtQ(~n, 0)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~d) * (~A * (~b) ^ 2 + (~a) ^ 2 * ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~b * ~f * ((~a) ^ 2 - (~b) ^ 2) * (~m + 1)) + (~d / (~b * ((~a) ^ 2 - (~b) ^ 2) * (~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp((~A * (~b) ^ 2 * (~n - 1) + (~a) ^ 2 * ~C * (~n - 1) + ~a * ~b * (~A + ~C) * (~m + 1) * csc(~e + ~f * ~x)) - (~A * (~b) ^ 2 * (~m + ~n + 1) + ~C * ((~a) ^ 2 * ~n + (~b) ^ 2 * (~m + 1))) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && GtQ(~n, 0)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / (~a * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(((~a * ((~a * ~A - ~b * ~B) + ~a * ~C) * (~m + 1) - ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) * (~m + ~n + 1)) - ~a * ((~A * ~b - ~a * ~B) + ~b * ~C) * (~m + 1) * csc(~e + ~f * ~x)) + ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) * (~m + ~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && Not(ILtQ(~m + 1 / 2, 0) && ILtQ(~n, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => ((~A * (~b) ^ 2 + (~a) ^ 2 * ~C) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / (~a * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp((((~a) ^ 2 * (~A + ~C) * (~m + 1) - (~A * (~b) ^ 2 + (~a) ^ 2 * ~C) * (~m + ~n + 1)) - ~a * ~b * (~A + ~C) * (~m + 1) * csc(~e + ~f * ~x)) + (~A * (~b) ^ 2 + (~a) ^ 2 * ~C) * (~m + ~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && Not(ILtQ(~m + 1 / 2, 0) && ILtQ(~n, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * ~d * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~b * ~f * (~m + ~n + 1)) + (~d / (~b * (~m + ~n + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp(~a * ~C * (~n - 1) + (~A * ~b * (~m + ~n + 1) + ~b * ~C * (~m + ~n)) * csc(~e + ~f * ~x) + (~b * ~B * (~m + ~n + 1) - ~a * ~C * ~n) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && GtQ(~n, 0))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) * ~d * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~b * ~f * (~m + ~n + 1)) + (~d / (~b * (~m + ~n + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp((~a * ~C * (~n - 1) + (~A * ~b * (~m + ~n + 1) + ~b * ~C * (~m + ~n)) * csc(~e + ~f * ~x)) - ~a * ~C * ~n * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && GtQ(~n, 0))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~n) + (1 / (~a * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp((~a * ~B * ~n - ~A * ~b * (~m + ~n + 1)) + ~a * (~A + ~A * ~n + ~C * ~n) * csc(~e + ~f * ~x) + ~A * ~b * (~m + ~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LeQ(~n, -1))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~n) + (1 / (~a * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(-(~A) * ~b * (~m + ~n + 1) + ~a * (~A + ~A * ~n + ~C * ~n) * csc(~e + ~f * ~x) + ~A * ~b * (~m + ~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LeQ(~n, -1))
    @apply_utils Antiderivative((~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2) / (sqrt(~(d') * csc(~(e') + ~(f') * ~x)) * (~a + ~(b') * csc(~(e') + ~(f') * ~x))), ~x) => (((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) / ((~a) ^ 2 * (~d) ^ 2)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (3 / 2) / (~a + ~b * csc(~e + ~f * ~x)), ~x) + (1 / (~a) ^ 2) * Antiderivative((~a * ~A - (~A * ~b - ~a * ~B) * csc(~e + ~f * ~x)) / sqrt(~d * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2) / (sqrt(~(d') * csc(~(e') + ~(f') * ~x)) * (~a + ~(b') * csc(~(e') + ~(f') * ~x))), ~x) => ((~A * (~b) ^ 2 + (~a) ^ 2 * ~C) / ((~a) ^ 2 * (~d) ^ 2)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (3 / 2) / (~a + ~b * csc(~e + ~f * ~x)), ~x) + (1 / (~a) ^ 2) * Antiderivative((~a * ~A - ~A * ~b * csc(~e + ~f * ~x)) / sqrt(~d * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2) / (sqrt(~(d') * csc(~(e') + ~(f') * ~x)) * sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x))), ~x) => (~C / (~d) ^ 2) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (3 / 2) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) + Antiderivative((~A + ~B * csc(~e + ~f * ~x)) / (sqrt(~d * csc(~e + ~f * ~x)) * sqrt(~a + ~b * csc(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2) / (sqrt(~(d') * csc(~(e') + ~(f') * ~x)) * sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x))), ~x) => (~C / (~d) ^ 2) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (3 / 2) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) + ~A * Antiderivative(1 / (sqrt(~d * csc(~e + ~f * ~x)) * sqrt(~a + ~b * csc(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => Unintegrable((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n * (~A + ~B * csc(~e + ~f * ~x) + ~C * csc(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n], ~x)
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => Unintegrable((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n * (~A + ~C * csc(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m, ~n], ~x)
    @apply_utils Antiderivative((~a + ~(b') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') * cos(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * sec(~(e') + ~(f') * ~x) + ~(C') * sec(~(e') + ~(f') * ~x) ^ 2), ~x) => (~d) ^ (~m + 2) * Antiderivative((~b + ~a * cos(~e + ~f * ~x)) ^ ~m * (~d * cos(~e + ~f * ~x)) ^ ((~n - ~m) - 2) * (~C + ~B * cos(~e + ~f * ~x) + ~A * cos(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') * sin(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~d) ^ (~m + 2) * Antiderivative((~b + ~a * sin(~e + ~f * ~x)) ^ ~m * (~d * sin(~e + ~f * ~x)) ^ ((~n - ~m) - 2) * (~C + ~B * sin(~e + ~f * ~x) + ~A * sin(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~a + ~(b') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') * cos(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * sec(~(e') + ~(f') * ~x) ^ 2), ~x) => (~d) ^ (~m + 2) * Antiderivative((~b + ~a * cos(~e + ~f * ~x)) ^ ~m * (~d * cos(~e + ~f * ~x)) ^ ((~n - ~m) - 2) * (~C + ~A * cos(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') * sin(~(e') + ~(f') * ~x)) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (~d) ^ (~m + 2) * Antiderivative((~b + ~a * sin(~e + ~f * ~x)) ^ ~m * (~d * sin(~e + ~f * ~x)) ^ ((~n - ~m) - 2) * (~C + ~A * sin(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~a + ~(b') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') * (~(d') * sec(~(e') + ~(f') * ~x)) ^ ~p) ^ ~n * (~(A') + ~(B') * sec(~(e') + ~(f') * ~x) + ~(C') * sec(~(e') + ~(f') * ~x) ^ 2), ~x) => (((~c) ^ IntPart(~n) * (~c * (~d * sec(~e + ~f * ~x)) ^ ~p) ^ FracPart(~n)) / (~d * sec(~e + ~f * ~x)) ^ (~p * FracPart(~n))) * Antiderivative((~a + ~b * sec(~e + ~f * ~x)) ^ ~m * (~d * sec(~e + ~f * ~x)) ^ (~n * ~p) * (~A + ~B * sec(~e + ~f * ~x) + ~C * sec(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n, ~p], ~x) && Not(IntegerQ(~n))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~p) ^ ~n * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x) + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (((~c) ^ IntPart(~n) * (~c * (~d * csc(~e + ~f * ~x)) ^ ~p) ^ FracPart(~n)) / (~d * csc(~e + ~f * ~x)) ^ (~p * FracPart(~n))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n * ~p) * (~A + ~B * csc(~e + ~f * ~x) + ~C * csc(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n, ~p], ~x) && Not(IntegerQ(~n))
    @apply_utils Antiderivative((~a + ~(b') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') * (~(d') * sec(~(e') + ~(f') * ~x)) ^ ~p) ^ ~n * (~(A') + ~(C') * sec(~(e') + ~(f') * ~x) ^ 2), ~x) => (((~c) ^ IntPart(~n) * (~c * (~d * sec(~e + ~f * ~x)) ^ ~p) ^ FracPart(~n)) / (~d * sec(~e + ~f * ~x)) ^ (~p * FracPart(~n))) * Antiderivative((~a + ~b * sec(~e + ~f * ~x)) ^ ~m * (~d * sec(~e + ~f * ~x)) ^ (~n * ~p) * (~A + ~C * sec(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~m, ~n, ~p], ~x) && Not(IntegerQ(~n))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~p) ^ ~n * (~(A') + ~(C') * csc(~(e') + ~(f') * ~x) ^ 2), ~x) => (((~c) ^ IntPart(~n) * (~c * (~d * csc(~e + ~f * ~x)) ^ ~p) ^ FracPart(~n)) / (~d * csc(~e + ~f * ~x)) ^ (~p * FracPart(~n))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n * ~p) * (~A + ~C * csc(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~m, ~n, ~p], ~x) && Not(IntegerQ(~n))
end
