int_rules_4_5_3_1 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.5.3.1*(a+b*sec)^m*(d*sec)^n*(A+B*sec) =#
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * ~a * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) + (1 / (~d * ~n)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(~n * (~B * ~a + ~A * ~b) + (~B * ~b * ~n + ~A * ~a * (~n + 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && LeQ(~n, -1))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~b) * ~B * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~n + 1)) + (1 / (~n + 1)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~A * ~a * (~n + 1) + ~B * ~b * ~n + (~A * ~b + ~B * ~a) * (~n + 1) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && Not(LeQ(~n, -1)))
    @apply_utils Antiderivative((csc(~(e') + ~(f') * ~x) * (~A + ~(B') * csc(~(e') + ~(f') * ~x))) / (~a + ~(b') * csc(~(e') + ~(f') * ~x)), ~x) => (~B / ~b) * Antiderivative(csc(~e + ~f * ~x), ~x) + ((~A * ~b - ~a * ~B) / ~b) * Antiderivative(csc(~e + ~f * ~x) / (~a + ~b * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B], ~x) && NeQ(~A * ~b - ~a * ~B, 0)
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~f * (~m + 1)) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && EqQ(~a * ~B * ~m + ~A * ~b * (~m + 1), 0)))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => ((~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~a * ~f * (2 * ~m + 1)) + ((~a * ~B * ~m + ~A * ~b * (~m + 1)) / (~a * ~b * (2 * ~m + 1))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (NeQ(~a * ~B * ~m + ~A * ~b * (~m + 1), 0) && LtQ(~m, -1 / 2))))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~f * (~m + 1)) + ((~a * ~B * ~m + ~A * ~b * (~m + 1)) / (~b * (~m + 1))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (NeQ(~a * ~B * ~m + ~A * ~b * (~m + 1), 0) && Not(LtQ(~m, -1 / 2)))))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~f * (~m + 1)) + (1 / (~m + 1)) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * Simp(~b * ~B * ~m + ~a * ~A * (~m + 1) + (~a * ~B * ~m + ~A * ~b * (~m + 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && GtQ(~m, 0)))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-((~A * ~b - ~a * ~B)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / ((~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp((~a * ~A - ~b * ~B) * (~m + 1) - (~A * ~b - ~a * ~B) * (~m + 2) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((csc(~(e') + ~(f') * ~x) * (~A + ~(B') * csc(~(e') + ~(f') * ~x))) / sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)), ~x) => ((-2 * (~A * ~b - ~a * ~B) * Rt(~a + (~b * ~B) / ~A, 2) * sqrt((~b * (1 - csc(~e + ~f * ~x))) / (~a + ~b)) * sqrt((-(~b) * (1 + csc(~e + ~f * ~x))) / (~a - ~b))) / ((~b) ^ 2 * ~f * cot(~e + ~f * ~x))) * Elliptic.E(asin(sqrt(~a + ~b * csc(~e + ~f * ~x)) / Rt(~a + (~b * ~B) / ~A, 2)), (~a * ~A + ~b * ~B) / (~a * ~A - ~b * ~B)) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && EqQ((~A) ^ 2 - (~B) ^ 2, 0))
    @apply_utils Antiderivative((csc(~(e') + ~(f') * ~x) * (~A + ~(B') * csc(~(e') + ~(f') * ~x))) / sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)), ~x) => (~A - ~B) * Antiderivative(csc(~e + ~f * ~x) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) + ~B * Antiderivative((csc(~e + ~f * ~x) * (1 + csc(~e + ~f * ~x))) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && NeQ((~A) ^ 2 - (~B) ^ 2, 0))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => ((2 * sqrt(2) * ~A * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~A - ~B * csc(~e + ~f * ~x)) * sqrt((~A + ~B * csc(~e + ~f * ~x)) / ~A)) / (~B * ~f * cot(~e + ~f * ~x) * ((~A * (~a + ~b * csc(~e + ~f * ~x))) / (~a * ~A + ~b * ~B)) ^ ~m)) * AppellF1(1 / 2, -(1 / 2), -(~m), 3 / 2, (~A - ~B * csc(~e + ~f * ~x)) / (2 * ~A), (~b * (~A - ~B * csc(~e + ~f * ~x))) / (~A * ~b + ~a * ~B)) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (EqQ((~A) ^ 2 - (~B) ^ 2, 0) && Not(IntegerQ(2 * ~m)))))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => ((~A * ~b - ~a * ~B) / ~b) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m, ~x) + (~B / ~b) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~a, ~b, ~A, ~B, ~e, ~f, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-((~A * ~b - ~a * ~B)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m) / (~b * ~f * (2 * ~m + 1)) + (1 / ((~b) ^ 2 * (2 * ~m + 1))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp((~A * ~b * ~m - ~a * ~B * ~m) + ~b * ~B * (2 * ~m + 1) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1 / 2)))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~a * (~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) - (1 / (~b * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp(~b * (~A * ~b - ~a * ~B) * (~m + 1) - (~a * ~A * ~b * (~m + 2) - ~B * ((~a) ^ 2 + (~b) ^ 2 * (~m + 1))) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 2)) + (1 / (~b * (~m + 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * Simp(~b * ~B * (~m + 1) + (~A * ~b * (~m + 2) - ~a * ~B) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && Not(LtQ(~m, -1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (EqQ(~m + ~n + 1, 0) && EqQ(~a * ~A * ~m - ~b * ~B * ~n, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-((~A * ~b - ~a * ~B)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~b * ~f * (2 * ~m + 1)) + ((~a * ~A * ~m + ~b * ~B * (~m + 1)) / ((~a) ^ 2 * (2 * ~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (EqQ(~m + ~n + 1, 0) && LeQ(~m, -1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - ((~a * ~A * ~m - ~b * ~B * ~n) / (~b * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (EqQ(~m + ~n + 1, 0) && Not(LeQ(~m, -1)))))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-2 * ~b * ~B * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (2 * ~n + 1) * sqrt(~a + ~b * csc(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && EqQ(~A * ~b * (2 * ~n + 1) + 2 * ~a * ~B * ~n, 0)))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * (~b) ^ 2 * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~n * sqrt(~a + ~b * csc(~e + ~f * ~x))) + ((~A * ~b * (2 * ~n + 1) + 2 * ~a * ~B * ~n) / (2 * ~a * ~d * ~n)) * Antiderivative(sqrt(~a + ~b * csc(~e + ~f * ~x)) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (NeQ(~A * ~b * (2 * ~n + 1) + 2 * ~a * ~B * ~n, 0) && LtQ(~n, 0))))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-2 * ~b * ~B * cot(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (2 * ~n + 1) * sqrt(~a + ~b * csc(~e + ~f * ~x))) + ((~A * ~b * (2 * ~n + 1) + 2 * ~a * ~B * ~n) / (~b * (2 * ~n + 1))) * Antiderivative(sqrt(~a + ~b * csc(~e + ~f * ~x)) * (~d * csc(~e + ~f * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (NeQ(~A * ~b * (2 * ~n + 1) + 2 * ~a * ~B * ~n, 0) && Not(LtQ(~n, 0)))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~a * ~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (~b / (~a * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp((~a * ~A * ((~m - ~n) - 1) - ~b * ~B * ~n) - (~a * ~B * ~n + ~A * ~b * (~m + ~n)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1 / 2) && LtQ(~n, -1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~b) * ~B * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~m + ~n)) + (1 / (~d * (~m + ~n))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(~a * ~A * ~d * (~m + ~n) + ~B * (~b * ~d * ~n) + (~A * ~b * ~d * (~m + ~n) + ~a * ~B * ~d * ((2 * ~m + ~n) - 1)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1 / 2) && Not(LtQ(~n, -1)))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~d * (~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~a * ~f * (2 * ~m + 1)) - (1 / (~a * ~b * (2 * ~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp((~A * (~a * ~d * (~n - 1)) - ~B * (~b * ~d * (~n - 1))) - ~d * (~a * ~B * ((~m - ~n) + 1) + ~A * ~b * (~m + ~n)) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1 / 2) && GtQ(~n, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-((~A * ~b - ~a * ~B)) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~b * ~f * (2 * ~m + 1)) - (1 / ((~a) ^ 2 * (2 * ~m + 1))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp((~b * ~B * ~n - ~a * ~A * (2 * ~m + ~n + 1)) + (~A * ~b - ~a * ~B) * (~m + ~n + 1) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1 / 2) && Not(GtQ(~n, 0)))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * ~d * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~f * (~m + ~n)) + (~d / (~b * (~m + ~n))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp(~b * ~B * (~n - 1) + (~A * ~b * (~m + ~n) + ~a * ~B * ~m) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && GtQ(~n, 1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (1 / (~b * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp((~a * ~A * ~m - ~b * ~B * ~n) - ~A * ~b * (~m + ~n + 1) * csc(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~n, 0)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => ((~A * ~b - ~a * ~B) / ~b) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n, ~x) + (~B / ~b) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && EqQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ 2 * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => ((~a) ^ 2 * ~A * cos(~e + ~f * ~x) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1)) / (~d * ~f * ~n) + (1 / (~d * ~n)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (~n + 1) * (~a * (2 * ~A * ~b + ~a * ~B) * ~n + (2 * ~a * ~b * ~B * ~n + ~A * ((~b) ^ 2 * ~n + (~a) ^ 2 * (~n + 1))) * csc(~e + ~f * ~x) + (~b) ^ 2 * ~B * ~n * csc(~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LeQ(~n, -1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~a * ~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) + (1 / (~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 2) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(~a * (~a * ~B * ~n - ~A * ~b * ((~m - ~n) - 1)) + (2 * ~a * ~b * ~B * ~n + ~A * ((~b) ^ 2 * ~n + (~a) ^ 2 * (1 + ~n))) * csc(~e + ~f * ~x) + ~b * (~b * ~B * ~n + ~a * ~A * (~m + ~n)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1) && LeQ(~n, -1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~b) * ~B * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * (~m + ~n)) + (1 / (~m + ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 2) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp((~a) ^ 2 * ~A * (~m + ~n) + ~a * ~b * ~B * ~n + (~a * (2 * ~A * ~b + ~a * ~B) * (~m + ~n) + (~b) ^ 2 * ~B * ((~m + ~n) - 1)) * csc(~e + ~f * ~x) + ~b * (~A * ~b * (~m + ~n) + ~a * ~B * ((2 * ~m + ~n) - 1)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1) && Not(IGtQ(~n, 1) && Not(IntegerQ(~m))))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~d) * (~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / ((~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp((~d * (~n - 1) * (~A * ~b - ~a * ~B) + ~d * (~a * ~A - ~b * ~B) * (~m + 1) * csc(~e + ~f * ~x)) - ~d * (~A * ~b - ~a * ~B) * (~m + ~n + 1) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && LtQ(0, ~n, 1))))
    @apply_utils Antiderivative(csc(~(e') + ~(f') * ~x) ^ 3 * (~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-((~a) ^ 2) * (~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1)) / ((~b) ^ 2 * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / ((~b) ^ 2 * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative(csc(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * Simp((~a * ~b * (~A * ~b - ~a * ~B) * (~m + 1) - (~A * ~b - ~a * ~B) * ((~a) ^ 2 + (~b) ^ 2 * (~m + 1)) * csc(~e + ~f * ~x)) + ~b * ~B * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~a * (~d) ^ 2 * (~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 2)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) - (~d / (~b * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 2) * Simp((~a * ~d * (~A * ~b - ~a * ~B) * (~n - 2) + ~b * ~d * (~A * ~b - ~a * ~B) * (~m + 1) * csc(~e + ~f * ~x)) - (~a * ~A * ~b * ~d * (~m + ~n) - ~d * ~B * ((~a) ^ 2 * (~n - 1) + (~b) ^ 2 * (~m + 1))) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && GtQ(~n, 1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~b * (~A * ~b - ~a * ~B) * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2)) + (1 / (~a * (~m + 1) * ((~a) ^ 2 - (~b) ^ 2))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n * Simp(((~A * ((~a) ^ 2 * (~m + 1) - (~b) ^ 2 * (~m + ~n + 1)) + ~a * ~b * ~B * ~n) - ~a * (~A * ~b - ~a * ~B) * (~m + 1) * csc(~e + ~f * ~x)) + ~b * (~A * ~b - ~a * ~B) * (~m + ~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && Not(ILtQ(~m + 1 / 2, 0) && ILtQ(~n, 0)))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * ~d * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 1)) / (~f * (~m + ~n)) + (~d / (~m + ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 1) * Simp(~a * ~B * (~n - 1) + (~b * ~B * ((~m + ~n) - 1) + ~a * ~A * (~m + ~n)) * csc(~e + ~f * ~x) + (~a * ~B * ~m + ~A * ~b * (~m + ~n)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(0, ~m, 1) && GtQ(~n, 0))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~f * ~n) - (1 / (~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ (~m - 1) * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp(((~A * ~b * ~m - ~a * ~B * ~n) - (~b * ~B * ~n + ~a * ~A * (~n + 1)) * csc(~e + ~f * ~x)) - ~A * ~b * (~m + ~n + 1) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(0, ~m, 1) && LeQ(~n, -1))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (-(~B) * (~d) ^ 2 * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ (~n - 2)) / (~b * ~f * (~m + ~n)) + ((~d) ^ 2 / (~b * (~m + ~n))) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n - 2) * Simp(~a * ~B * (~n - 2) + ~B * ~b * ((~m + ~n) - 1) * csc(~e + ~f * ~x) + (~A * ~b * (~m + ~n) - ~a * ~B * (~n - 1)) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~n, 1) && (NeQ(~m + ~n, 0) && Not(IGtQ(~m, 1))))))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => (~A * cot(~e + ~f * ~x) * (~a + ~b * csc(~e + ~f * ~x)) ^ (~m + 1) * (~d * csc(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~n) + (1 / (~a * ~d * ~n)) * Antiderivative((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ (~n + 1) * Simp((~a * ~B * ~n - ~A * ~b * (~m + ~n + 1)) + ~A * ~a * (~n + 1) * csc(~e + ~f * ~x) + ~A * ~b * (~m + ~n + 2) * csc(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && LeQ(~n, -1)))
    @apply_utils Antiderivative((~A + ~(B') * csc(~(e') + ~(f') * ~x)) / (sqrt(~(d') * csc(~(e') + ~(f') * ~x)) * sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x))), ~x) => (~A / ~a) * Antiderivative(sqrt(~a + ~b * csc(~e + ~f * ~x)) / sqrt(~d * csc(~e + ~f * ~x)), ~x) - ((~A * ~b - ~a * ~B) / (~a * ~d)) * Antiderivative(sqrt(~d * csc(~e + ~f * ~x)) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((sqrt(~(d') * csc(~(e') + ~(f') * ~x)) * (~A + ~(B') * csc(~(e') + ~(f') * ~x))) / sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)), ~x) => ~A * Antiderivative(sqrt(~d * csc(~e + ~f * ~x)) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) + (~B / ~d) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (3 / 2) / sqrt(~a + ~b * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((sqrt(~a + ~(b') * csc(~(e') + ~(f') * ~x)) * (~A + ~(B') * csc(~(e') + ~(f') * ~x))) / sqrt(~(d') * csc(~(e') + ~(f') * ~x)), ~x) => (~B / ~d) * Antiderivative(sqrt(~a + ~b * csc(~e + ~f * ~x)) * sqrt(~d * csc(~e + ~f * ~x)), ~x) + ~A * Antiderivative(sqrt(~a + ~b * csc(~e + ~f * ~x)) / sqrt(~d * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative(((~(d') * csc(~(e') + ~(f') * ~x)) ^ ~n * (~A + ~(B') * csc(~(e') + ~(f') * ~x))) / (~a + ~(b') * csc(~(e') + ~(f') * ~x)), ~x) => (~A / ~a) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ ~n, ~x) - ((~A * ~b - ~a * ~B) / (~a * ~d)) * Antiderivative((~d * csc(~e + ~f * ~x)) ^ (~n + 1) / (~a + ~b * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~m * (~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~A + ~(B') * csc(~(e') + ~(f') * ~x)), ~x) => Unintegrable((~a + ~b * csc(~e + ~f * ~x)) ^ ~m * (~d * csc(~e + ~f * ~x)) ^ ~n * (~A + ~B * csc(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~A, ~B, ~m, ~n], ~x) && (NeQ(~A * ~b - ~a * ~B, 0) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    #= Antiderivative(((~a)+(~b')*csc((~e')+(~f')*(~x)))^(~m')*((~c)+(~d')*csc((~e')+(~f')*(~x)))^(~n')*((~A')+ (~B')*csc((~e')+(~f')*(~x)))^(~p'),~x) :=  (-a*c)^m*Antiderivative(cot(e+f*x)^(2*m)*(c+d*csc(e+f*x))^(n-m)*(A+B*csc(e+f*x))^ p,x) <-- FreeQ([a,b,c,d,e,f,A,B,n,p],x) && EqQ(b*c+a*d,0) &&  EqQ(a^2-b^2,0) && IntegerQ(m) && Not(IntegerQ(n) && (LtQ(m,0) && GtQ(n,0) || LtQ(0,n,m) ||  LtQ(m,n,0))) =#
    @apply_utils Antiderivative((~a + ~(b') * csc(~(e') + ~(f') * ~x)) ^ ~(m') * (~c + ~(d') * csc(~(e') + ~(f') * ~x)) ^ ~(n') * (~(A') + ~(B') * csc(~(e') + ~(f') * ~x)) ^ ~(p'), ~x) => (-(~a) * ~c) ^ ~m * Antiderivative((cos(~e + ~f * ~x) ^ (2 * ~m) * (~d + ~c * sin(~e + ~f * ~x)) ^ (~n - ~m) * (~B + ~A * sin(~e + ~f * ~x)) ^ ~p) / sin(~e + ~f * ~x) ^ (~m + ~n + ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~n, ~p], ~x) && (EqQ(~b * ~c + ~a * ~d, 0) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegersQ(~m, ~n, ~p)))
end
