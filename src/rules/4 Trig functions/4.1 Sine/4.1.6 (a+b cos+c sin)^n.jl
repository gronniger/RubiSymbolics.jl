int_rules_4_1_6 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.1.6*(a+b*cos+c*sin)^n =#
    @apply_utils Antiderivative(sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (-2 * (~c * cos(~d + ~e * ~x) - ~b * sin(~d + ~e * ~x))) / (~e * sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0)
    @apply_utils Antiderivative((~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => (-((~c * cos(~d + ~e * ~x) - ~b * sin(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 1)) / (~e * ~n) + ((~a * (2 * ~n - 1)) / ~n) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && GtQ(~n, 0))
    @apply_utils Antiderivative(1 / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => -((~c - ~a * sin(~d + ~e * ~x))) / (~c * ~e * (~c * cos(~d + ~e * ~x) - ~b * sin(~d + ~e * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0)
    @apply_utils Antiderivative(1 / sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Antiderivative(1 / sqrt(~a + sqrt((~b) ^ 2 + (~c) ^ 2) * cos((~d + ~e * ~x) - atan(~b, ~c))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0)
    @apply_utils Antiderivative((~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => ((~c * cos(~d + ~e * ~x) - ~b * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (2 * ~n + 1)) + ((~n + 1) / (~a * (2 * ~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && LtQ(~n, -1))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (~b / (~c * ~e)) * Subst(Antiderivative(sqrt(~a + ~x) / ~x, ~x), ~x, ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ((~b) ^ 2 + (~c) ^ 2, 0)
    @apply_utils Antiderivative(sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Antiderivative(sqrt(~a + sqrt((~b) ^ 2 + (~c) ^ 2) * cos((~d + ~e * ~x) - atan(~b, ~c))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && GtQ(~a + sqrt((~b) ^ 2 + (~c) ^ 2), 0))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) / sqrt((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) / (~a + sqrt((~b) ^ 2 + (~c) ^ 2)))) * Antiderivative(sqrt(~a / (~a + sqrt((~b) ^ 2 + (~c) ^ 2)) + (sqrt((~b) ^ 2 + (~c) ^ 2) / (~a + sqrt((~b) ^ 2 + (~c) ^ 2))) * cos((~d + ~e * ~x) - atan(~b, ~c))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && Not(GtQ(~a + sqrt((~b) ^ 2 + (~c) ^ 2), 0))))
    @apply_utils Antiderivative((~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => (-((~c * cos(~d + ~e * ~x) - ~b * sin(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 1)) / (~e * ~n) + (1 / ~n) * Antiderivative(Simp(~n * (~a) ^ 2 + (~n - 1) * ((~b) ^ 2 + (~c) ^ 2) + ~a * ~b * (2 * ~n - 1) * cos(~d + ~e * ~x) + ~a * ~c * (2 * ~n - 1) * sin(~d + ~e * ~x), ~x) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && GtQ(~n, 1))
    #= Antiderivative(1/((~a)+(~b')*cos((~d')+(~e')*(~x))+(~c')*sin((~d')+(~e')*(~x))),~x) :=  x/sqrt(a^2-b^2-c^2) + 2/(e*sqrt(a^2-b^2-c^2))*atan((c*cos(d+e*x)-b*sin(d+e*x))/(a+sqrt( a^2-b^2-c^2)+b*cos(d+e*x)+c*sin(d+e*x))) <-- FreeQ([a,b,c,d,e],x) &&  GtQ(a^2-b^2-c^2,0) =#
    #= Antiderivative(1/((~a)+(~b')*cos((~d')+(~e')*(~x))+(~c')*sin((~d')+(~e')*(~x))),~x) :=  log(RemoveContent(b^2+c^2+(a*b-c*Rt(-a^2+b^2+c^2,2))*cos(d+e*x)+(a*c+ b*sqrt(-a^2+b^2+c^2))*sin(d+e*x),x))/ (2*e*Rt(-a^2+b^2+c^2,2)) - log(RemoveContent(b^2+c^2+(a*b+c*Rt(-a^2+b^2+c^2,2))*cos(d+e*x)+(a* c-b*sqrt(-a^2+b^2+c^2))*sin(d+e*x),x))/ (2*e*Rt(-a^2+b^2+c^2,2)) <-- FreeQ([a,b,c,d,e],x) &&  LtQ(a^2-b^2-c^2,0) =#
    @apply_utils Antiderivative(1 / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Module([f = FreeFactors(cot((~d + ~e * ~x) / 2), ~x)], (-f / ~e) * Subst(Antiderivative(1 / (~a + ~c * f * ~x), ~x), ~x, cot((~d + ~e * ~x) / 2) / f)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~a + ~b, 0)
    @apply_utils Antiderivative(1 / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Module([f = FreeFactors(tan((~d + ~e * ~x) / 2 + pi / 4), ~x)], (f / ~e) * Subst(Antiderivative(1 / (~a + ~b * f * ~x), ~x), ~x, tan((~d + ~e * ~x) / 2 + pi / 4) / f)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~a + ~c, 0)
    @apply_utils Antiderivative(1 / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Module([f = FreeFactors(cot((~d + ~e * ~x) / 2 + pi / 4), ~x)], (-f / ~e) * Subst(Antiderivative(1 / (~a + ~b * f * ~x), ~x), ~x, cot((~d + ~e * ~x) / 2 + pi / 4) / f)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~a - ~c, 0) && NeQ(~a - ~b, 0))
    @apply_utils Antiderivative(1 / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Module([f = FreeFactors(tan((~d + ~e * ~x) / 2), ~x)], ((2 * f) / ~e) * Subst(Antiderivative(1 / (~a + ~b + 2 * ~c * f * ~x + (~a - ~b) * f ^ 2 * (~x) ^ 2), ~x), ~x, tan((~d + ~e * ~x) / 2) / f)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0)
    @apply_utils Antiderivative(1 / sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (~b / (~c * ~e)) * Subst(Antiderivative(1 / (~x * sqrt(~a + ~x)), ~x), ~x, ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ((~b) ^ 2 + (~c) ^ 2, 0)
    @apply_utils Antiderivative(1 / sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => Antiderivative(1 / sqrt(~a + sqrt((~b) ^ 2 + (~c) ^ 2) * cos((~d + ~e * ~x) - atan(~b, ~c))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && GtQ(~a + sqrt((~b) ^ 2 + (~c) ^ 2), 0))
    @apply_utils Antiderivative(1 / sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (sqrt((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) / (~a + sqrt((~b) ^ 2 + (~c) ^ 2))) / sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) * Antiderivative(1 / sqrt(~a / (~a + sqrt((~b) ^ 2 + (~c) ^ 2)) + (sqrt((~b) ^ 2 + (~c) ^ 2) / (~a + sqrt((~b) ^ 2 + (~c) ^ 2))) * cos((~d + ~e * ~x) - atan(~b, ~c))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && Not(GtQ(~a + sqrt((~b) ^ 2 + (~c) ^ 2), 0))))
    @apply_utils Antiderivative(1 / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ (3 / 2), ~x) => (2 * (~c * cos(~d + ~e * ~x) - ~b * sin(~d + ~e * ~x))) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) + (1 / (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) * Antiderivative(sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0)
    @apply_utils Antiderivative((~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => ((-(~c) * cos(~d + ~e * ~x) + ~b * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1)) / (~e * (~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) + (1 / ((~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2))) * Antiderivative(((~a * (~n + 1) - ~b * (~n + 2) * cos(~d + ~e * ~x)) - ~c * (~n + 2) * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && (LtQ(~n, -1) && NeQ(~n, -3 / 2)))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => ((((2 * ~a * ~A - ~b * ~B) - ~c * ~C) * ~x) / (2 * (~a) ^ 2) - ((~b * ~B + ~c * ~C) * (~b * cos(~d + ~e * ~x) - ~c * sin(~d + ~e * ~x))) / (2 * ~a * ~b * ~c * ~e)) + ((((~a) ^ 2 * (~b * ~B - ~c * ~C) - 2 * ~a * ~A * (~b) ^ 2) + (~b) ^ 2 * (~b * ~B + ~c * ~C)) * log(RemoveContent(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x), ~x))) / (2 * (~a) ^ 2 * ~b * ~c * ~e) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && EqQ((~b) ^ 2 + (~c) ^ 2, 0)
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (((2 * ~a * ~A - ~c * ~C) * ~x) / (2 * (~a) ^ 2) - (~C * cos(~d + ~e * ~x)) / (2 * ~a * ~e)) + (~c * ~C * sin(~d + ~e * ~x)) / (2 * ~a * ~b * ~e) + ((-((~a) ^ 2) * ~C + 2 * ~a * ~c * ~A + (~b) ^ 2 * ~C) * log(RemoveContent(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x), ~x))) / (2 * (~a) ^ 2 * ~b * ~e) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && EqQ((~b) ^ 2 + (~c) ^ 2, 0)
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) / (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (((2 * ~a * ~A - ~b * ~B) * ~x) / (2 * (~a) ^ 2) - (~b * ~B * cos(~d + ~e * ~x)) / (2 * ~a * ~c * ~e)) + (~B * sin(~d + ~e * ~x)) / (2 * ~a * ~e) + ((((~a) ^ 2 * ~B - 2 * ~a * ~b * ~A) + (~b) ^ 2 * ~B) * log(RemoveContent(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x), ~x))) / (2 * (~a) ^ 2 * ~c * ~e) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && EqQ((~b) ^ 2 + (~c) ^ 2, 0)
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => ((~b * ~B + ~c * ~C) * ~x) / ((~b) ^ 2 + (~c) ^ 2) + ((~c * ~B - ~b * ~C) * log(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) / (~e * ((~b) ^ 2 + (~c) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && EqQ(~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * (~b * ~B + ~c * ~C), 0))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (~c * ~C * ~x) / ((~b) ^ 2 + (~c) ^ 2) - (~b * ~C * log(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) / (~e * ((~b) ^ 2 + (~c) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && EqQ(~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * ~c * ~C, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (~b * ~B * ~x) / ((~b) ^ 2 + (~c) ^ 2) + (~c * ~B * log(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) / (~e * ((~b) ^ 2 + (~c) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && EqQ(~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * ~b * ~B, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => ((~b * ~B + ~c * ~C) * ~x) / ((~b) ^ 2 + (~c) ^ 2) + ((~c * ~B - ~b * ~C) * log(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) / (~e * ((~b) ^ 2 + (~c) ^ 2)) + ((~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * (~b * ~B + ~c * ~C)) / ((~b) ^ 2 + (~c) ^ 2)) * Antiderivative(1 / (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && NeQ(~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * (~b * ~B + ~c * ~C), 0))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => ((~c * ~C * (~d + ~e * ~x)) / (~e * ((~b) ^ 2 + (~c) ^ 2)) - (~b * ~C * log(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) / (~e * ((~b) ^ 2 + (~c) ^ 2))) + ((~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * ~c * ~C) / ((~b) ^ 2 + (~c) ^ 2)) * Antiderivative(1 / (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && NeQ(~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * ~c * ~C, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (~b * ~B * (~d + ~e * ~x)) / (~e * ((~b) ^ 2 + (~c) ^ 2)) + (~c * ~B * log(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) / (~e * ((~b) ^ 2 + (~c) ^ 2)) + ((~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * ~b * ~B) / ((~b) ^ 2 + (~c) ^ 2)) * Antiderivative(1 / (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && NeQ(~A * ((~b) ^ 2 + (~c) ^ 2) - ~a * ~b * ~B, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((((~B * ~c - ~b * ~C) - ~a * ~C * cos(~d + ~e * ~x)) + ~a * ~B * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C, ~n], ~x) && (NeQ(~n, -1) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && EqQ((~b * ~B + ~c * ~C) * ~n + ~a * ~A * (~n + 1), 0)))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => (-((~b * ~C + ~a * ~C * cos(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C, ~n], ~x) && (NeQ(~n, -1) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && EqQ(~c * ~C * ~n + ~a * ~A * (~n + 1), 0)))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((~B * ~c + ~a * ~B * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~n], ~x) && (NeQ(~n, -1) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && EqQ(~b * ~B * ~n + ~a * ~A * (~n + 1), 0)))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((((~B * ~c - ~b * ~C) - ~a * ~C * cos(~d + ~e * ~x)) + ~a * ~B * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) + (((~b * ~B + ~c * ~C) * ~n + ~a * ~A * (~n + 1)) / (~a * (~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C, ~n], ~x) && (NeQ(~n, -1) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ((~b * ~B + ~c * ~C) * ~n + ~a * ~A * (~n + 1), 0)))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => (-((~b * ~C + ~a * ~C * cos(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) + ((~c * ~C * ~n + ~a * ~A * (~n + 1)) / (~a * (~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C, ~n], ~x) && (NeQ(~n, -1) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~c * ~C * ~n + ~a * ~A * (~n + 1), 0)))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((~B * ~c + ~a * ~B * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) + ((~b * ~B * ~n + ~a * ~A * (~n + 1)) / (~a * (~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~n], ~x) && (NeQ(~n, -1) && (EqQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~b * ~B * ~n + ~a * ~A * (~n + 1), 0)))
    @apply_utils Antiderivative((~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) * (~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((~c * ~B - ~b * ~C) * (~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1)) / (~e * (~n + 1) * ((~b) ^ 2 + (~c) ^ 2)) <-- FreeQ([~b, ~c, ~d, ~e, ~B, ~C], ~x) && (NeQ(~n, -1) && (NeQ((~b) ^ 2 + (~c) ^ 2, 0) && EqQ(~b * ~B + ~c * ~C, 0)))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((((~B * ~c - ~b * ~C) - ~a * ~C * cos(~d + ~e * ~x)) + ~a * ~B * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) + (1 / (~a * (~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 1) * Simp(~a * (~b * ~B + ~c * ~C) * ~n + (~a) ^ 2 * ~A * (~n + 1) + (~n * (((~a) ^ 2 * ~B - ~B * (~c) ^ 2) + ~b * ~c * ~C) + ~a * ~b * ~A * (~n + 1)) * cos(~d + ~e * ~x) + (~n * ((~b * ~B * ~c + (~a) ^ 2 * ~C) - (~b) ^ 2 * ~C) + ~a * ~c * ~A * (~n + 1)) * sin(~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (GtQ(~n, 0) && NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => (-((~b * ~C + ~a * ~C * cos(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) + (1 / (~a * (~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 1) * Simp(~a * ~c * ~C * ~n + (~a) ^ 2 * ~A * (~n + 1) + (~c * ~b * ~C * ~n + ~a * ~b * ~A * (~n + 1)) * cos(~d + ~e * ~x) + (((~a) ^ 2 * ~C * ~n - (~b) ^ 2 * ~C * ~n) + ~a * ~c * ~A * (~n + 1)) * sin(~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && (GtQ(~n, 0) && NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) * (~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => ((~B * ~c + ~a * ~B * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a * ~e * (~n + 1)) + (1 / (~a * (~n + 1))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n - 1) * Simp(~a * ~b * ~B * ~n + (~a) ^ 2 * ~A * (~n + 1) + (((~a) ^ 2 * ~B * ~n - (~c) ^ 2 * ~B * ~n) + ~a * ~b * ~A * (~n + 1)) * cos(~d + ~e * ~x) + (~b * ~c * ~B * ~n + ~a * ~c * ~A * (~n + 1)) * sin(~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && (GtQ(~n, 0) && NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) / sqrt(~a + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)), ~x) => (~B / ~b) * Antiderivative(sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) + ((~A * ~b - ~a * ~B) / ~b) * Antiderivative(1 / sqrt(~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (EqQ(~B * ~c - ~b * ~C, 0) && NeQ(~A * ~b - ~a * ~B, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ 2, ~x) => (((~c * ~B - ~b * ~C) - (~a * ~C - ~c * ~A) * cos(~d + ~e * ~x)) + (~a * ~B - ~b * ~A) * sin(~d + ~e * ~x)) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && EqQ((~a * ~A - ~b * ~B) - ~c * ~C, 0))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ 2, ~x) => -((~b * ~C + (~a * ~C - ~c * ~A) * cos(~d + ~e * ~x) + ~b * ~A * sin(~d + ~e * ~x))) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && EqQ(~a * ~A - ~c * ~C, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ 2, ~x) => (~c * ~B + ~c * ~A * cos(~d + ~e * ~x) + (~a * ~B - ~b * ~A) * sin(~d + ~e * ~x)) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && EqQ(~a * ~A - ~b * ~B, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ 2, ~x) => (((~c * ~B - ~b * ~C) - (~a * ~C - ~c * ~A) * cos(~d + ~e * ~x)) + (~a * ~B - ~b * ~A) * sin(~d + ~e * ~x)) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) + (((~a * ~A - ~b * ~B) - ~c * ~C) / (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) * Antiderivative(1 / (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ((~a * ~A - ~b * ~B) - ~c * ~C, 0))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ 2, ~x) => -((~b * ~C + (~a * ~C - ~c * ~A) * cos(~d + ~e * ~x) + ~b * ~A * sin(~d + ~e * ~x))) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) + ((~a * ~A - ~c * ~C) / (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) * Antiderivative(1 / (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~a * ~A - ~c * ~C, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) / (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ 2, ~x) => (~c * ~B + ~c * ~A * cos(~d + ~e * ~x) + (~a * ~B - ~b * ~A) * sin(~d + ~e * ~x)) / (~e * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x))) + ((~a * ~A - ~b * ~B) / (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) * Antiderivative(1 / (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~a * ~A - ~b * ~B, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x) + ~(C') * sin(~(d') + ~(e') * ~x)) * (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => (-((((~c * ~B - ~b * ~C) - (~a * ~C - ~c * ~A) * cos(~d + ~e * ~x)) + (~a * ~B - ~b * ~A) * sin(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1)) / (~e * (~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) + (1 / ((~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1) * Simp((~n + 1) * ((~a * ~A - ~b * ~B) - ~c * ~C) + (~n + 2) * (~a * ~B - ~b * ~A) * cos(~d + ~e * ~x) + (~n + 2) * (~a * ~C - ~c * ~A) * sin(~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B, ~C], ~x) && (LtQ(~n, -1) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~n, -2)))
    @apply_utils Antiderivative((~(A') + ~(C') * sin(~(d') + ~(e') * ~x)) * (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => ((~b * ~C + (~a * ~C - ~c * ~A) * cos(~d + ~e * ~x) + ~b * ~A * sin(~d + ~e * ~x)) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1)) / (~e * (~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) + (1 / ((~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1) * Simp(((~n + 1) * (~a * ~A - ~c * ~C) - (~n + 2) * ~b * ~A * cos(~d + ~e * ~x)) + (~n + 2) * (~a * ~C - ~c * ~A) * sin(~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~C], ~x) && (LtQ(~n, -1) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~n, -2)))
    @apply_utils Antiderivative((~(A') + ~(B') * cos(~(d') + ~(e') * ~x)) * (~(a') + ~(b') * cos(~(d') + ~(e') * ~x) + ~(c') * sin(~(d') + ~(e') * ~x)) ^ ~n, ~x) => (-((~c * ~B + ~c * ~A * cos(~d + ~e * ~x) + (~a * ~B - ~b * ~A) * sin(~d + ~e * ~x))) * (~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1)) / (~e * (~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2)) + (1 / ((~n + 1) * (((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2))) * Antiderivative((~a + ~b * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ (~n + 1) * Simp(((~n + 1) * (~a * ~A - ~b * ~B) + (~n + 2) * (~a * ~B - ~b * ~A) * cos(~d + ~e * ~x)) - (~n + 2) * ~c * ~A * sin(~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~A, ~B], ~x) && (LtQ(~n, -1) && (NeQ(((~a) ^ 2 - (~b) ^ 2) - (~c) ^ 2, 0) && NeQ(~n, -2)))
    @apply_utils Antiderivative(1 / (~(a') + ~(b') * sec(~(d') + ~(e') * ~x) + ~(c') * tan(~(d') + ~(e') * ~x)), ~x) => Antiderivative(cos(~d + ~e * ~x) / (~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative(1 / (~(a') + ~(b') * csc(~(d') + ~(e') * ~x) + ~(c') * cot(~(d') + ~(e') * ~x)), ~x) => Antiderivative(sin(~d + ~e * ~x) / (~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative(cos(~(d') + ~(e') * ~x) ^ ~(n') * (~(a') + ~(b') * sec(~(d') + ~(e') * ~x) + ~(c') * tan(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => Antiderivative((~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && IntegerQ(~n)
    @apply_utils Antiderivative(sin(~(d') + ~(e') * ~x) ^ ~(n') * (~(a') + ~(b') * csc(~(d') + ~(e') * ~x) + ~(c') * cot(~(d') + ~(e') * ~x)) ^ ~(n'), ~x) => Antiderivative((~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && IntegerQ(~n)
    @apply_utils Antiderivative(cos(~(d') + ~(e') * ~x) ^ ~n * (~(a') + ~(b') * sec(~(d') + ~(e') * ~x) + ~(c') * tan(~(d') + ~(e') * ~x)) ^ ~n, ~x) => ((cos(~d + ~e * ~x) ^ ~n * (~a + ~b * sec(~d + ~e * ~x) + ~c * tan(~d + ~e * ~x)) ^ ~n) / (~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) * Antiderivative((~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && Not(IntegerQ(~n))
    @apply_utils Antiderivative(sin(~(d') + ~(e') * ~x) ^ ~n * (~(a') + ~(b') * csc(~(d') + ~(e') * ~x) + ~(c') * cot(~(d') + ~(e') * ~x)) ^ ~n, ~x) => ((sin(~d + ~e * ~x) ^ ~n * (~a + ~b * csc(~d + ~e * ~x) + ~c * cot(~d + ~e * ~x)) ^ ~n) / (~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)) ^ ~n) * Antiderivative((~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && Not(IntegerQ(~n))
    @apply_utils Antiderivative(sec(~(d') + ~(e') * ~x) ^ ~(n') * (~(a') + ~(b') * sec(~(d') + ~(e') * ~x) + ~(c') * tan(~(d') + ~(e') * ~x)) ^ ~m, ~x) => Antiderivative(1 / (~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~m + ~n, 0) && IntegerQ(~n))
    @apply_utils Antiderivative(csc(~(d') + ~(e') * ~x) ^ ~(n') * (~(a') + ~(b') * csc(~(d') + ~(e') * ~x) + ~(c') * cot(~(d') + ~(e') * ~x)) ^ ~m, ~x) => Antiderivative(1 / (~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~m + ~n, 0) && IntegerQ(~n))
    @apply_utils Antiderivative(sec(~(d') + ~(e') * ~x) ^ ~(n') * (~(a') + ~(b') * sec(~(d') + ~(e') * ~x) + ~(c') * tan(~(d') + ~(e') * ~x)) ^ ~m, ~x) => ((sec(~d + ~e * ~x) ^ ~n * (~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n) / (~a + ~b * sec(~d + ~e * ~x) + ~c * tan(~d + ~e * ~x)) ^ ~n) * Antiderivative(1 / (~b + ~a * cos(~d + ~e * ~x) + ~c * sin(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~m + ~n, 0) && Not(IntegerQ(~n)))
    @apply_utils Antiderivative(csc(~(d') + ~(e') * ~x) ^ ~(n') * (~(a') + ~(b') * csc(~(d') + ~(e') * ~x) + ~(c') * cot(~(d') + ~(e') * ~x)) ^ ~m, ~x) => ((csc(~d + ~e * ~x) ^ ~n * (~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)) ^ ~n) / (~a + ~b * csc(~d + ~e * ~x) + ~c * cot(~d + ~e * ~x)) ^ ~n) * Antiderivative(1 / (~b + ~a * sin(~d + ~e * ~x) + ~c * cos(~d + ~e * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~m + ~n, 0) && Not(IntegerQ(~n)))
end
