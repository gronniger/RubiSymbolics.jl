int_rules_4_1_1_2 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.1.1.2*(g*cos)^p*(a+b*sin)^m =#
    @apply_utils Antiderivative(cos(~(e') + ~(f') * ~x) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (1 / ((~b) ^ ~p * ~f)) * Subst(Antiderivative((~a + ~x) ^ (~m + (~p - 1) / 2) * (~a - ~x) ^ ((~p - 1) / 2), ~x), ~x, ~b * sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (IntegerQ((~p - 1) / 2) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GeQ(~p, -1) || Not(IntegerQ(~m + 1 / 2)))))
    @apply_utils Antiderivative(cos(~(e') + ~(f') * ~x) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (1 / ((~b) ^ ~p * ~f)) * Subst(Antiderivative((~a + ~x) ^ ~m * ((~b) ^ 2 - (~x) ^ 2) ^ ((~p - 1) / 2), ~x), ~x, ~b * sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (IntegerQ((~p - 1) / 2) && NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1)) / (~f * ~g * (~p + 1)) + ~a * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (IntegerQ(2 * ~p) || NeQ((~a) ^ 2 - (~b) ^ 2, 0))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~a / ~g) ^ (2 * ~m) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (2 * ~m + ~p) / (~a - ~b * sin(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~m) && (LtQ(~p, -1) && GeQ(2 * ~m + ~p, 0))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (~a * ~f * ~g * ~m) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (EqQ(Simplify(~m + ~p + 1), 0) && Not(ILtQ(~p, 0))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (~a * ~f * ~g * Simplify(2 * ~m + ~p + 1)) + (Simplify(~m + ~p + 1) / (~a * Simplify(2 * ~m + ~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (ILtQ(Simplify(~m + ~p + 1), 0) && (NeQ(2 * ~m + ~p + 1, 0) && Not(IGtQ(~m, 0)))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1)) / (~f * ~g * (~m - 1)) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (EqQ((2 * ~m + ~p) - 1, 0) && NeQ(~m, 1)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1)) / (~f * ~g * (~m + ~p)) + ((~a * ((2 * ~m + ~p) - 1)) / (~m + ~p)) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IGtQ(Simplify(((2 * ~m + ~p) - 1) / 2), 0) && NeQ(~m + ~p, 0)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (~a * ~f * ~g * (~p + 1)) + ((~a * (~m + ~p + 1)) / ((~g) ^ 2 * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 0) && (LeQ(~p, -2 * ~m) && IntegersQ(~m + 1 / 2, 2 * ~p))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-2 * ~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1)) / (~f * ~g * (~p + 1)) + (((~b) ^ 2 * ((2 * ~m + ~p) - 1)) / ((~g) ^ 2 * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 2), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1) && (LtQ(~p, -1) && IntegersQ(2 * ~m, 2 * ~p))))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * sin(~(e') + ~(f') * ~x)) / sqrt(~(g') * cos(~(e') + ~(f') * ~x)), ~x) => ((~a * sqrt(1 + cos(~e + ~f * ~x)) * sqrt(~a + ~b * sin(~e + ~f * ~x))) / (~a + ~a * cos(~e + ~f * ~x) + ~b * sin(~e + ~f * ~x))) * Antiderivative(sqrt(1 + cos(~e + ~f * ~x)) / sqrt(~g * cos(~e + ~f * ~x)), ~x) + ((~b * sqrt(1 + cos(~e + ~f * ~x)) * sqrt(~a + ~b * sin(~e + ~f * ~x))) / (~a + ~a * cos(~e + ~f * ~x) + ~b * sin(~e + ~f * ~x))) * Antiderivative(sin(~e + ~f * ~x) / (sqrt(~g * cos(~e + ~f * ~x)) * sqrt(1 + cos(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && EqQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1)) / (~f * ~g * (~m + ~p)) + ((~a * ((2 * ~m + ~p) - 1)) / (~m + ~p)) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 0) && (NeQ(~m + ~p, 0) && IntegersQ(2 * ~m, 2 * ~p))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + ~p)) + (((~g) ^ 2 * (~p - 1)) / (~a * (~m + ~p))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p - 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && (GtQ(~p, 1) && ((GtQ(~m, -2) || (EqQ(2 * ~m + ~p + 1, 0) || EqQ(~m, -2) && IntegerQ(~p))) && (NeQ(~m + ~p, 0) && IntegersQ(2 * ~m, 2 * ~p))))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (2 * ~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (2 * ~m + ~p + 1)) + (((~g) ^ 2 * (~p - 1)) / ((~b) ^ 2 * (2 * ~m + ~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p - 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 2), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (LeQ(~m, -2) && (GtQ(~p, 1) && (NeQ(2 * ~m + ~p + 1, 0) && (Not(ILtQ(~m + ~p + 1, 0)) && IntegersQ(2 * ~m, 2 * ~p))))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (~a * ~f * ~g * (2 * ~m + ~p + 1)) + ((~m + ~p + 1) / (~a * (2 * ~m + ~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && (NeQ(2 * ~m + ~p + 1, 0) && IntegersQ(2 * ~m, 2 * ~p))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1)) / (~b * ~f * (~p - 1)) + ((~g) ^ 2 / ~a) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~p, 1) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1)) / (~a * ~f * ~g * (~p - 1) * (~a + ~b * sin(~e + ~f * ~x))) + (~p / (~a * (~p - 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(GeQ(~p, 1)) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative(sqrt(~(g') * cos(~(e') + ~(f') * ~x)) / sqrt(~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => ((~g * sqrt(1 + cos(~e + ~f * ~x)) * sqrt(~a + ~b * sin(~e + ~f * ~x))) / (~a + ~a * cos(~e + ~f * ~x) + ~b * sin(~e + ~f * ~x))) * Antiderivative(sqrt(1 + cos(~e + ~f * ~x)) / sqrt(~g * cos(~e + ~f * ~x)), ~x) - ((~g * sqrt(1 + cos(~e + ~f * ~x)) * sqrt(~a + ~b * sin(~e + ~f * ~x))) / (~b + ~b * cos(~e + ~f * ~x) + ~a * sin(~e + ~f * ~x))) * Antiderivative(sin(~e + ~f * ~x) / (sqrt(~g * cos(~e + ~f * ~x)) * sqrt(1 + cos(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && EqQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ (3 / 2) / sqrt(~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (~g * sqrt(~g * cos(~e + ~f * ~x)) * sqrt(~a + ~b * sin(~e + ~f * ~x))) / (~b * ~f) + ((~g) ^ 2 / (2 * ~a)) * Antiderivative(sqrt(~a + ~b * sin(~e + ~f * ~x)) / sqrt(~g * cos(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && EqQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p / sqrt(~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (-2 * ~b * (~g * cos(~e + ~f * ~x)) ^ (~p + 1)) / (~f * ~g * (2 * ~p - 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (3 / 2)) + ((2 * ~a * (~p - 2)) / (2 * ~p - 1)) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p / (~a + ~b * sin(~e + ~f * ~x)) ^ (3 / 2), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~p, 2) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p / sqrt(~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1)) / (~a * ~f * ~g * (~p + 1) * sqrt(~a + ~b * sin(~e + ~f * ~x))) + ((~a * (2 * ~p + 1)) / (2 * (~g) ^ 2 * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) / (~a + ~b * sin(~e + ~f * ~x)) ^ (3 / 2), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~p, -1) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (((~a) ^ ~m * (~g * cos(~e + ~f * ~x)) ^ (~p + 1)) / (~f * ~g * (1 + sin(~e + ~f * ~x)) ^ ((~p + 1) / 2) * (1 - sin(~e + ~f * ~x)) ^ ((~p + 1) / 2))) * Subst(Antiderivative((1 + (~b / ~a) * ~x) ^ (~m + (~p - 1) / 2) * (1 - (~b / ~a) * ~x) ^ ((~p - 1) / 2), ~x), ~x, sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegerQ(~m))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (((~a) ^ 2 * (~g * cos(~e + ~f * ~x)) ^ (~p + 1)) / (~f * ~g * (~a + ~b * sin(~e + ~f * ~x)) ^ ((~p + 1) / 2) * (~a - ~b * sin(~e + ~f * ~x)) ^ ((~p + 1) / 2))) * Subst(Antiderivative((~a + ~b * ~x) ^ (~m + (~p - 1) / 2) * (~a - ~b * ~x) ^ ((~p - 1) / 2), ~x), ~x, sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-((~g * cos(~e + ~f * ~x)) ^ (~p + 1)) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m * sin(~e + ~f * ~x)) / (~f * ~g * (~p + 1)) + (1 / ((~g) ^ 2 * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1) * (~a * (~p + 2) + ~b * (~m + ~p + 2) * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(0, ~m, 1) && (LtQ(~p, -1) && (IntegersQ(2 * ~m, 2 * ~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-((~g * cos(~e + ~f * ~x)) ^ (~p + 1)) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1) * (~b + ~a * sin(~e + ~f * ~x))) / (~f * ~g * (~p + 1)) + (1 / ((~g) ^ 2 * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 2) * ((~b) ^ 2 * (~m - 1) + (~a) ^ 2 * (~p + 2) + ~a * ~b * (~m + ~p + 1) * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1) && (LtQ(~p, -1) && (IntegersQ(2 * ~m, 2 * ~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 1)) / (~f * ~g * (~m + ~p)) + (1 / (~m + ~p)) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - 2) * ((~b) ^ 2 * (~m - 1) + (~a) ^ 2 * (~m + ~p) + ~a * ~b * ((2 * ~m + ~p) - 1) * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~m, 1) && (NeQ(~m + ~p, 0) && (IntegersQ(2 * ~m, 2 * ~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1)) + (((~g) ^ 2 * (~p - 1)) / (~b * (~m + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p - 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) * sin(~e + ~f * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && (GtQ(~p, 1) && IntegersQ(2 * ~m, 2 * ~p))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (-(~b) * (~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~f * ~g * ((~a) ^ 2 - (~b) ^ 2) * (~m + 1)) + (1 / (((~a) ^ 2 - (~b) ^ 2) * (~m + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) * (~a * (~m + 1) - ~b * (~m + ~p + 2) * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && IntegersQ(2 * ~m, 2 * ~p)))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + ~p)) + (((~g) ^ 2 * (~p - 1)) / (~b * (~m + ~p))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p - 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (~b + ~a * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (GtQ(~p, 1) && (NeQ(~m + ~p, 0) && IntegersQ(2 * ~m, 2 * ~p))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => ((~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) * (~b - ~a * sin(~e + ~f * ~x))) / (~f * ~g * ((~a) ^ 2 - (~b) ^ 2) * (~p + 1)) + (1 / ((~g) ^ 2 * ((~a) ^ 2 - (~b) ^ 2) * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (((~a) ^ 2 * (~p + 2) - (~b) ^ 2 * (~m + ~p + 2)) + ~a * ~b * (~m + ~p + 3) * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~p, -1) && IntegersQ(2 * ~m, 2 * ~p)))
    @apply_utils Antiderivative(1 / (sqrt(~(g') * cos(~(e') + ~(f') * ~x)) * sqrt(~a + ~(b') * sin(~(e') + ~(f') * ~x))), ~x) => ((2 * sqrt(2) * sqrt(~g * cos(~e + ~f * ~x)) * sqrt((~a + ~b * sin(~e + ~f * ~x)) / ((~a - ~b) * (1 - sin(~e + ~f * ~x))))) / (~f * ~g * sqrt(~a + ~b * sin(~e + ~f * ~x)) * sqrt((1 + cos(~e + ~f * ~x) + sin(~e + ~f * ~x)) / ((1 + cos(~e + ~f * ~x)) - sin(~e + ~f * ~x))))) * Subst(Antiderivative(1 / sqrt(1 + ((~a + ~b) * (~x) ^ 4) / (~a - ~b)), ~x), ~x, sqrt((1 + cos(~e + ~f * ~x) + sin(~e + ~f * ~x)) / ((1 + cos(~e + ~f * ~x)) - sin(~e + ~f * ~x)))) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => ((~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1) * (1 - sin(~e + ~f * ~x)) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) * ((-((~a - ~b)) * (1 - sin(~e + ~f * ~x))) / ((~a + ~b) * (1 + sin(~e + ~f * ~x)))) ^ (~m / 2)) / (~f * (~a + ~b) * (~m + 1))) * HypergeometricFunctions._₂F₁(~m + 1, ~m / 2 + 1, ~m + 2, (2 * (~a + ~b * sin(~e + ~f * ~x))) / ((~a + ~b) * (1 + sin(~e + ~f * ~x)))) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && EqQ(~m + ~p + 1, 0))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => ((~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~f * ~g * (~a - ~b) * (~p + 1)) + (~a / ((~g) ^ 2 * (~a - ~b))) * Antiderivative(((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (1 - sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && EqQ(~m + ~p + 2, 0))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (((~g * cos(~e + ~f * ~x)) ^ (~p + 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~f * ~g * (~a - ~b) * (~p + 1)) - ((~b * (~m + ~p + 2)) / ((~g) ^ 2 * (~a - ~b) * (~p + 1))) * Antiderivative((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m, ~x)) + (~a / ((~g) ^ 2 * (~a - ~b))) * Antiderivative(((~g * cos(~e + ~f * ~x)) ^ (~p + 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (1 - sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && ILtQ(~m + ~p + 2, 0))
    @apply_utils Antiderivative(sqrt(~(g') * cos(~(e') + ~(f') * ~x)) / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => With([q = Rt(-((~a) ^ 2) + (~b) ^ 2, 2)], (((~a * ~g) / (2 * ~b)) * Antiderivative(1 / (sqrt(~g * cos(~e + ~f * ~x)) * (q + ~b * cos(~e + ~f * ~x))), ~x) - ((~a * ~g) / (2 * ~b)) * Antiderivative(1 / (sqrt(~g * cos(~e + ~f * ~x)) * (q - ~b * cos(~e + ~f * ~x))), ~x)) + ((~b * ~g) / ~f) * Subst(Antiderivative(sqrt(~x) / ((~g) ^ 2 * ((~a) ^ 2 - (~b) ^ 2) + (~b) ^ 2 * (~x) ^ 2), ~x), ~x, ~g * cos(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative(1 / (sqrt(~(g') * cos(~(e') + ~(f') * ~x)) * (~a + ~(b') * sin(~(e') + ~(f') * ~x))), ~x) => With([q = Rt(-((~a) ^ 2) + (~b) ^ 2, 2)], ((-(~a) / (2q)) * Antiderivative(1 / (sqrt(~g * cos(~e + ~f * ~x)) * (q + ~b * cos(~e + ~f * ~x))), ~x) - (~a / (2q)) * Antiderivative(1 / (sqrt(~g * cos(~e + ~f * ~x)) * (q - ~b * cos(~e + ~f * ~x))), ~x)) + ((~b * ~g) / ~f) * Subst(Antiderivative(1 / (sqrt(~x) * ((~g) ^ 2 * ((~a) ^ 2 - (~b) ^ 2) + (~b) ^ 2 * (~x) ^ 2)), ~x), ~x, ~g * cos(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => ((~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + ~p) * ((-(~b) * (1 - sin(~e + ~f * ~x))) / (~a + ~b * sin(~e + ~f * ~x))) ^ ((~p - 1) / 2) * ((~b * (1 + sin(~e + ~f * ~x))) / (~a + ~b * sin(~e + ~f * ~x))) ^ ((~p - 1) / 2))) * AppellF1(-(~p) - ~m, (1 - ~p) / 2, (1 - ~p) / 2, (1 - ~p) - ~m, (~a + ~b) / (~a + ~b * sin(~e + ~f * ~x)), (~a - ~b) / (~a + ~b * sin(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (ILtQ(~m, 0) && Not(IGtQ(~m + ~p + 1, 0))))
    @apply_utils Antiderivative((~(g') * cos(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => ((~g * (~g * cos(~e + ~f * ~x)) ^ (~p - 1)) / (~f * (1 - (~a + ~b * sin(~e + ~f * ~x)) / (~a - ~b)) ^ ((~p - 1) / 2) * (1 - (~a + ~b * sin(~e + ~f * ~x)) / (~a + ~b)) ^ ((~p - 1) / 2))) * Subst(Antiderivative((-(~b) / (~a - ~b) - (~b * ~x) / (~a - ~b)) ^ ((~p - 1) / 2) * (~b / (~a + ~b) - (~b * ~x) / (~a + ~b)) ^ ((~p - 1) / 2) * (~a + ~b * ~x) ^ ~m, ~x), ~x, sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && Not(IGtQ(~m, 0)))
    @apply_utils Antiderivative((~(g') * sec(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (~g) ^ (2 * IntPart(~p)) * (~g * cos(~e + ~f * ~x)) ^ FracPart(~p) * (~g * sec(~e + ~f * ~x)) ^ FracPart(~p) * Antiderivative((~a + ~b * sin(~e + ~f * ~x)) ^ ~m / (~g * cos(~e + ~f * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && Not(IntegerQ(~p))
end
