int_rules_4_1_13 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.1.13*(d+e*x)^m*sin(a+b*x+c*x^2)^n =#
    @apply_utils Antiderivative(sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Antiderivative(sin((~b + 2 * ~c * ~x) ^ 2 / (4 * ~c)), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative(cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Antiderivative(cos((~b + 2 * ~c * ~x) ^ 2 / (4 * ~c)), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && EqQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative(sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => cos(((~b) ^ 2 - 4 * ~a * ~c) / (4 * ~c)) * Antiderivative(sin((~b + 2 * ~c * ~x) ^ 2 / (4 * ~c)), ~x) - sin(((~b) ^ 2 - 4 * ~a * ~c) / (4 * ~c)) * Antiderivative(cos((~b + 2 * ~c * ~x) ^ 2 / (4 * ~c)), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && NeQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative(cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => cos(((~b) ^ 2 - 4 * ~a * ~c) / (4 * ~c)) * Antiderivative(cos((~b + 2 * ~c * ~x) ^ 2 / (4 * ~c)), ~x) + sin(((~b) ^ 2 - 4 * ~a * ~c) / (4 * ~c)) * Antiderivative(sin((~b + 2 * ~c * ~x) ^ 2 / (4 * ~c)), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && NeQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative(sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce(sin(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative(cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce(cos(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative(sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(n'), ~x) => Unintegrable(sin(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
    @apply_utils Antiderivative(cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(n'), ~x) => Unintegrable(cos(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
    @apply_utils Antiderivative(sin(~v) ^ ~(n'), ~x) => Antiderivative(sin(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- IGtQ(~n, 0) && (QuadraticQ(~v, ~x) && Not(QuadraticMatchQ(~v, ~x)))
    @apply_utils Antiderivative(cos(~v) ^ ~(n'), ~x) => Antiderivative(cos(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- IGtQ(~n, 0) && (QuadraticQ(~v, ~x) && Not(QuadraticMatchQ(~v, ~x)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (-(~e) * cos(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(2 * ~c * ~d - ~b * ~e, 0)
    @apply_utils Antiderivative((~d + ~(e') * ~x) * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * sin(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(2 * ~c * ~d - ~b * ~e, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (-(~e) * (~d + ~e * ~x) ^ (~m - 1) * cos(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) + (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * sin(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * sin(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * cos(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) + ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (-(~e) * cos(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) + ((2 * ~c * ~d - ~b * ~e) / (2 * ~c)) * Antiderivative(sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ(2 * ~c * ~d - ~b * ~e, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * sin(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) + ((2 * ~c * ~d - ~b * ~e) / (2 * ~c)) * Antiderivative(cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ(2 * ~c * ~d - ~b * ~e, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((-(~e) * (~d + ~e * ~x) ^ (~m - 1) * cos(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - ((~b * ~e - 2 * ~c * ~d) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) + (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(~b * ~e - 2 * ~c * ~d, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~e * (~d + ~e * ~x) ^ (~m - 1) * sin(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - ((~b * ~e - 2 * ~c * ~d) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) - (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(~b * ~e - 2 * ~c * ~d, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (((~d + ~e * ~x) ^ (~m + 1) * sin(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - ((~b * ~e - 2 * ~c * ~d) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) - ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * cos(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(~b * ~e - 2 * ~c * ~d, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * cos(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) + ((~b * ~e - 2 * ~c * ~d) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) + ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * sin(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(~b * ~e - 2 * ~c * ~d, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce((~d + ~e * ~x) ^ ~m, sin(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce((~d + ~e * ~x) ^ ~m, cos(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sin(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(n'), ~x) => Unintegrable((~d + ~e * ~x) ^ ~m * sin(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * cos(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(n'), ~x) => Unintegrable((~d + ~e * ~x) ^ ~m * cos(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x)
    @apply_utils Antiderivative((~u) ^ ~(m') * sin(~v) ^ ~(n'), ~x) => Antiderivative(ExpandToSum(~u, ~x) ^ ~m * sin(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- FreeQ(~m, ~x) && (IGtQ(~n, 0) && (LinearQ(~u, ~x) && (QuadraticQ(~v, ~x) && Not(LinearMatchQ(~u, ~x) && QuadraticMatchQ(~v, ~x)))))
    @apply_utils Antiderivative((~u) ^ ~(m') * cos(~v) ^ ~(n'), ~x) => Antiderivative(ExpandToSum(~u, ~x) ^ ~m * cos(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- FreeQ(~m, ~x) && (IGtQ(~n, 0) && (LinearQ(~u, ~x) && (QuadraticQ(~v, ~x) && Not(LinearMatchQ(~u, ~x) && QuadraticMatchQ(~v, ~x)))))
end
