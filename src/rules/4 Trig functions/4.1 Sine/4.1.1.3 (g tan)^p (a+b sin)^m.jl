int_rules_4_1_1_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.1.1.3*(g*tan)^p*(a+b*sin)^m =#
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~(p') / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => (1 / ~a) * Antiderivative(sec(~e + ~f * ~x) ^ 2 * (~g * tan(~e + ~f * ~x)) ^ ~p, ~x) - (1 / (~b * ~g)) * Antiderivative(sec(~e + ~f * ~x) * (~g * tan(~e + ~f * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && NeQ(~p, -1))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (1 / ~f) * Subst(Antiderivative(((~x) ^ ~p * (~a + ~x) ^ (~m - (~p + 1) / 2)) / (~a - ~x) ^ ((~p + 1) / 2), ~x), ~x, ~b * sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegerQ((~p + 1) / 2))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (~a) ^ ~p * Antiderivative(sin(~e + ~f * ~x) ^ ~p / (~a - ~b * sin(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegersQ(~m, ~p) && EqQ(~p, 2 * ~m)))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~a) ^ ~p * Antiderivative(ExpandIntegrand((sin(~e + ~f * ~x) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m - ~p / 2)) / (~a - ~b * sin(~e + ~f * ~x)) ^ (~p / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegersQ(~m, ~p / 2) && (LtQ(~p, 0) || GtQ(~m - ~p / 2, 0))))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => Antiderivative(ExpandIntegrand((~g * tan(~e + ~f * ~x)) ^ ~p, (~a + ~b * sin(~e + ~f * ~x)) ^ ~m, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && IGtQ(~m, 0))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~a) ^ (2 * ~m) * Antiderivative(ExpandIntegrand((~g * tan(~e + ~f * ~x)) ^ ~p * sec(~e + ~f * ~x) ^ -(~m), (~a * sec(~e + ~f * ~x) - ~b * tan(~e + ~f * ~x)) ^ -(~m), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && ILtQ(~m, 0))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (~b * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (~a * ~f * (2 * ~m - 1) * cos(~e + ~f * ~x)) - (1 / ((~a) ^ 2 * (2 * ~m - 1))) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) * (~a * ~m - ~b * (2 * ~m - 1) * sin(~e + ~f * ~x))) / cos(~e + ~f * ~x) ^ 2, ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(IntegerQ(~m)) && LtQ(~m, 0)))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ 2 * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => -((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * ~m * cos(~e + ~f * ~x)) + (1 / (~b * ~m)) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (~b * (~m + 1) + ~a * sin(~e + ~f * ~x))) / cos(~e + ~f * ~x) ^ 2, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(IntegerQ(~m)) && Not(LtQ(~m, 0))))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ 4 * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => Antiderivative((~a + ~b * sin(~e + ~f * ~x)) ^ ~m, ~x) - Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (1 - 2 * sin(~e + ~f * ~x) ^ 2)) / cos(~e + ~f * ~x) ^ 4, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegerQ(~m - 1 / 2))
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 2, ~x) => -((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~a * ~f * tan(~e + ~f * ~x)) + (1 / (~b) ^ 2) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) * (~b * ~m - ~a * (~m + 1) * sin(~e + ~f * ~x))) / sin(~e + ~f * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~m - 1 / 2) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m') / tan(~(e') + ~(f') * ~x) ^ 2, ~x) => -((~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (~f * tan(~e + ~f * ~x)) + (1 / ~a) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (~b * ~m - ~a * (~m + 1) * sin(~e + ~f * ~x))) / sin(~e + ~f * ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~m - 1 / 2) && Not(LtQ(~m, -1))))
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 4, ~x) => (-2 / (~a * ~b)) * Antiderivative((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 2) / sin(~e + ~f * ~x) ^ 3, ~x) + (1 / (~a) ^ 2) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 2) * (1 + sin(~e + ~f * ~x) ^ 2)) / sin(~e + ~f * ~x) ^ 4, ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~m - 1 / 2) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 4, ~x) => Antiderivative((~a + ~b * sin(~e + ~f * ~x)) ^ ~m, ~x) + Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (1 - 2 * sin(~e + ~f * ~x) ^ 2)) / sin(~e + ~f * ~x) ^ 4, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegerQ(~m - 1 / 2) && Not(LtQ(~m, -1))))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => ((sqrt(~a + ~b * sin(~e + ~f * ~x)) * sqrt(~a - ~b * sin(~e + ~f * ~x))) / (~b * ~f * cos(~e + ~f * ~x))) * Subst(Antiderivative(((~x) ^ ~p * (~a + ~x) ^ (~m - (~p + 1) / 2)) / (~a - ~x) ^ ((~p + 1) / 2), ~x), ~x, ~b * sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(IntegerQ(~m)) && IntegerQ(~p / 2)))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => (((~g * tan(~e + ~f * ~x)) ^ (~p + 1) * (~a - ~b * sin(~e + ~f * ~x)) ^ ((~p + 1) / 2) * (~a + ~b * sin(~e + ~f * ~x)) ^ ((~p + 1) / 2)) / (~f * ~g * (~b * sin(~e + ~f * ~x)) ^ (~p + 1))) * Subst(Antiderivative(((~x) ^ ~p * (~a + ~x) ^ (~m - (~p + 1) / 2)) / (~a - ~x) ^ ((~p + 1) / 2), ~x), ~x, ~b * sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && (EqQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(IntegerQ(~m)) && Not(IntegerQ(~p))))
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (1 / ~f) * Subst(Antiderivative(((~x) ^ ~p * (~a + ~x) ^ ~m) / ((~b) ^ 2 - (~x) ^ 2) ^ ((~p + 1) / 2), ~x), ~x, ~b * sin(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegerQ((~p + 1) / 2))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => Antiderivative(ExpandIntegrand((~g * tan(~e + ~f * ~x)) ^ ~p, (~a + ~b * sin(~e + ~f * ~x)) ^ ~m, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~p], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && IGtQ(~m, 0))
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 2, ~x) => Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m * (1 - sin(~e + ~f * ~x) ^ 2)) / sin(~e + ~f * ~x) ^ 2, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 4, ~x) => ((-(cos(~e + ~f * ~x)) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (3 * ~a * ~f * sin(~e + ~f * ~x) ^ 3) - ((3 * (~a) ^ 2 + (~b) ^ 2 * (~m - 2)) * cos(~e + ~f * ~x) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (3 * (~a) ^ 2 * ~b * ~f * (~m + 1) * sin(~e + ~f * ~x) ^ 2)) - (1 / (3 * (~a) ^ 2 * ~b * (~m + 1))) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1) / sin(~e + ~f * ~x) ^ 3) * Simp(((6 * (~a) ^ 2 - (~b) ^ 2 * (~m - 1) * (~m - 2)) + ~a * ~b * (~m + 1) * sin(~e + ~f * ~x)) - (3 * (~a) ^ 2 - (~b) ^ 2 * ~m * (~m - 2)) * sin(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (LtQ(~m, -1) && IntegerQ(2 * ~m)))
    #= Antiderivative(((~a)+(~b')*sin((~e')+(~f')*(~x)))^(~m)/tan((~e')+(~f')*(~x))^4,~x) :=  -cos(e+f*x)*(a+b*sin(e+f*x))^(m+1)/(3*a*f*sin(e+f*x)^3) - cos(e+f*x)*(a+b*sin(e+f*x))^(m+1)/(b*f*m*sin(e+f*x)^2) - 1/(3*a*b*m)*Antiderivative((a+b*sin(e+f*x))^m/sin(e+f*x)^3* Simp(6*a^2-b^2*m*(m-2)+a*b*(m+3)*sin(e+f*x)-(3*a^2-b^2*m*(m-1))* sin(e+f*x)^2,x),x) <-- FreeQ([a,b,e,f,m],x) && NeQ(a^2-b^2,0) &&  Not(LtQ(m,-1)) && IntegerQ(2*m) =#
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 4, ~x) => ((-(cos(~e + ~f * ~x)) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (3 * ~a * ~f * sin(~e + ~f * ~x) ^ 3) - (~b * (~m - 2) * cos(~e + ~f * ~x) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (6 * (~a) ^ 2 * ~f * sin(~e + ~f * ~x) ^ 2)) - (1 / (6 * (~a) ^ 2)) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m / sin(~e + ~f * ~x) ^ 2) * Simp(((8 * (~a) ^ 2 - (~b) ^ 2 * (~m - 1) * (~m - 2)) + ~a * ~b * ~m * sin(~e + ~f * ~x)) - (6 * (~a) ^ 2 - (~b) ^ 2 * ~m * (~m - 2)) * sin(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (Not(LtQ(~m, -1)) && IntegerQ(2 * ~m)))
    @apply_utils Antiderivative((~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m / tan(~(e') + ~(f') * ~x) ^ 6, ~x) => ((-(cos(~e + ~f * ~x)) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (5 * ~a * ~f * sin(~e + ~f * ~x) ^ 5) - (~b * (~m - 4) * cos(~e + ~f * ~x) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (20 * (~a) ^ 2 * ~f * sin(~e + ~f * ~x) ^ 4)) + (~a * cos(~e + ~f * ~x) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / ((~b) ^ 2 * ~f * ~m * (~m - 1) * sin(~e + ~f * ~x) ^ 3) + (cos(~e + ~f * ~x) * (~a + ~b * sin(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * ~m * sin(~e + ~f * ~x) ^ 2) + (1 / (20 * (~a) ^ 2 * (~b) ^ 2 * ~m * (~m - 1))) * Antiderivative(((~a + ~b * sin(~e + ~f * ~x)) ^ ~m / sin(~e + ~f * ~x) ^ 4) * Simp(((60 * (~a) ^ 4 - 44 * (~a) ^ 2 * (~b) ^ 2 * (~m - 1) * ~m) + (~b) ^ 4 * ~m * (~m - 1) * (~m - 3) * (~m - 4) + ~a * ~b * ~m * (20 * (~a) ^ 2 - (~b) ^ 2 * ~m * (~m - 1)) * sin(~e + ~f * ~x)) - ((40 * (~a) ^ 4 + (~b) ^ 4 * ~m * (~m - 1) * (~m - 2) * (~m - 4)) - 20 * (~a) ^ 2 * (~b) ^ 2 * (~m - 1) * (2 * ~m + 1)) * sin(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~m], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (NeQ(~m, 1) && IntegerQ(2 * ~m)))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~p / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => ((~a / ((~a) ^ 2 - (~b) ^ 2)) * Antiderivative((~g * tan(~e + ~f * ~x)) ^ ~p / sin(~e + ~f * ~x) ^ 2, ~x) - ((~b * ~g) / ((~a) ^ 2 - (~b) ^ 2)) * Antiderivative((~g * tan(~e + ~f * ~x)) ^ (~p - 1) / cos(~e + ~f * ~x), ~x)) - (((~a) ^ 2 * (~g) ^ 2) / ((~a) ^ 2 - (~b) ^ 2)) * Antiderivative((~g * tan(~e + ~f * ~x)) ^ (~p - 2) / (~a + ~b * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegersQ(2 * ~p) && GtQ(~p, 1)))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~p / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => ((1 / ~a) * Antiderivative((~g * tan(~e + ~f * ~x)) ^ ~p / cos(~e + ~f * ~x) ^ 2, ~x) - (~b / ((~a) ^ 2 * ~g)) * Antiderivative((~g * tan(~e + ~f * ~x)) ^ (~p + 1) / cos(~e + ~f * ~x), ~x)) - (((~a) ^ 2 - (~b) ^ 2) / ((~a) ^ 2 * (~g) ^ 2)) * Antiderivative((~g * tan(~e + ~f * ~x)) ^ (~p + 2) / (~a + ~b * sin(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && (IntegersQ(2 * ~p) && LtQ(~p, -1)))
    @apply_utils Antiderivative(sqrt(~(g') * tan(~(e') + ~(f') * ~x)) / (~a + ~(b') * sin(~(e') + ~(f') * ~x)), ~x) => ((sqrt(cos(~e + ~f * ~x)) * sqrt(~g * tan(~e + ~f * ~x))) / sqrt(sin(~e + ~f * ~x))) * Antiderivative(sqrt(sin(~e + ~f * ~x)) / (sqrt(cos(~e + ~f * ~x)) * (~a + ~b * sin(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative(1 / (sqrt(~g * tan(~(e') + ~(f') * ~x)) * (~a + ~(b') * sin(~(e') + ~(f') * ~x))), ~x) => (sqrt(sin(~e + ~f * ~x)) / (sqrt(cos(~e + ~f * ~x)) * sqrt(~g * tan(~e + ~f * ~x)))) * Antiderivative(sqrt(cos(~e + ~f * ~x)) / (sqrt(sin(~e + ~f * ~x)) * (~a + ~b * sin(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g], ~x) && NeQ((~a) ^ 2 - (~b) ^ 2, 0)
    @apply_utils Antiderivative(tan(~(e') + ~(f') * ~x) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~m, ~x) => Antiderivative(ExpandIntegrand((sin(~e + ~f * ~x) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m) / (1 - sin(~e + ~f * ~x) ^ 2) ^ (~p / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && (NeQ((~a) ^ 2 - (~b) ^ 2, 0) && IntegersQ(~m, ~p / 2))
    @apply_utils Antiderivative((~(g') * tan(~(e') + ~(f') * ~x)) ^ ~(p') * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => Unintegrable((~g * tan(~e + ~f * ~x)) ^ ~p * (~a + ~b * sin(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x)
    @apply_utils Antiderivative((~(g') * cot(~(e') + ~(f') * ~x)) ^ ~p * (~a + ~(b') * sin(~(e') + ~(f') * ~x)) ^ ~(m'), ~x) => (~g) ^ (2 * IntPart(~p)) * (~g * cot(~e + ~f * ~x)) ^ FracPart(~p) * (~g * tan(~e + ~f * ~x)) ^ FracPart(~p) * Antiderivative((~a + ~b * sin(~e + ~f * ~x)) ^ ~m / (~g * tan(~e + ~f * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~g, ~m, ~p], ~x) && Not(IntegerQ(~p))
end
