int_rules_4_1_12 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.1.12*(e*x)^m*(a+b*sin(c+d*x^n))^p =#
    @apply_utils Antiderivative(sin(~(d') * (~(e') + ~(f') * ~x) ^ 2), ~x) => (sqrt(pi / 2) / (~f * Rt(~d, 2))) * FresnelS(sqrt(2 / pi) * Rt(~d, 2) * (~e + ~f * ~x)) <-- FreeQ([~d, ~e, ~f], ~x)
    @apply_utils Antiderivative(cos(~(d') * (~(e') + ~(f') * ~x) ^ 2), ~x) => (sqrt(pi / 2) / (~f * Rt(~d, 2))) * FresnelC(sqrt(2 / pi) * Rt(~d, 2) * (~e + ~f * ~x)) <-- FreeQ([~d, ~e, ~f], ~x)
    @apply_utils Antiderivative(sin(~c + ~(d') * (~(e') + ~(f') * ~x) ^ 2), ~x) => sin(~c) * Antiderivative(cos(~d * (~e + ~f * ~x) ^ 2), ~x) + cos(~c) * Antiderivative(sin(~d * (~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~c, ~d, ~e, ~f], ~x)
    @apply_utils Antiderivative(cos(~c + ~(d') * (~(e') + ~(f') * ~x) ^ 2), ~x) => cos(~c) * Antiderivative(cos(~d * (~e + ~f * ~x) ^ 2), ~x) - sin(~c) * Antiderivative(sin(~d * (~e + ~f * ~x) ^ 2), ~x) <-- FreeQ([~c, ~d, ~e, ~f], ~x)
    @apply_utils Antiderivative(sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n), ~x) => (im / 2) * Antiderivative(ℯ ^ (-(~c) * im - ~d * im * (~e + ~f * ~x) ^ ~n), ~x) - (im / 2) * Antiderivative(ℯ ^ (~c * im + ~d * im * (~e + ~f * ~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~f], ~x) && IGtQ(~n, 2)
    @apply_utils Antiderivative(cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n), ~x) => (1 / 2) * Antiderivative(ℯ ^ (-(~c) * im - ~d * im * (~e + ~f * ~x) ^ ~n), ~x) + (1 / 2) * Antiderivative(ℯ ^ (~c * im + ~d * im * (~e + ~f * ~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~f], ~x) && IGtQ(~n, 2)
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~a + ~b * sin(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 1) && IGtQ(~n, 1))
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~a + ~b * cos(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 1) && IGtQ(~n, 1))
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (-1 / ~f) * Subst(Antiderivative((~a + ~b * sin(~c + ~d * (~x) ^ -(~n))) ^ ~p / (~x) ^ 2, ~x), ~x, 1 / (~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && EqQ(~n, -2)))
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (-1 / ~f) * Subst(Antiderivative((~a + ~b * cos(~c + ~d * (~x) ^ -(~n))) ^ ~p / (~x) ^ 2, ~x), ~x, 1 / (~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && EqQ(~n, -2)))
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (1 / (~n * ~f)) * Subst(Antiderivative((~x) ^ (1 / ~n - 1) * (~a + ~b * sin(~c + ~d * ~x)) ^ ~p, ~x), ~x, (~e + ~f * ~x) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && IntegerQ(1 / ~n))
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (1 / (~n * ~f)) * Subst(Antiderivative((~x) ^ (1 / ~n - 1) * (~a + ~b * cos(~c + ~d * ~x)) ^ ~p, ~x), ~x, (~e + ~f * ~x) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && IntegerQ(1 / ~n))
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => Module([k = Denominator(~n)], (k / ~f) * Subst(Antiderivative((~x) ^ (k - 1) * (~a + ~b * sin(~c + ~d * (~x) ^ (k * ~n))) ^ ~p, ~x), ~x, (~e + ~f * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && FractionQ(~n))
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => Module([k = Denominator(~n)], (k / ~f) * Subst(Antiderivative((~x) ^ (k - 1) * (~a + ~b * cos(~c + ~d * (~x) ^ (k * ~n))) ^ ~p, ~x), ~x, (~e + ~f * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && FractionQ(~n))
    @apply_utils Antiderivative(sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n), ~x) => (im / 2) * Antiderivative(ℯ ^ (-(~c) * im - ~d * im * (~e + ~f * ~x) ^ ~n), ~x) - (im / 2) * Antiderivative(ℯ ^ (~c * im + ~d * im * (~e + ~f * ~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~f, ~n], ~x)
    @apply_utils Antiderivative(cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n), ~x) => (1 / 2) * Antiderivative(ℯ ^ (-(~c) * im - ~d * im * (~e + ~f * ~x) ^ ~n), ~x) + (1 / 2) * Antiderivative(ℯ ^ (~c * im + ~d * im * (~e + ~f * ~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~f, ~n], ~x)
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~a + ~b * sin(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && IGtQ(~p, 1)
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~a + ~b * cos(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && IGtQ(~p, 1)
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~p, ~x) => Unintegrable((~a + ~b * sin(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~p, ~x) => Unintegrable((~a + ~b * cos(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~(c') + ~(d') * (~u) ^ ~n)) ^ ~(p'), ~x) => Antiderivative((~a + ~b * sin(~c + ~d * ExpandToSum(~u, ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n, ~p], ~x) && (LinearQ(~u, ~x) && Not(LinearMatchQ(~u, ~x)))
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~(c') + ~(d') * (~u) ^ ~n)) ^ ~(p'), ~x) => Antiderivative((~a + ~b * cos(~c + ~d * ExpandToSum(~u, ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n, ~p], ~x) && (LinearQ(~u, ~x) && Not(LinearMatchQ(~u, ~x)))
    @apply_utils Antiderivative((~(a') + ~(b') * sin(~u)) ^ ~(p'), ~x) => Antiderivative((~a + ~b * sin(ExpandToSum(~u, ~x))) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~p], ~x) && (BinomialQ(~u, ~x) && Not(BinomialMatchQ(~u, ~x)))
    @apply_utils Antiderivative((~(a') + ~(b') * cos(~u)) ^ ~(p'), ~x) => Antiderivative((~a + ~b * cos(ExpandToSum(~u, ~x))) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~p], ~x) && (BinomialQ(~u, ~x) && Not(BinomialMatchQ(~u, ~x)))
    @apply_utils Antiderivative(sin(~(d') * (~x) ^ ~n) / ~x, ~x) => SinIntegral(~d * (~x) ^ ~n) / ~n <-- FreeQ([~d, ~n], ~x)
    @apply_utils Antiderivative(cos(~(d') * (~x) ^ ~n) / ~x, ~x) => CosIntegral(~d * (~x) ^ ~n) / ~n <-- FreeQ([~d, ~n], ~x)
    @apply_utils Antiderivative(sin(~c + ~(d') * (~x) ^ ~n) / ~x, ~x) => sin(~c) * Antiderivative(cos(~d * (~x) ^ ~n) / ~x, ~x) + cos(~c) * Antiderivative(sin(~d * (~x) ^ ~n) / ~x, ~x) <-- FreeQ([~c, ~d, ~n], ~x)
    @apply_utils Antiderivative(cos(~c + ~(d') * (~x) ^ ~n) / ~x, ~x) => cos(~c) * Antiderivative(cos(~d * (~x) ^ ~n) / ~x, ~x) - sin(~c) * Antiderivative(sin(~d * (~x) ^ ~n) / ~x, ~x) <-- FreeQ([~c, ~d, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (1 / ~n) * Subst(Antiderivative((~x) ^ (Simplify((~m + 1) / ~n) - 1) * (~a + ~b * sin(~c + ~d * ~x)) ^ ~p, ~x), ~x, (~x) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n, ~p], ~x) && (IntegerQ(Simplify((~m + 1) / ~n)) && (EqQ(~p, 1) || (EqQ(~m, ~n - 1) || IntegerQ(~p) && GtQ(Simplify((~m + 1) / ~n), 0))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (1 / ~n) * Subst(Antiderivative((~x) ^ (Simplify((~m + 1) / ~n) - 1) * (~a + ~b * cos(~c + ~d * ~x)) ^ ~p, ~x), ~x, (~x) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n, ~p], ~x) && (IntegerQ(Simplify((~m + 1) / ~n)) && (EqQ(~p, 1) || (EqQ(~m, ~n - 1) || IntegerQ(~p) && GtQ(Simplify((~m + 1) / ~n), 0))))
    @apply_utils Antiderivative((~e * ~x) ^ ~m * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (((~e) ^ IntPart(~m) * (~e * ~x) ^ FracPart(~m)) / (~x) ^ FracPart(~m)) * Antiderivative((~x) ^ ~m * (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x) && IntegerQ(Simplify((~m + 1) / ~n))
    @apply_utils Antiderivative((~e * ~x) ^ ~m * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (((~e) ^ IntPart(~m) * (~e * ~x) ^ FracPart(~m)) / (~x) ^ FracPart(~m)) * Antiderivative((~x) ^ ~m * (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x) && IntegerQ(Simplify((~m + 1) / ~n))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n), ~x) => (2 / ~n) * Subst(Antiderivative(sin(~a + ~b * (~x) ^ 2), ~x), ~x, (~x) ^ (~n / 2)) <-- FreeQ([~a, ~b, ~m, ~n], ~x) && EqQ(~m, ~n / 2 - 1)
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n), ~x) => (2 / ~n) * Subst(Antiderivative(cos(~a + ~b * (~x) ^ 2), ~x), ~x, (~x) ^ (~n / 2)) <-- FreeQ([~a, ~b, ~m, ~n], ~x) && EqQ(~m, ~n / 2 - 1)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * sin(~(c') + ~(d') * (~x) ^ ~n), ~x) => (-((~e) ^ (~n - 1)) * (~e * ~x) ^ ((~m - ~n) + 1) * cos(~c + ~d * (~x) ^ ~n)) / (~d * ~n) + (((~e) ^ ~n * ((~m - ~n) + 1)) / (~d * ~n)) * Antiderivative((~e * ~x) ^ (~m - ~n) * cos(~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e], ~x) && (IGtQ(~n, 0) && LtQ(~n, ~m + 1))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * cos(~(c') + ~(d') * (~x) ^ ~n), ~x) => ((~e) ^ (~n - 1) * (~e * ~x) ^ ((~m - ~n) + 1) * sin(~c + ~d * (~x) ^ ~n)) / (~d * ~n) - (((~e) ^ ~n * ((~m - ~n) + 1)) / (~d * ~n)) * Antiderivative((~e * ~x) ^ (~m - ~n) * sin(~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e], ~x) && (IGtQ(~n, 0) && LtQ(~n, ~m + 1))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * sin(~(c') + ~(d') * (~x) ^ ~n), ~x) => ((~e * ~x) ^ (~m + 1) * sin(~c + ~d * (~x) ^ ~n)) / (~e * (~m + 1)) - ((~d * ~n) / ((~e) ^ ~n * (~m + 1))) * Antiderivative((~e * ~x) ^ (~m + ~n) * cos(~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e], ~x) && (IGtQ(~n, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * cos(~(c') + ~(d') * (~x) ^ ~n), ~x) => ((~e * ~x) ^ (~m + 1) * cos(~c + ~d * (~x) ^ ~n)) / (~e * (~m + 1)) + ((~d * ~n) / ((~e) ^ ~n * (~m + 1))) * Antiderivative((~e * ~x) ^ (~m + ~n) * sin(~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e], ~x) && (IGtQ(~n, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * sin(~(c') + ~(d') * (~x) ^ ~n), ~x) => (im / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (-(~c) * im - ~d * im * (~x) ^ ~n), ~x) - (im / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (~c * im + ~d * im * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * cos(~(c') + ~(d') * (~x) ^ ~n), ~x) => (1 / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (-(~c) * im - ~d * im * (~x) ^ ~n), ~x) + (1 / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (~c * im + ~d * im * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + (~(b') * (~x) ^ ~n) / 2) ^ 2, ~x) => (1 / 2) * Antiderivative((~x) ^ ~m, ~x) - (1 / 2) * Antiderivative((~x) ^ ~m * cos(2 * ~a + ~b * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b, ~m, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + (~(b') * (~x) ^ ~n) / 2) ^ 2, ~x) => (1 / 2) * Antiderivative((~x) ^ ~m, ~x) + (1 / 2) * Antiderivative((~x) ^ ~m * cos(2 * ~a + ~b * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b, ~m, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((~x) ^ (~m + 1) * sin(~a + ~b * (~x) ^ ~n) ^ ~p) / (~m + 1) - ((~b * ~n * ~p) / (~m + 1)) * Antiderivative(sin(~a + ~b * (~x) ^ ~n) ^ (~p - 1) * cos(~a + ~b * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b], ~x) && (IGtQ(~p, 1) && (EqQ(~m + ~n, 0) && (NeQ(~n, 1) && IntegerQ(~n))))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((~x) ^ (~m + 1) * cos(~a + ~b * (~x) ^ ~n) ^ ~p) / (~m + 1) + ((~b * ~n * ~p) / (~m + 1)) * Antiderivative(cos(~a + ~b * (~x) ^ ~n) ^ (~p - 1) * sin(~a + ~b * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b], ~x) && (IGtQ(~p, 1) && (EqQ(~m + ~n, 0) && (NeQ(~n, 1) && IntegerQ(~n))))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((~n * sin(~a + ~b * (~x) ^ ~n) ^ ~p) / ((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2) - ((~x) ^ ~n * cos(~a + ~b * (~x) ^ ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p - 1)) / (~b * ~n * ~p)) + ((~p - 1) / ~p) * Antiderivative((~x) ^ ~m * sin(~a + ~b * (~x) ^ ~n) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~m, ~n], ~x) && (EqQ((~m - 2 * ~n) + 1, 0) && GtQ(~p, 1))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => (~n * cos(~a + ~b * (~x) ^ ~n) ^ ~p) / ((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2) + ((~x) ^ ~n * sin(~a + ~b * (~x) ^ ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p - 1)) / (~b * ~n * ~p) + ((~p - 1) / ~p) * Antiderivative((~x) ^ ~m * cos(~a + ~b * (~x) ^ ~n) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~m, ~n], ~x) && (EqQ((~m - 2 * ~n) + 1, 0) && GtQ(~p, 1))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => (((((~m - ~n) + 1) * (~x) ^ ((~m - 2 * ~n) + 1) * sin(~a + ~b * (~x) ^ ~n) ^ ~p) / ((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2) - ((~x) ^ ((~m - ~n) + 1) * cos(~a + ~b * (~x) ^ ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p - 1)) / (~b * ~n * ~p)) + ((~p - 1) / ~p) * Antiderivative((~x) ^ ~m * sin(~a + ~b * (~x) ^ ~n) ^ (~p - 2), ~x)) - ((((~m - ~n) + 1) * ((~m - 2 * ~n) + 1)) / ((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2)) * Antiderivative((~x) ^ (~m - 2 * ~n) * sin(~a + ~b * (~x) ^ ~n) ^ ~p, ~x) <-- FreeQ([~a, ~b], ~x) && (GtQ(~p, 1) && (IGtQ(~n, 0) && IGtQ(~m, 2 * ~n - 1)))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((((~m - ~n) + 1) * (~x) ^ ((~m - 2 * ~n) + 1) * cos(~a + ~b * (~x) ^ ~n) ^ ~p) / ((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2) + ((~x) ^ ((~m - ~n) + 1) * sin(~a + ~b * (~x) ^ ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p - 1)) / (~b * ~n * ~p) + ((~p - 1) / ~p) * Antiderivative((~x) ^ ~m * cos(~a + ~b * (~x) ^ ~n) ^ (~p - 2), ~x)) - ((((~m - ~n) + 1) * ((~m - 2 * ~n) + 1)) / ((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2)) * Antiderivative((~x) ^ (~m - 2 * ~n) * cos(~a + ~b * (~x) ^ ~n) ^ ~p, ~x) <-- FreeQ([~a, ~b], ~x) && (GtQ(~p, 1) && (IGtQ(~n, 0) && IGtQ(~m, 2 * ~n - 1)))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((((~x) ^ (~m + 1) * sin(~a + ~b * (~x) ^ ~n) ^ ~p) / (~m + 1) - (~b * ~n * ~p * (~x) ^ (~m + ~n + 1) * cos(~a + ~b * (~x) ^ ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p - 1)) / ((~m + 1) * (~m + ~n + 1))) - (((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2) / ((~m + 1) * (~m + ~n + 1))) * Antiderivative((~x) ^ (~m + 2 * ~n) * sin(~a + ~b * (~x) ^ ~n) ^ ~p, ~x)) + (((~b) ^ 2 * (~n) ^ 2 * ~p * (~p - 1)) / ((~m + 1) * (~m + ~n + 1))) * Antiderivative((~x) ^ (~m + 2 * ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b], ~x) && (GtQ(~p, 1) && (IGtQ(~n, 0) && (ILtQ(~m, -2 * ~n + 1) && NeQ(~m + ~n + 1, 0))))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((((~x) ^ (~m + 1) * cos(~a + ~b * (~x) ^ ~n) ^ ~p) / (~m + 1) + (~b * ~n * ~p * (~x) ^ (~m + ~n + 1) * sin(~a + ~b * (~x) ^ ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p - 1)) / ((~m + 1) * (~m + ~n + 1))) - (((~b) ^ 2 * (~n) ^ 2 * (~p) ^ 2) / ((~m + 1) * (~m + ~n + 1))) * Antiderivative((~x) ^ (~m + 2 * ~n) * cos(~a + ~b * (~x) ^ ~n) ^ ~p, ~x)) + (((~b) ^ 2 * (~n) ^ 2 * ~p * (~p - 1)) / ((~m + 1) * (~m + ~n + 1))) * Antiderivative((~x) ^ (~m + 2 * ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b], ~x) && (GtQ(~p, 1) && (IGtQ(~n, 0) && (ILtQ(~m, -2 * ~n + 1) && NeQ(~m + ~n + 1, 0))))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => With([k = Denominator(~m)], (k / ~e) * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~a + ~b * sin(~c + (~d * (~x) ^ (k * ~n)) / (~e) ^ ~n)) ^ ~p, ~x), ~x, (~e * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~p) && (IGtQ(~n, 0) && FractionQ(~m)))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => With([k = Denominator(~m)], (k / ~e) * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~a + ~b * cos(~c + (~d * (~x) ^ (k * ~n)) / (~e) ^ ~n)) ^ ~p, ~x), ~x, (~e * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~p) && (IGtQ(~n, 0) && FractionQ(~m)))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~e * ~x) ^ ~m, (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IGtQ(~p, 1) && IGtQ(~n, 0))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~e * ~x) ^ ~m, (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IGtQ(~p, 1) && IGtQ(~n, 0))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => (((~x) ^ ~n * cos(~a + ~b * (~x) ^ ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) - (~n * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 2)) / ((~b) ^ 2 * (~n) ^ 2 * (~p + 1) * (~p + 2))) + ((~p + 2) / (~p + 1)) * Antiderivative((~x) ^ ~m * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 2), ~x) <-- FreeQ([~a, ~b, ~m, ~n], ~x) && (EqQ((~m - 2 * ~n) + 1, 0) && (LtQ(~p, -1) && NeQ(~p, -2)))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((-((~x) ^ ~n) * sin(~a + ~b * (~x) ^ ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) - (~n * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 2)) / ((~b) ^ 2 * (~n) ^ 2 * (~p + 1) * (~p + 2))) + ((~p + 2) / (~p + 1)) * Antiderivative((~x) ^ ~m * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 2), ~x) <-- FreeQ([~a, ~b, ~m, ~n], ~x) && (EqQ((~m - 2 * ~n) + 1, 0) && (LtQ(~p, -1) && NeQ(~p, -2)))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => (((~x) ^ ((~m - ~n) + 1) * cos(~a + ~b * (~x) ^ ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) - (((~m - ~n) + 1) * (~x) ^ ((~m - 2 * ~n) + 1) * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 2)) / ((~b) ^ 2 * (~n) ^ 2 * (~p + 1) * (~p + 2))) + ((~p + 2) / (~p + 1)) * Antiderivative((~x) ^ ~m * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 2), ~x) + ((((~m - ~n) + 1) * ((~m - 2 * ~n) + 1)) / ((~b) ^ 2 * (~n) ^ 2 * (~p + 1) * (~p + 2))) * Antiderivative((~x) ^ (~m - 2 * ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 2), ~x) <-- FreeQ([~a, ~b], ~x) && (LtQ(~p, -1) && (NeQ(~p, -2) && (IGtQ(~n, 0) && IGtQ(~m, 2 * ~n - 1))))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~n) ^ ~p, ~x) => ((-((~x) ^ ((~m - ~n) + 1)) * sin(~a + ~b * (~x) ^ ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) - (((~m - ~n) + 1) * (~x) ^ ((~m - 2 * ~n) + 1) * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 2)) / ((~b) ^ 2 * (~n) ^ 2 * (~p + 1) * (~p + 2))) + ((~p + 2) / (~p + 1)) * Antiderivative((~x) ^ ~m * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 2), ~x) + ((((~m - ~n) + 1) * ((~m - 2 * ~n) + 1)) / ((~b) ^ 2 * (~n) ^ 2 * (~p + 1) * (~p + 2))) * Antiderivative((~x) ^ (~m - 2 * ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 2), ~x) <-- FreeQ([~a, ~b], ~x) && (LtQ(~p, -1) && (NeQ(~p, -2) && (IGtQ(~n, 0) && IGtQ(~m, 2 * ~n - 1))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => -(Subst(Antiderivative((~a + ~b * sin(~c + ~d * (~x) ^ -(~n))) ^ ~p / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x)) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && (IntegerQ(~m) && EqQ(~n, -2))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => -(Subst(Antiderivative((~a + ~b * cos(~c + ~d * (~x) ^ -(~n))) ^ ~p / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x)) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && (IntegerQ(~m) && EqQ(~n, -2))))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => With([k = Denominator(~m)], (-k / ~e) * Subst(Antiderivative((~a + ~b * sin(~c + ~d / ((~e) ^ ~n * (~x) ^ (k * ~n)))) ^ ~p / (~x) ^ (k * (~m + 1) + 1), ~x), ~x, 1 / (~e * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && FractionQ(~m)))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => With([k = Denominator(~m)], (-k / ~e) * Subst(Antiderivative((~a + ~b * cos(~c + ~d / ((~e) ^ ~n * (~x) ^ (k * ~n)))) ^ ~p / (~x) ^ (k * (~m + 1) + 1), ~x), ~x, 1 / (~e * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && FractionQ(~m)))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => -((~e * ~x) ^ ~m) * ((~x) ^ -1) ^ ~m * Subst(Antiderivative((~a + ~b * sin(~c + ~d * (~x) ^ -(~n))) ^ ~p / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && Not(RationalQ(~m))))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => -((~e * ~x) ^ ~m) * ((~x) ^ -1) ^ ~m * Subst(Antiderivative((~a + ~b * cos(~c + ~d * (~x) ^ -(~n))) ^ ~p / (~x) ^ (~m + 2), ~x), ~x, 1 / ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IGtQ(~p, 0) && (ILtQ(~n, 0) && Not(RationalQ(~m))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => Module([k = Denominator(~n)], k * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~a + ~b * sin(~c + ~d * (~x) ^ (k * ~n))) ^ ~p, ~x), ~x, (~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (IntegerQ(~p) && FractionQ(~n))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => Module([k = Denominator(~n)], k * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~a + ~b * cos(~c + ~d * (~x) ^ (k * ~n))) ^ ~p, ~x), ~x, (~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (IntegerQ(~p) && FractionQ(~n))
    @apply_utils Antiderivative((~e * ~x) ^ ~m * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (((~e) ^ IntPart(~m) * (~e * ~x) ^ FracPart(~m)) / (~x) ^ FracPart(~m)) * Antiderivative((~x) ^ ~m * (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IntegerQ(~p) && FractionQ(~n))
    @apply_utils Antiderivative((~e * ~x) ^ ~m * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (((~e) ^ IntPart(~m) * (~e * ~x) ^ FracPart(~m)) / (~x) ^ FracPart(~m)) * Antiderivative((~x) ^ ~m * (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IntegerQ(~p) && FractionQ(~n))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (1 / (~m + 1)) * Subst(Antiderivative((~a + ~b * sin(~c + ~d * (~x) ^ Simplify(~n / (~m + 1)))) ^ ~p, ~x), ~x, (~x) ^ (~m + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x) && (IntegerQ(~p) && (NeQ(~m, -1) && (IGtQ(Simplify(~n / (~m + 1)), 0) && Not(IntegerQ(~n)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (1 / (~m + 1)) * Subst(Antiderivative((~a + ~b * cos(~c + ~d * (~x) ^ Simplify(~n / (~m + 1)))) ^ ~p, ~x), ~x, (~x) ^ (~m + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x) && (IntegerQ(~p) && (NeQ(~m, -1) && (IGtQ(Simplify(~n / (~m + 1)), 0) && Not(IntegerQ(~n)))))
    @apply_utils Antiderivative((~e * ~x) ^ ~m * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (((~e) ^ IntPart(~m) * (~e * ~x) ^ FracPart(~m)) / (~x) ^ FracPart(~m)) * Antiderivative((~x) ^ ~m * (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && (IntegerQ(~p) && (NeQ(~m, -1) && (IGtQ(Simplify(~n / (~m + 1)), 0) && Not(IntegerQ(~n)))))
    @apply_utils Antiderivative((~e * ~x) ^ ~m * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => (((~e) ^ IntPart(~m) * (~e * ~x) ^ FracPart(~m)) / (~x) ^ FracPart(~m)) * Antiderivative((~x) ^ ~m * (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && (IntegerQ(~p) && (NeQ(~m, -1) && (IGtQ(Simplify(~n / (~m + 1)), 0) && Not(IntegerQ(~n)))))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * sin(~(c') + ~(d') * (~x) ^ ~n), ~x) => (im / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (-(~c) * im - ~d * im * (~x) ^ ~n), ~x) - (im / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (~c * im + ~d * im * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~m, ~n], ~x)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * cos(~(c') + ~(d') * (~x) ^ ~n), ~x) => (1 / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (-(~c) * im - ~d * im * (~x) ^ ~n), ~x) + (1 / 2) * Antiderivative((~e * ~x) ^ ~m * ℯ ^ (~c * im + ~d * im * (~x) ^ ~n), ~x) <-- FreeQ([~c, ~d, ~e, ~m, ~n], ~x)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~e * ~x) ^ ~m, (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~p, ~x) => Antiderivative(ExpandTrigReduce((~e * ~x) ^ ~m, (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => Unintegrable((~e * ~x) ^ ~m * (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~x) ^ ~n)) ^ ~(p'), ~x) => Unintegrable((~e * ~x) ^ ~m * (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~e * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~u)) ^ ~(p'), ~x) => Antiderivative((~e * ~x) ^ ~m * (~a + ~b * sin(ExpandToSum(~u, ~x))) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~e, ~m, ~p], ~x) && (BinomialQ(~u, ~x) && Not(BinomialMatchQ(~u, ~x)))
    @apply_utils Antiderivative((~e * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~u)) ^ ~(p'), ~x) => Antiderivative((~e * ~x) ^ ~m * (~a + ~b * cos(ExpandToSum(~u, ~x))) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~e, ~m, ~p], ~x) && (BinomialQ(~u, ~x) && Not(BinomialMatchQ(~u, ~x)))
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (1 / (~n * ~f)) * Subst(Antiderivative(ExpandIntegrand((~a + ~b * sin(~c + ~d * ~x)) ^ ~p, (~x) ^ (1 / ~n - 1) * ((~g - (~e * ~h) / ~f) + (~h * (~x) ^ (1 / ~n)) / ~f) ^ ~m, ~x), ~x), ~x, (~e + ~f * ~x) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m], ~x) && (IGtQ(~p, 0) && IntegerQ(1 / ~n))
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (1 / (~n * ~f)) * Subst(Antiderivative(ExpandIntegrand((~a + ~b * cos(~c + ~d * ~x)) ^ ~p, (~x) ^ (1 / ~n - 1) * ((~g - (~e * ~h) / ~f) + (~h * (~x) ^ (1 / ~n)) / ~f) ^ ~m, ~x), ~x), ~x, (~e + ~f * ~x) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m], ~x) && (IGtQ(~p, 0) && IntegerQ(1 / ~n))
    #= Antiderivative(((~g')+(~h')*(~x))^(~m')*((~a')+(~b')*sin((~c')+(~d')*((~e')+(~f')*(~x))^(~n)))^(~p'),(~x)*Symbol) :=  1/(n*f^(m+1))*Subst(Antiderivative(ExpandIntegrand((a+b*sin(c+d*x))^p,x^(1/n-1)*( f*g-e*h+h*x^(1/n))^m,x),x),x,(e+f*x)^n) <-- FreeQ([a,b,c,d,e,f,g,h],x)  && IGtQ(p,0) && IntegerQ(m) && IntegerQ(1/n) =#
    #= Antiderivative(((~g')+(~h')*(~x))^(~m')*((~a')+(~b')*cos((~c')+(~d')*((~e')+(~f')*(~x))^(~n)))^(~p'),(~x)*Symbol) :=  1/(n*f^(m+1))*Subst(Antiderivative(ExpandIntegrand((a+b*cos(c+d*x))^p,x^(1/n-1)*( f*g-e*h+h*x^(1/n))^m,x),x),x,(e+f*x)^n) <-- FreeQ([a,b,c,d,e,f,g,h],x)  && IGtQ(p,0) && IntegerQ(m) && IntegerQ(1/n) =#
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => Module([k = If(FractionQ(~n), Denominator(~n), 1)], (k / (~f) ^ (~m + 1)) * Subst(Antiderivative(ExpandIntegrand((~a + ~b * sin(~c + ~d * (~x) ^ (k * ~n))) ^ ~p, (~x) ^ (k - 1) * ((~f * ~g - ~e * ~h) + ~h * (~x) ^ k) ^ ~m, ~x), ~x), ~x, (~e + ~f * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h], ~x) && (IGtQ(~p, 0) && IGtQ(~m, 0))
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => Module([k = If(FractionQ(~n), Denominator(~n), 1)], (k / (~f) ^ (~m + 1)) * Subst(Antiderivative(ExpandIntegrand((~a + ~b * cos(~c + ~d * (~x) ^ (k * ~n))) ^ ~p, (~x) ^ (k - 1) * ((~f * ~g - ~e * ~h) + ~h * (~x) ^ k) ^ ~m, ~x), ~x), ~x, (~e + ~f * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h], ~x) && (IGtQ(~p, 0) && IGtQ(~m, 0))
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (1 / ~f) * Subst(Antiderivative(((~h * ~x) / ~f) ^ ~m * (~a + ~b * sin(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x), ~x, ~e + ~f * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m], ~x) && (IGtQ(~p, 0) && EqQ(~f * ~g - ~e * ~h, 0))
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => (1 / ~f) * Subst(Antiderivative(((~h * ~x) / ~f) ^ ~m * (~a + ~b * cos(~c + ~d * (~x) ^ ~n)) ^ ~p, ~x), ~x, ~e + ~f * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m], ~x) && (IGtQ(~p, 0) && EqQ(~f * ~g - ~e * ~h, 0))
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => Unintegrable((~g + ~h * ~x) ^ ~m * (~a + ~b * sin(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(g') + ~(h') * ~x) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~(e') + ~(f') * ~x) ^ ~n)) ^ ~(p'), ~x) => Unintegrable((~g + ~h * ~x) ^ ~m * (~a + ~b * cos(~c + ~d * (~e + ~f * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~v) ^ ~(m') * (~(a') + ~(b') * sin(~(c') + ~(d') * (~u) ^ ~n)) ^ ~(p'), ~x) => Antiderivative(ExpandToSum(~v, ~x) ^ ~m * (~a + ~b * sin(~c + ~d * ExpandToSum(~u, ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n, ~p], ~x) && (LinearQ(~u, ~x) && (LinearQ(~v, ~x) && Not(LinearMatchQ(~u, ~x) && LinearMatchQ(~v, ~x))))
    @apply_utils Antiderivative((~v) ^ ~(m') * (~(a') + ~(b') * cos(~(c') + ~(d') * (~u) ^ ~n)) ^ ~(p'), ~x) => Antiderivative(ExpandToSum(~v, ~x) ^ ~m * (~a + ~b * cos(~c + ~d * ExpandToSum(~u, ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n, ~p], ~x) && (LinearQ(~u, ~x) && (LinearQ(~v, ~x) && Not(LinearMatchQ(~u, ~x) && LinearMatchQ(~v, ~x))))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~(n')) ^ ~(p') * cos(~(a') + ~(b') * (~x) ^ ~(n')), ~x) => sin(~a + ~b * (~x) ^ ~n) ^ (~p + 1) / (~b * ~n * (~p + 1)) <-- FreeQ([~a, ~b, ~m, ~n, ~p], ~x) && (EqQ(~m, ~n - 1) && NeQ(~p, -1))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~(n')) ^ ~(p') * sin(~(a') + ~(b') * (~x) ^ ~(n')), ~x) => -(cos(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) <-- FreeQ([~a, ~b, ~m, ~n, ~p], ~x) && (EqQ(~m, ~n - 1) && NeQ(~p, -1))
    @apply_utils Antiderivative((~x) ^ ~(m') * sin(~(a') + ~(b') * (~x) ^ ~(n')) ^ ~(p') * cos(~(a') + ~(b') * (~x) ^ ~(n')), ~x) => ((~x) ^ ((~m - ~n) + 1) * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) - (((~m - ~n) + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ (~m - ~n) * sin(~a + ~b * (~x) ^ ~n) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~p], ~x) && (LtQ(0, ~n, ~m + 1) && NeQ(~p, -1))
    @apply_utils Antiderivative((~x) ^ ~(m') * cos(~(a') + ~(b') * (~x) ^ ~(n')) ^ ~(p') * sin(~(a') + ~(b') * (~x) ^ ~(n')), ~x) => (-((~x) ^ ((~m - ~n) + 1)) * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~b * ~n * (~p + 1)) + (((~m - ~n) + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ (~m - ~n) * cos(~a + ~b * (~x) ^ ~n) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~p], ~x) && (LtQ(0, ~n, ~m + 1) && NeQ(~p, -1))
end
