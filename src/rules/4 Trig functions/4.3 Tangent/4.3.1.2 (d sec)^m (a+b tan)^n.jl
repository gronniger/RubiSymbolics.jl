int_rules_4_3_1_2 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.3.1.2*(d*sec)^m*(a+b*tan)^n =#
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m) / (~f * ~m) + ~a * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m], ~x) && (IntegerQ(2 * ~m) || NeQ((~a) ^ 2 + (~b) ^ 2, 0))
    @apply_utils Antiderivative(sec(~(e') + ~(f') * ~x) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (1 / ((~a) ^ (~m - 2) * ~b * ~f)) * Subst(Antiderivative((~a - ~x) ^ (~m / 2 - 1) * (~a + ~x) ^ ((~n + ~m / 2) - 1), ~x), ~x, ~b * tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && IntegerQ(~m / 2))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~m) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && EqQ(Simplify(~m + ~n), 0))
    @apply_utils Antiderivative(sec(~(e') + ~(f') * ~x) / sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((-2 * ~a) / (~b * ~f)) * Subst(Antiderivative(1 / (2 - ~a * (~x) ^ 2), ~x), ~x, sec(~e + ~f * ~x) / sqrt(~a + ~b * tan(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~m) + (~a / (2 * (~d) ^ 2)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m + 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (EqQ(~m / 2 + ~n, 0) && GtQ(~n, 0)))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (2 * (~d) ^ 2 * (~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~b * ~f * (~m - 2)) + ((2 * (~d) ^ 2) / ~a) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (EqQ(~m / 2 + ~n, 0) && LtQ(~n, -1)))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (((~a / ~d) ^ (2 * IntPart(~n)) * (~a + ~b * tan(~e + ~f * ~x)) ^ FracPart(~n) * (~a - ~b * tan(~e + ~f * ~x)) ^ FracPart(~n)) / (~d * sec(~e + ~f * ~x)) ^ (2 * FracPart(~n))) * Antiderivative(1 / (~a - ~b * tan(~e + ~f * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && EqQ(Simplify(~m / 2 + ~n), 0))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (2 * ~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * ~m) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && EqQ(Simplify((~m / 2 + ~n) - 1), 0))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * ((~m + ~n) - 1)) + ((~a * ((~m + 2 * ~n) - 2)) / ((~m + ~n) - 1)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (IGtQ(Simplify((~m / 2 + ~n) - 1), 0) && Not(IntegerQ(~n))))
    @apply_utils Antiderivative(sqrt(~(d') * sec(~(e') + ~(f') * ~x)) * sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((-4 * ~b * (~d) ^ 2) / ~f) * Subst(Antiderivative((~x) ^ 2 / ((~a) ^ 2 + (~d) ^ 2 * (~x) ^ 4), ~x), ~x, sqrt(~a + ~b * tan(~e + ~f * ~x)) / sqrt(~d * sec(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (2 * ~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * ~m) - (((~b) ^ 2 * ((~m + 2 * ~n) - 2)) / ((~d) ^ 2 * ~m)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m + 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (GtQ(~n, 1) && ((IGtQ(~n / 2, 0) && ILtQ(~m - 1 / 2, 0) || (EqQ(~n, 2) && LtQ(~m, 0) || (LeQ(~m, -1) && GtQ(~m + ~n, 0) || (ILtQ(~m, 0) && (LtQ((~m / 2 + ~n) - 1, 0) && IntegerQ(~n)) || EqQ(~n, 3 / 2) && EqQ(~m, -1 / 2))))) && IntegerQ(2 * ~m))))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ ~n) / (~a * ~f * ~m) + ((~a * (~m + ~n)) / (~m * (~d) ^ 2)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m + 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (GtQ(~n, 0) && (LtQ(~m, -1) && IntegersQ(2 * ~m, 2 * ~n))))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * ((~m + ~n) - 1)) + ((~a * ((~m + 2 * ~n) - 2)) / ((~m + ~n) - 1)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (GtQ(~n, 0) && (NeQ((~m + ~n) - 1, 0) && IntegersQ(2 * ~m, 2 * ~n))))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ (3 / 2) / sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((~d * sec(~e + ~f * ~x)) / (sqrt(~a - ~b * tan(~e + ~f * ~x)) * sqrt(~a + ~b * tan(~e + ~f * ~x)))) * Antiderivative(sqrt(~d * sec(~e + ~f * ~x)) * sqrt(~a - ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (2 * (~d) ^ 2 * (~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~b * ~f * (~m + 2 * ~n)) - (((~d) ^ 2 * (~m - 2)) / ((~b) ^ 2 * (~m + 2 * ~n))) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (LtQ(~n, -1) && ((ILtQ(~n / 2, 0) && IGtQ(~m - 1 / 2, 0) || (EqQ(~n, -2) || (IGtQ(~m + ~n, 0) || IntegersQ(~n, ~m + 1 / 2) && GtQ(2 * ~m + ~n + 1, 0)))) && IntegerQ(2 * ~m))))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~d) ^ 2 * (~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~b * ~f * ((~m + ~n) - 1)) + (((~d) ^ 2 * (~m - 2)) / (~a * ((~m + ~n) - 1))) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (LtQ(~n, 0) && (GtQ(~m, 1) && (Not(ILtQ(~m + ~n, 0)) && (NeQ((~m + ~n) - 1, 0) && IntegersQ(2 * ~m, 2 * ~n))))))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~a * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ ~n) / (~b * ~f * (~m + 2 * ~n)) + (Simplify(~m + ~n) / (~a * (~m + 2 * ~n))) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (LtQ(~n, 0) && (NeQ(~m + 2 * ~n, 0) && IntegersQ(2 * ~m, 2 * ~n))))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * Simplify((~m + ~n) - 1)) + ((~a * ((~m + 2 * ~n) - 2)) / Simplify((~m + ~n) - 1)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (IGtQ(Simplify((~m + ~n) - 1), 0) && RationalQ(~n)))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~a * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ ~n) / (~b * ~f * (~m + 2 * ~n)) + (Simplify(~m + ~n) / (~a * (~m + 2 * ~n))) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (ILtQ(Simplify(~m + ~n), 0) && NeQ(~m + 2 * ~n, 0)))
    #= Antiderivative(((~d')*sec((~e')+(~f')*(~x)))^(~m')*((~a)+(~b')*tan((~e')+(~f')*(~x)))^(~n),~x)  := a^n*(d*sec(e+f*x))^m/(b*f*(sec(e+f*x)^2)^(m/2))*Subst(Antiderivative((1+x/ a)^(n+m/2-1)*(1-x/a)^(m/2-1),x),x,b*tan(e+f*x)) <--  FreeQ([a,b,d,e,f,m],x) && EqQ(a^2+b^2,0) && IntegerQ(n) =#
    #= Antiderivative(((~d')*sec((~e')+(~f')*(~x)))^(~m')*((~a)+(~b')*tan((~e')+(~f')*(~x)))^(~n),~x)  := (d*sec(e+f*x))^m/(b*f*(sec(e+f*x)^2)^(m/2))*Subst(Antiderivative((a+x)^n*( 1+x^2/b^2)^(m/2-1),x),x,b*tan(e+f*x)) <-- FreeQ([a,b,d,e,f,m,n],x) &&  EqQ(a^2+b^2,0) =#
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(n'), ~x) => ((~d * sec(~e + ~f * ~x)) ^ ~m / ((~a + ~b * tan(~e + ~f * ~x)) ^ (~m / 2) * (~a - ~b * tan(~e + ~f * ~x)) ^ (~m / 2))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m / 2 + ~n) * (~a - ~b * tan(~e + ~f * ~x)) ^ (~m / 2), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative(sec(~(e') + ~(f') * ~x) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (1 / (~b * ~f)) * Subst(Antiderivative((~a + ~x) ^ ~n * (1 + (~x) ^ 2 / (~b) ^ 2) ^ (~m / 2 - 1), ~x), ~x, ~b * tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~n], ~x) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && IntegerQ(~m / 2))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ 2 / sec(~(e') + ~(f') * ~x), ~x) => (((~b) ^ 2 * atanh(sin(~e + ~f * ~x))) / ~f - (2 * ~a * ~b * cos(~e + ~f * ~x)) / ~f) + (((~a) ^ 2 - (~b) ^ 2) * sin(~e + ~f * ~x)) / ~f <-- FreeQ([~a, ~b, ~e, ~f], ~x) && NeQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ 2, ~x) => (~b * (~d * sec(~e + ~f * ~x)) ^ ~m * (~a + ~b * tan(~e + ~f * ~x))) / (~f * (~m + 1)) + (1 / (~m + 1)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (((~a) ^ 2 * (~m + 1) - (~b) ^ 2) + ~a * ~b * (~m + 2) * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m], ~x) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ(~m, -1))
    @apply_utils Antiderivative(sec(~(e') + ~(f') * ~x) / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (-1 / ~f) * Subst(Antiderivative(1 / (((~a) ^ 2 + (~b) ^ 2) - (~x) ^ 2), ~x), ~x, (~b - ~a * tan(~e + ~f * ~x)) / sec(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f], ~x) && NeQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~m / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (-((~d) ^ 2) / (~b) ^ 2) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m - 2) * (~a - ~b * tan(~e + ~f * ~x)), ~x) + (((~d) ^ 2 * ((~a) ^ 2 + (~b) ^ 2)) / (~b) ^ 2) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m - 2) / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && IGtQ(~m, 1))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~m / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (1 / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ ~m * (~a - ~b * tan(~e + ~f * ~x)), ~x) + ((~b) ^ 2 / ((~d) ^ 2 * ((~a) ^ 2 + (~b) ^ 2))) * Antiderivative((~d * sec(~e + ~f * ~x)) ^ (~m + 2) / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && ILtQ(~m, 0))
    @apply_utils Antiderivative((~(d') * sec(~(e') + ~(f') * ~x)) ^ ~(m') * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (((~d) ^ (2 * IntPart(~m / 2)) * (~d * sec(~e + ~f * ~x)) ^ (2 * FracPart(~m / 2))) / (~b * ~f * (sec(~e + ~f * ~x) ^ 2) ^ FracPart(~m / 2))) * Subst(Antiderivative((~a + ~x) ^ ~n * (1 + (~x) ^ 2 / (~b) ^ 2) ^ (~m / 2 - 1), ~x), ~x, ~b * tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && Not(IntegerQ(~m / 2)))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)) / sqrt(~(d') * cos(~(e') + ~(f') * ~x)), ~x) => ((-4 * ~b) / ~f) * Subst(Antiderivative((~x) ^ 2 / ((~a) ^ 2 * (~d) ^ 2 + (~x) ^ 4), ~x), ~x, sqrt(~d * cos(~e + ~f * ~x)) * sqrt(~a + ~b * tan(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative(1 / ((~(d') * cos(~(e') + ~(f') * ~x)) ^ (3 / 2) * sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x))), ~x) => (1 / (~d * cos(~e + ~f * ~x) * sqrt(~a - ~b * tan(~e + ~f * ~x)) * sqrt(~a + ~b * tan(~e + ~f * ~x)))) * Antiderivative(sqrt(~a - ~b * tan(~e + ~f * ~x)) / sqrt(~d * cos(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f], ~x) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)
    @apply_utils Antiderivative((~(d') * cos(~(e') + ~(f') * ~x)) ^ ~m * (~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(n'), ~x) => (~d * cos(~e + ~f * ~x)) ^ ~m * (~d * sec(~e + ~f * ~x)) ^ ~m * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~n / (~d * sec(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~m, ~n], ~x) && Not(IntegerQ(~m))
end
