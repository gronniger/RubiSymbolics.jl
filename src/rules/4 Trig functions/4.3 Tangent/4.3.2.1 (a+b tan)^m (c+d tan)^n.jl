int_rules_4_3_2_1 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.3.2.1*(a+b*tan)^m*(c+d*tan)^n =#
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~c + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~(n'), ~x) => (~a) ^ ~m * (~c) ^ ~m * Antiderivative(sec(~e + ~f * ~x) ^ (2 * ~m) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - ~m), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && (EqQ(~b * ~c + ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (IntegerQ(~m) && Not(IGtQ(~n, 0) && (LtQ(~m, 0) || GtQ(~m, ~n))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~c + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~a * ~c) / ~f) * Subst(Antiderivative((~a + ~b * ~x) ^ (~m - 1) * (~c + ~d * ~x) ^ (~n - 1), ~x), ~x, tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && (EqQ(~b * ~c + ~a * ~d, 0) && EqQ((~a) ^ 2 + (~b) ^ 2, 0))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) * (~c + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (~a * ~c - ~b * ~d) * ~x + (~b * ~d * tan(~e + ~f * ~x)) / ~f <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && EqQ(~b * ~c + ~a * ~d, 0))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (~a * ~c - ~b * ~d) * ~x + (~b * ~d * tan(~e + ~f * ~x)) / ~f + (~b * ~c + ~a * ~d) * Antiderivative(tan(~e + ~f * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && NeQ(~b * ~c + ~a * ~d, 0))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (-((~b * ~c - ~a * ~d)) * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m) / (2 * ~a * ~f * ~m) + ((~b * ~c + ~a * ~d) / (2 * ~a * ~b)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && LtQ(~m, 0)))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (~d * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m) / (~f * ~m) + ((~b * ~c + ~a * ~d) / ~b) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && Not(LtQ(~m, 0))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (~d * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m) / (~f * ~m) + Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 1) * Simp((~a * ~c - ~b * ~d) + (~b * ~c + ~a * ~d) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && GtQ(~m, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ((~b * ~c - ~a * ~d) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2)) + (1 / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp((~a * ~c + ~b * ~d) - (~b * ~c - ~a * ~d) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~c + ~(d') * tan(~(e') + ~(f') * ~x)) / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (~c / (~b * ~f)) * log(RemoveContent(~a * cos(~e + ~f * ~x) + ~b * sin(~e + ~f * ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && EqQ(~a * ~c + ~b * ~d, 0)))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) / (~(a') + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((~a * ~c + ~b * ~d) * ~x) / ((~a) ^ 2 + (~b) ^ 2) + ((~b * ~c - ~a * ~d) / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((~b - ~a * tan(~e + ~f * ~x)) / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ(~a * ~c + ~b * ~d, 0)))
    @apply_utils Antiderivative((~c + ~(d') * tan(~(e') + ~(f') * ~x)) / sqrt(~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((-2 * (~d) ^ 2) / ~f) * Subst(Antiderivative(1 / (2 * ~c * ~d + ~b * (~x) ^ 2), ~x), ~x, (~c - ~d * tan(~e + ~f * ~x)) / sqrt(~b * tan(~e + ~f * ~x))) <-- FreeQ([~b, ~c, ~d, ~e, ~f], ~x) && EqQ((~c) ^ 2 - (~d) ^ 2, 0)
    #= Antiderivative(((~c)+(~d')*tan((~e')+(~f')*(~x)))/sqrt((~b')*tan((~e')+(~f')*(~x))),~x) :=   (c+d)/2*Antiderivative((1+tan(e+f*x))/sqrt(b*tan(e+f*x)),x) + (c-d)/2*Antiderivative((1-tan(e+f*x))/sqrt(b*tan(e+f*x)),x) <--  FreeQ([b,c,d,e,f],x) && NeQ(c^2+d^2,0) && NeQ(c^2-d^2,0) =#
    @apply_utils Antiderivative((~c + ~(d') * tan(~(e') + ~(f') * ~x)) / sqrt(~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((2 * (~c) ^ 2) / ~f) * Subst(Antiderivative(1 / (~b * ~c - ~d * (~x) ^ 2), ~x), ~x, sqrt(~b * tan(~e + ~f * ~x))) <-- FreeQ([~b, ~c, ~d, ~e, ~f], ~x) && EqQ((~c) ^ 2 + (~d) ^ 2, 0)
    #= Antiderivative(((~c)+(~d')*tan((~e')+(~f')*(~x)))/sqrt((~b')*tan((~e')+(~f')*(~x))),~x) :=   (c+im*d)/2*Antiderivative((1-im*tan(e+f*x))/sqrt(b*tan(e+f*x)),x) +  (c-im*d)/2*Antiderivative((1+im*tan(e+f*x))/sqrt(b*tan(e+f*x)),x) <--  FreeQ([b,c,d,e,f],x) && NeQ(c^2-d^2,0) && NeQ(c^2+d^2,0) =#
    @apply_utils Antiderivative((~c + ~(d') * tan(~(e') + ~(f') * ~x)) / sqrt(~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (2 / ~f) * Subst(Antiderivative((~b * ~c + ~d * (~x) ^ 2) / ((~b) ^ 2 + (~x) ^ 4), ~x), ~x, sqrt(~b * tan(~e + ~f * ~x))) <-- FreeQ([~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~c) ^ 2 - (~d) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) / sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((-2 * (~d) ^ 2) / ~f) * Subst(Antiderivative(1 / ((2 * ~b * ~c * ~d - 4 * ~a * (~d) ^ 2) + (~x) ^ 2), ~x), ~x, ((~b * ~c - 2 * ~a * ~d) - ~b * ~d * tan(~e + ~f * ~x)) / sqrt(~a + ~b * tan(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && EqQ(2 * ~a * ~c * ~d - ~b * ((~c) ^ 2 - (~d) ^ 2), 0))))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) / sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => With([q = Rt((~a) ^ 2 + (~b) ^ 2, 2)], (1 / (2q)) * Antiderivative((~a * ~c + ~b * ~d + ~c * q + ((~b * ~c - ~a * ~d) + ~d * q) * tan(~e + ~f * ~x)) / sqrt(~a + ~b * tan(~e + ~f * ~x)), ~x) - (1 / (2q)) * Antiderivative((((~a * ~c + ~b * ~d) - ~c * q) + ((~b * ~c - ~a * ~d) - ~d * q) * tan(~e + ~f * ~x)) / sqrt(~a + ~b * tan(~e + ~f * ~x)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (NeQ(2 * ~a * ~c * ~d - ~b * ((~c) ^ 2 - (~d) ^ 2), 0) && (PerfectSquareQ((~a) ^ 2 + (~b) ^ 2) || RationalQ(~a, ~b, ~c, ~d))))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~c + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ((~c * ~d) / ~f) * Subst(Antiderivative((~a + (~b / ~d) * ~x) ^ ~m / ((~d) ^ 2 + ~c * ~x), ~x), ~x, ~d * tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && EqQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~c + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ~c * Antiderivative((~b * tan(~e + ~f * ~x)) ^ ~m, ~x) + (~d / ~b) * Antiderivative((~b * tan(~e + ~f * ~x)) ^ (~m + 1), ~x) <-- FreeQ([~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && Not(IntegerQ(2 * ~m)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ((~c + im * ~d) / 2) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (1 - im * tan(~e + ~f * ~x)), ~x) + ((~c - im * ~d) / 2) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (1 + im * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && Not(IntegerQ(~m)))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ 2, ~x) => (-(~b) * (~a * ~c + ~b * ~d) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m) / (2 * (~a) ^ 3 * ~f * ~m) + (1 / (2 * (~a) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp(((~a * (~c) ^ 2 - 2 * ~b * ~c * ~d) + ~a * (~d) ^ 2) - 2 * ~b * (~d) ^ 2 * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (LeQ(~m, -1) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ 2 / (~(a') + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (~d * (2 * ~b * ~c - ~a * ~d) * ~x) / (~b) ^ 2 + ((~d) ^ 2 / ~b) * Antiderivative(tan(~e + ~f * ~x), ~x) + ((~b * ~c - ~a * ~d) ^ 2 / (~b) ^ 2) * Antiderivative(1 / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && NeQ((~a) ^ 2 + (~b) ^ 2, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ 2, ~x) => ((~b * ~c - ~a * ~d) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2)) + (1 / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp(((~a * (~c) ^ 2 + 2 * ~b * ~c * ~d) - ~a * (~d) ^ 2) - ((~b * (~c) ^ 2 - 2 * ~a * ~c * ~d) - ~b * (~d) ^ 2) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (LtQ(~m, -1) && NeQ((~a) ^ 2 + (~b) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ 2, ~x) => ((~d) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1)) + Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * Simp(((~c) ^ 2 - (~d) ^ 2) + 2 * ~c * ~d * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (Not(LeQ(~m, -1)) && Not(EqQ(~m, 2) && EqQ(~a, 0))))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)) / sqrt(~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ((-2 * ~a * ~b) / ~f) * Subst(Antiderivative(1 / ((~a * ~c - ~b * ~d) - 2 * (~a) ^ 2 * (~x) ^ 2), ~x), ~x, sqrt(~c + ~d * tan(~e + ~f * ~x)) / sqrt(~a + ~b * tan(~e + ~f * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~a * ~b * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~f * (~m - 1) * (~a * ~c - ~b * ~d)) + ((2 * (~a) ^ 2) / (~a * ~c - ~b * ~d)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (EqQ(~m + ~n, 0) && GtQ(~m, 1 / 2)))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~a * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n) / (2 * ~b * ~f * ~m) - ((~a * ~c - ~b * ~d) / (2 * (~b) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (EqQ(~m + ~n, 0) && LeQ(~m, -1 / 2)))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~a * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (2 * ~f * ~m * (~b * ~c - ~a * ~d)) + (1 / (2 * ~a)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (EqQ(~m + ~n + 1, 0) && LtQ(~m, -1)))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (-(~d) * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~f * ~m * ((~c) ^ 2 + (~d) ^ 2)) + (~a / (~a * ~c - ~b * ~d)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (EqQ(~m + ~n + 1, 0) && Not(LtQ(~m, -1))))))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (-((~a * ~c + ~b * ~d)) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n) / (2 * (~b * ~c - ~a * ~d) * ~f * (~a + ~b * tan(~e + ~f * ~x))) + (1 / (2 * ~a * (~b * ~c - ~a * ~d))) * Antiderivative((~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1) * Simp((~a * ~c * ~d * (~n - 1) + ~b * (~c) ^ 2 + ~b * (~d) ^ 2 * ~n) - ~d * (~b * ~c - ~a * ~d) * (~n - 1) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && LtQ(0, ~n, 1))))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((~b * ~c - ~a * ~d) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1)) / (2 * ~a * ~f * (~a + ~b * tan(~e + ~f * ~x))) + (1 / (2 * (~a) ^ 2)) * Antiderivative((~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 2) * Simp(((~a * (~c) ^ 2 + ~a * (~d) ^ 2 * (~n - 1)) - ~b * ~c * ~d * ~n) - ~d * (~a * ~c * (~n - 2) + ~b * ~d * ~n) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && GtQ(~n, 1))))
    @apply_utils Antiderivative(1 / ((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x))), ~x) => (~b / (~b * ~c - ~a * ~d)) * Antiderivative(1 / (~a + ~b * tan(~e + ~f * ~x)), ~x) - (~d / (~b * ~c - ~a * ~d)) * Antiderivative(1 / (~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (-(~a) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (2 * ~f * (~b * ~c - ~a * ~d) * (~a + ~b * tan(~e + ~f * ~x))) + (1 / (2 * ~a * (~b * ~c - ~a * ~d))) * Antiderivative((~c + ~d * tan(~e + ~f * ~x)) ^ ~n * Simp((~b * ~c + ~a * ~d * (~n - 1)) - ~b * ~d * ~n * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && Not(GtQ(~n, 0)))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (-((~a) ^ 2) * (~b * ~c - ~a * ~d) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~d * ~f * (~b * ~c + ~a * ~d) * (~n + 1)) + (~a / (~d * (~b * ~c + ~a * ~d) * (~n + 1))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1) * Simp(~b * (~b * ~c * (~m - 2) - ~a * ~d * ((~m - 2 * ~n) - 4)) + ((~a * ~b * ~c * (~m - 2) + (~b) ^ 2 * ~d * (~n + 1)) - (~a) ^ 2 * ~d * ((~m + ~n) - 1)) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (GtQ(~m, 1) && (LtQ(~n, -1) && (IntegerQ(~m) || IntegersQ(2 * ~m, 2 * ~n)))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ (3 / 2) / (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ((2 * (~a) ^ 2) / (~a * ~c - ~b * ~d)) * Antiderivative(sqrt(~a + ~b * tan(~e + ~f * ~x)), ~x) - ((2 * ~b * ~c * ~d + ~a * ((~c) ^ 2 - (~d) ^ 2)) / (~a * ((~c) ^ 2 + (~d) ^ 2))) * Antiderivative(((~a - ~b * tan(~e + ~f * ~x)) * sqrt(~a + ~b * tan(~e + ~f * ~x))) / (~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ (3 / 2) / sqrt(~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => 2 * ~a * Antiderivative(sqrt(~a + ~b * tan(~e + ~f * ~x)) / sqrt(~c + ~d * tan(~e + ~f * ~x)), ~x) + (~b / ~a) * Antiderivative(((~b + ~a * tan(~e + ~f * ~x)) * sqrt(~a + ~b * tan(~e + ~f * ~x))) / sqrt(~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~b) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~d * ~f * ((~m + ~n) - 1)) + (~a / (~d * ((~m + ~n) - 1))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n * Simp(~b * ~c * (~m - 2) + ~a * ~d * (~m + 2 * ~n) + (~a * ~c * (~m - 2) + ~b * ~d * ((3 * ~m + 2 * ~n) - 4)) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (IntegerQ(2 * ~m) && (GtQ(~m, 1) && (NeQ((~m + ~n) - 1, 0) && (IntegerQ(~m) || IntegersQ(2 * ~m, 2 * ~n))))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * sqrt(~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (-(~b) * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * sqrt(~c + ~d * tan(~e + ~f * ~x))) / (2 * ~a * ~f * ~m) + (1 / (4 * (~a) ^ 2 * ~m)) * Antiderivative(((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp(2 * ~a * ~c * ~m + ~b * ~d + ~a * ~d * (2 * ~m + 1) * tan(~e + ~f * ~x), ~x)) / sqrt(~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (LtQ(~m, 0) && IntegersQ(2 * ~m)))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (-((~b * ~c - ~a * ~d)) * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1)) / (2 * ~a * ~f * ~m) + (1 / (2 * (~a) ^ 2 * ~m)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 2) * Simp((~c * (~a * ~c * ~m + ~b * ~d * (~n - 1)) - ~d * (~b * ~c * ~m + ~a * ~d * (~n - 1))) - ~d * (~b * ~d * ((~m - ~n) + 1) - ~a * ~c * ((~m + ~n) - 1)) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (LtQ(~m, 0) && (GtQ(~n, 1) && (IntegerQ(~m) || IntegersQ(2 * ~m, 2 * ~n)))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~a * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (2 * ~f * ~m * (~b * ~c - ~a * ~d)) + (1 / (2 * ~a * ~m * (~b * ~c - ~a * ~d))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n * Simp((~b * ~c * ~m - ~a * ~d * (2 * ~m + ~n + 1)) + ~b * ~d * (~m + ~n + 1) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (LtQ(~m, 0) && (IntegerQ(~m) || IntegersQ(2 * ~m, 2 * ~n))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~d * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * ((~m + ~n) - 1)) - (1 / (~a * ((~m + ~n) - 1))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 2) * Simp((~d * (~b * ~c * ~m + ~a * ~d * (-1 + ~n)) - ~a * (~c) ^ 2 * ((~m + ~n) - 1)) + ~d * (~b * ~d * ~m - ~a * ~c * ((~m + 2 * ~n) - 2)) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (GtQ(~n, 1) && (NeQ((~m + ~n) - 1, 0) && (IntegerQ(~n) || IntegersQ(2 * ~m, 2 * ~n)))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~d * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~f * (~n + 1) * ((~c) ^ 2 + (~d) ^ 2)) - (1 / (~a * ((~c) ^ 2 + (~d) ^ 2) * (~n + 1))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1) * Simp((~b * ~d * ~m - ~a * ~c * (~n + 1)) + ~a * ~d * (~m + ~n + 1) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (LtQ(~n, -1) && (IntegerQ(~n) || IntegersQ(2 * ~m, 2 * ~n))))))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m / (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (~a / (~a * ~c - ~b * ~d)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m, ~x) - (~d / (~a * ~c - ~b * ~d)) * Antiderivative(((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~b + ~a * tan(~e + ~f * ~x))) / (~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * tan(~(e') + ~(f') * ~x)) * sqrt(~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => ((~a * ~c - ~b * ~d) / ~a) * Antiderivative(sqrt(~a + ~b * tan(~e + ~f * ~x)) / sqrt(~c + ~d * tan(~e + ~f * ~x)), ~x) + (~d / ~a) * Antiderivative((sqrt(~a + ~b * tan(~e + ~f * ~x)) * (~b + ~a * tan(~e + ~f * ~x))) / sqrt(~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~a + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~a * ~b) / ~f) * Subst(Antiderivative(((~a + ~x) ^ (~m - 1) * (~c + (~d / ~b) * ~x) ^ ~n) / ((~b) ^ 2 + ~a * ~x), ~x), ~x, ~b * tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (EqQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~b * ~c - ~a * ~d) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~d * ~f * (~n + 1) * ((~c) ^ 2 + (~d) ^ 2)) - (1 / (~d * (~n + 1) * ((~c) ^ 2 + (~d) ^ 2))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 3) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1) * Simp((((~a) ^ 2 * ~d * (~b * ~d * (~m - 2) - ~a * ~c * (~n + 1)) + ~b * (~b * ~c - 2 * ~a * ~d) * (~b * ~c * (~m - 2) + ~a * ~d * (~n + 1))) - ~d * (~n + 1) * (((3 * (~a) ^ 2 * ~b * ~c - (~b) ^ 3 * ~c) - (~a) ^ 3 * ~d) + 3 * ~a * (~b) ^ 2 * ~d) * tan(~e + ~f * ~x)) - ~b * (~a * ~d * (2 * ~b * ~c - ~a * ~d) * ((~m + ~n) - 1) - (~b) ^ 2 * ((~c) ^ 2 * (~m - 2) - (~d) ^ 2 * (~n + 1))) * tan(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (GtQ(~m, 2) && (LtQ(~n, -1) && IntegerQ(2 * ~m))))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~b) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~d * ~f * ((~m + ~n) - 1)) + (1 / (~d * ((~m + ~n) - 1))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 3) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n * Simp((((~a) ^ 3 * ~d * ((~m + ~n) - 1) - (~b) ^ 2 * (~b * ~c * (~m - 2) + ~a * ~d * (1 + ~n))) + ~b * ~d * ((~m + ~n) - 1) * (3 * (~a) ^ 2 - (~b) ^ 2) * tan(~e + ~f * ~x)) - (~b) ^ 2 * (~b * ~c * (~m - 2) - ~a * ~d * ((3 * ~m + 2 * ~n) - 4)) * tan(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (IntegerQ(2 * ~m) && (GtQ(~m, 2) && ((GeQ(~n, -1) || IntegerQ(~m)) && Not(IGtQ(~n, 2) && (Not(IntegerQ(~m)) || EqQ(~c, 0) && NeQ(~a, 0)))))))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~b * ~c - ~a * ~d) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1)) / (~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2)) + (1 / ((~m + 1) * ((~a) ^ 2 + (~b) ^ 2))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 2) * Simp(((~a * (~c) ^ 2 * (~m + 1) + ~a * (~d) ^ 2 * (~n - 1) + ~b * ~c * ~d * ((~m - ~n) + 2)) - ((~b * (~c) ^ 2 - 2 * ~a * ~c * ~d) - ~b * (~d) ^ 2) * (~m + 1) * tan(~e + ~f * ~x)) - ~d * (~b * ~c - ~a * ~d) * (~m + ~n) * tan(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (LtQ(~m, -1) && (LtQ(1, ~n, 2) && IntegerQ(2 * ~m))))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n) / (~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2)) + (1 / ((~m + 1) * ((~a) ^ 2 + (~b) ^ 2))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1) * Simp(((~a * ~c * (~m + 1) - ~b * ~d * ~n) - (~b * ~c - ~a * ~d) * (~m + 1) * tan(~e + ~f * ~x)) - ~b * ~d * (~m + ~n + 1) * tan(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (LtQ(~m, -1) && (GtQ(~n, 0) && IntegerQ(2 * ~m))))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => ((~b) ^ 2 * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n + 1)) / (~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2) * (~b * ~c - ~a * ~d)) + (1 / ((~m + 1) * ((~a) ^ 2 + (~b) ^ 2) * (~b * ~c - ~a * ~d))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n * Simp(((~a * (~b * ~c - ~a * ~d) * (~m + 1) - (~b) ^ 2 * ~d * (~m + ~n + 2)) - ~b * (~b * ~c - ~a * ~d) * (~m + 1) * tan(~e + ~f * ~x)) - (~b) ^ 2 * ~d * (~m + ~n + 2) * tan(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (IntegerQ(2 * ~m) && (LtQ(~m, -1) && ((LtQ(~n, 0) || IntegerQ(~m)) && Not(ILtQ(~n, -1) && (Not(IntegerQ(~m)) || EqQ(~c, 0) && NeQ(~a, 0)))))))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~b * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 1) * (~c + ~d * tan(~e + ~f * ~x)) ^ ~n) / (~f * ((~m + ~n) - 1)) + (1 / ((~m + ~n) - 1)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m - 2) * (~c + ~d * tan(~e + ~f * ~x)) ^ (~n - 1) * Simp(((~a) ^ 2 * ~c * ((~m + ~n) - 1) - ~b * (~b * ~c * (~m - 1) + ~a * ~d * ~n)) + ((2 * ~a * ~b * ~c + (~a) ^ 2 * ~d) - (~b) ^ 2 * ~d) * ((~m + ~n) - 1) * tan(~e + ~f * ~x) + ~b * (~b * ~c * ~n + ~a * ~d * ((2 * ~m + ~n) - 2)) * tan(~e + ~f * ~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && (GtQ(~m, 1) && (GtQ(~n, 0) && IntegerQ(2 * ~n))))))
    @apply_utils Antiderivative(1 / ((~a + ~(b') * tan(~(e') + ~(f') * ~x)) * (~(c') + ~(d') * tan(~(e') + ~(f') * ~x))), ~x) => (((~a * ~c - ~b * ~d) * ~x) / (((~a) ^ 2 + (~b) ^ 2) * ((~c) ^ 2 + (~d) ^ 2)) + ((~b) ^ 2 / ((~b * ~c - ~a * ~d) * ((~a) ^ 2 + (~b) ^ 2))) * Antiderivative((~b - ~a * tan(~e + ~f * ~x)) / (~a + ~b * tan(~e + ~f * ~x)), ~x)) - ((~d) ^ 2 / ((~b * ~c - ~a * ~d) * ((~c) ^ 2 + (~d) ^ 2))) * Antiderivative((~d - ~c * tan(~e + ~f * ~x)) / (~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative(sqrt(~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) / (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (1 / ((~c) ^ 2 + (~d) ^ 2)) * Antiderivative(Simp(~a * ~c + ~b * ~d + (~b * ~c - ~a * ~d) * tan(~e + ~f * ~x), ~x) / sqrt(~a + ~b * tan(~e + ~f * ~x)), ~x) - ((~d * (~b * ~c - ~a * ~d)) / ((~c) ^ 2 + (~d) ^ 2)) * Antiderivative((1 + tan(~e + ~f * ~x) ^ 2) / (sqrt(~a + ~b * tan(~e + ~f * ~x)) * (~c + ~d * tan(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ (3 / 2) / (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (1 / ((~c) ^ 2 + (~d) ^ 2)) * Antiderivative(Simp(((~a) ^ 2 * ~c - (~b) ^ 2 * ~c) + 2 * ~a * ~b * ~d + ((2 * ~a * ~b * ~c - (~a) ^ 2 * ~d) + (~b) ^ 2 * ~d) * tan(~e + ~f * ~x), ~x) / sqrt(~a + ~b * tan(~e + ~f * ~x)), ~x) + ((~b * ~c - ~a * ~d) ^ 2 / ((~c) ^ 2 + (~d) ^ 2)) * Antiderivative((1 + tan(~e + ~f * ~x) ^ 2) / (sqrt(~a + ~b * tan(~e + ~f * ~x)) * (~c + ~d * tan(~e + ~f * ~x))), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m / (~(c') + ~(d') * tan(~(e') + ~(f') * ~x)), ~x) => (1 / ((~c) ^ 2 + (~d) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~c - ~d * tan(~e + ~f * ~x)), ~x) + ((~d) ^ 2 / ((~c) ^ 2 + (~d) ^ 2)) * Antiderivative(((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (1 + tan(~e + ~f * ~x) ^ 2)) / (~c + ~d * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && (NeQ((~c) ^ 2 + (~d) ^ 2, 0) && Not(IntegerQ(~m)))))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~c + ~(d') * tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => With([ff = FreeFactors(tan(~e + ~f * ~x), ~x)], (ff / ~f) * Subst(Antiderivative(((~a + ~b * ff * ~x) ^ ~m * (~c + ~d * ff * ~x) ^ ~n) / (1 + ff ^ 2 * (~x) ^ 2), ~x), ~x, tan(~e + ~f * ~x) / ff)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && (NeQ(~b * ~c - ~a * ~d, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~c) ^ 2 + (~d) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') / tan(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~d) ^ ~m * Antiderivative((~b + ~a * cot(~e + ~f * ~x)) ^ ~m * (~d * cot(~e + ~f * ~x)) ^ (~n - ~m), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~(a') + ~(b') * cot(~(e') + ~(f') * ~x)) ^ ~(m') * (~(d') / cot(~(e') + ~(f') * ~x)) ^ ~n, ~x) => (~d) ^ ~m * Antiderivative((~b + ~a * tan(~e + ~f * ~x)) ^ ~m * (~d * tan(~e + ~f * ~x)) ^ (~n - ~m), ~x) <-- FreeQ([~a, ~b, ~d, ~e, ~f, ~n], ~x) && (Not(IntegerQ(~n)) && IntegerQ(~m))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') * (~(d') * tan(~(e') + ~(f') * ~x)) ^ ~p) ^ ~n, ~x) => (((~c) ^ IntPart(~n) * (~c * (~d * tan(~e + ~f * ~x)) ^ ~p) ^ FracPart(~n)) / (~d * tan(~e + ~f * ~x)) ^ (~p * FracPart(~n))) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * (~d * tan(~e + ~f * ~x)) ^ (~n * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x) && (Not(IntegerQ(~n)) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative((~(a') + ~(b') * cot(~(e') + ~(f') * ~x)) ^ ~(m') * (~(c') * (~(d') * cot(~(e') + ~(f') * ~x)) ^ ~p) ^ ~n, ~x) => (((~c) ^ IntPart(~n) * (~c * (~d * cot(~e + ~f * ~x)) ^ ~p) ^ FracPart(~n)) / (~d * cot(~e + ~f * ~x)) ^ (~p * FracPart(~n))) * Antiderivative((~a + ~b * cot(~e + ~f * ~x)) ^ ~m * (~d * cot(~e + ~f * ~x)) ^ (~n * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x) && (Not(IntegerQ(~n)) && Not(IntegerQ(~m)))
end
