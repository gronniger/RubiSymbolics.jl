int_rules_4_3_4_1 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 4.3.4.1*(a+b*tan)^m*(A+B*tan+C*tan^2) =#
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~A + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (~A / (~b * ~f)) * Subst(Antiderivative((~a + ~x) ^ ~m, ~x), ~x, ~b * tan(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C, ~m], ~x) && EqQ(~A, ~C)
    @apply_utils Antiderivative((~(a') + ~(b') * cot(~(e') + ~(f') * ~x)) ^ ~(m') * (~A + ~(C') * cot(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~A) / (~b * ~f)) * Subst(Antiderivative((~a + ~x) ^ ~m, ~x), ~x, ~b * cot(~e + ~f * ~x)) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C, ~m], ~x) && EqQ(~A, ~C)
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(A') + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (1 / (~b) ^ 2) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp((~b * ~B - ~a * ~C) + ~b * ~C * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && EqQ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(A') + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(~C) / (~b) ^ 2) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * (~a - ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C, ~m], ~x) && EqQ(~A * (~b) ^ 2 + (~a) ^ 2 * ~C, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(A') + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (-(((~a * ~A + ~b * ~B) - ~a * ~C)) * tan(~e + ~f * ~x) * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m) / (2 * ~a * ~f * ~m) + (1 / (2 * (~a) ^ 2 * ~m)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp(((~b * ~B - ~a * ~C) + ~a * ~A * (2 * ~m + 1)) - (~b * ~C * (~m - 1) + (~A * ~b - ~a * ~B) * (~m + 1)) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C, 0) && (LeQ(~m, -1) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(A') + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (-((~a * ~A - ~a * ~C)) * tan(~e + ~f * ~x) * (~a + ~b * tan(~e + ~f * ~x)) ^ ~m) / (2 * ~a * ~f * ~m) + (1 / (2 * (~a) ^ 2 * ~m)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp((-(~a) * ~C + ~a * ~A * (2 * ~m + 1)) - (~b * ~C * (~m - 1) + ~A * ~b * (~m + 1)) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C], ~x) && (NeQ(~A * (~b) ^ 2 + (~a) ^ 2 * ~C, 0) && (LeQ(~m, -1) && EqQ((~a) ^ 2 + (~b) ^ 2, 0)))
    @apply_utils Antiderivative((~A + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2) / (~(a') + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => (((~a * ~A + ~b * ~B) - ~a * ~C) * ~x) / ((~a) ^ 2 + (~b) ^ 2) + (((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((1 + tan(~e + ~f * ~x) ^ 2) / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && EqQ((~A * ~b - ~a * ~B) - ~b * ~C, 0))
    @apply_utils Antiderivative((~A + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2) / tan(~(e') + ~(f') * ~x), ~x) => ~B * ~x + ~A * Antiderivative(1 / tan(~e + ~f * ~x), ~x) + ~C * Antiderivative(tan(~e + ~f * ~x), ~x) <-- FreeQ([~e, ~f, ~A, ~B, ~C], ~x) && NeQ(~A, ~C)
    @apply_utils Antiderivative((~A + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2) / tan(~(e') + ~(f') * ~x), ~x) => ~A * Antiderivative(1 / tan(~e + ~f * ~x), ~x) + ~C * Antiderivative(tan(~e + ~f * ~x), ~x) <-- FreeQ([~e, ~f, ~A, ~C], ~x) && NeQ(~A, ~C)
    @apply_utils Antiderivative((~A + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2) / (~(a') + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((((~a * ~A + ~b * ~B) - ~a * ~C) * ~x) / ((~a) ^ 2 + (~b) ^ 2) - (((~A * ~b - ~a * ~B) - ~b * ~C) / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative(tan(~e + ~f * ~x), ~x)) + (((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((1 + tan(~e + ~f * ~x) ^ 2) / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ((~A * ~b - ~a * ~B) - ~b * ~C, 0)))
    @apply_utils Antiderivative((~A + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2) / (~a + ~(b') * tan(~(e') + ~(f') * ~x)), ~x) => ((~a * (~A - ~C) * ~x) / ((~a) ^ 2 + (~b) ^ 2) - ((~b * (~A - ~C)) / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative(tan(~e + ~f * ~x), ~x)) + (((~a) ^ 2 * ~C + ~A * (~b) ^ 2) / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((1 + tan(~e + ~f * ~x) ^ 2) / (~a + ~b * tan(~e + ~f * ~x)), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C], ~x) && (NeQ((~a) ^ 2 * ~C + ~A * (~b) ^ 2, 0) && (NeQ((~a) ^ 2 + (~b) ^ 2, 0) && NeQ(~A, ~C)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2)) + (1 / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp((~b * ~B + ~a * (~A - ~C)) - ((~A * ~b - ~a * ~B) - ~b * ~C) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C], ~x) && (NeQ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C, 0) && (LtQ(~m, -1) && NeQ((~a) ^ 2 + (~b) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~m * (~(A') + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => ((~A * (~b) ^ 2 + (~a) ^ 2 * ~C) * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1) * ((~a) ^ 2 + (~b) ^ 2)) + (1 / ((~a) ^ 2 + (~b) ^ 2)) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1) * Simp(~a * (~A - ~C) - (~A * ~b - ~b * ~C) * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C], ~x) && (NeQ(~A * (~b) ^ 2 + (~a) ^ 2 * ~C, 0) && (LtQ(~m, -1) && NeQ((~a) ^ 2 + (~b) ^ 2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(A') + ~(B') * tan(~(e') + ~(f') * ~x) + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (~C * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1)) + Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m * Simp((~A - ~C) + ~B * tan(~e + ~f * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~B, ~C, ~m], ~x) && (NeQ((~A * (~b) ^ 2 - ~a * ~b * ~B) + (~a) ^ 2 * ~C, 0) && Not(LeQ(~m, -1)))
    @apply_utils Antiderivative((~(a') + ~(b') * tan(~(e') + ~(f') * ~x)) ^ ~(m') * (~(A') + ~(C') * tan(~(e') + ~(f') * ~x) ^ 2), ~x) => (~C * (~a + ~b * tan(~e + ~f * ~x)) ^ (~m + 1)) / (~b * ~f * (~m + 1)) + (~A - ~C) * Antiderivative((~a + ~b * tan(~e + ~f * ~x)) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~e, ~f, ~A, ~C, ~m], ~x) && (NeQ(~A * (~b) ^ 2 + (~a) ^ 2 * ~C, 0) && Not(LeQ(~m, -1)))
end
