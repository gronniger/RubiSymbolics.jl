int_rules_6_1_13 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 6.1.13*(d+e*x)^m*sinh(a+b*x+c*x^2)^n =#
    @apply_utils Antiderivative(sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (1 / 2) * Antiderivative(ℯ ^ (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) - (1 / 2) * Antiderivative(ℯ ^ ((-(~a) - ~b * ~x) - ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c], ~x)
    @apply_utils Antiderivative(cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (1 / 2) * Antiderivative(ℯ ^ (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) + (1 / 2) * Antiderivative(ℯ ^ ((-(~a) - ~b * ~x) - ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c], ~x)
    @apply_utils Antiderivative(sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce(sinh(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative(cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce(cosh(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative(sinh(~v) ^ ~(n'), ~x) => Antiderivative(sinh(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- IGtQ(~n, 0) && (QuadraticQ(~v, ~x) && Not(QuadraticMatchQ(~v, ~x)))
    @apply_utils Antiderivative(cosh(~v) ^ ~(n'), ~x) => Antiderivative(cosh(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- IGtQ(~n, 0) && (QuadraticQ(~v, ~x) && Not(QuadraticMatchQ(~v, ~x)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * cosh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~b * ~e - 2 * ~c * ~d, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * sinh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~b * ~e - 2 * ~c * ~d, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * cosh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - ((~b * ~e - 2 * ~c * ~d) / (2 * ~c)) * Antiderivative(sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ(~b * ~e - 2 * ~c * ~d, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * sinh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - ((~b * ~e - 2 * ~c * ~d) / (2 * ~c)) * Antiderivative(cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && NeQ(~b * ~e - 2 * ~c * ~d, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ(~m, 1) && EqQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ(~m, 1) && EqQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~e * (~d + ~e * ~x) ^ (~m - 1) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - ((~b * ~e - 2 * ~c * ~d) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) - (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ(~m, 1) && NeQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~e * (~d + ~e * ~x) ^ (~m - 1) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (2 * ~c) - ((~b * ~e - 2 * ~c * ~d) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) - (((~e) ^ 2 * (~m - 1)) / (2 * ~c)) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ(~m, 1) && NeQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (LtQ(~m, -1) && EqQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (LtQ(~m, -1) && EqQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (((~d + ~e * ~x) ^ (~m + 1) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - ((~b * ~e - 2 * ~c * ~d) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) - ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (LtQ(~m, -1) && NeQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (((~d + ~e * ~x) ^ (~m + 1) * cosh(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - ((~b * ~e - 2 * ~c * ~d) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x)) - ((2 * ~c) / ((~e) ^ 2 * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (LtQ(~m, -1) && NeQ(~b * ~e - 2 * ~c * ~d, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Unintegrable((~d + ~e * ~x) ^ ~m * sinh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Unintegrable((~d + ~e * ~x) ^ ~m * cosh(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sinh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce((~d + ~e * ~x) ^ ~m, sinh(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * cosh(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~n, ~x) => Antiderivative(ExpandTrigReduce((~d + ~e * ~x) ^ ~m, cosh(~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && IGtQ(~n, 1)
    @apply_utils Antiderivative((~u) ^ ~(m') * sinh(~v) ^ ~(n'), ~x) => Antiderivative(ExpandToSum(~u, ~x) ^ ~m * sinh(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- FreeQ(~m, ~x) && (IGtQ(~n, 0) && (LinearQ(~u, ~x) && (QuadraticQ(~v, ~x) && Not(LinearMatchQ(~u, ~x) && QuadraticMatchQ(~v, ~x)))))
    @apply_utils Antiderivative((~u) ^ ~(m') * cosh(~v) ^ ~(n'), ~x) => Antiderivative(ExpandToSum(~u, ~x) ^ ~m * cosh(ExpandToSum(~v, ~x)) ^ ~n, ~x) <-- FreeQ(~m, ~x) && (IGtQ(~n, 0) && (LinearQ(~u, ~x) && (QuadraticQ(~v, ~x) && Not(LinearMatchQ(~u, ~x) && QuadraticMatchQ(~v, ~x)))))
end
