int_rules_6_1_11 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 6.1.11*(e*x)^m*(a+b*x^n)^p*sinh =#
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~(p') * sinh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(sinh(~c + ~d * ~x), (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~(p') * cosh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(cosh(~c + ~d * ~x), (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => (((~x) ^ (-(~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x)) / (~b * ~n * (~p + 1)) - ((-(~n) + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ -(~n) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x), ~x)) - (~d / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ (-(~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (IntegerQ(~p) && (IGtQ(~n, 0) && (LtQ(~p, -1) && GtQ(~n, 2))))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => (((~x) ^ (-(~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x)) / (~b * ~n * (~p + 1)) - ((-(~n) + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ -(~n) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x), ~x)) - (~d / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ (-(~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (IntegerQ(~p) && (IGtQ(~n, 0) && (LtQ(~p, -1) && GtQ(~n, 2))))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(sinh(~c + ~d * ~x), (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, 0) && (IGtQ(~n, 0) && (EqQ(~n, 2) || EqQ(~p, -1))))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(cosh(~c + ~d * ~x), (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, 0) && (IGtQ(~n, 0) && (EqQ(~n, 2) || EqQ(~p, -1))))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => Antiderivative((~x) ^ (~n * ~p) * (~b + ~a * (~x) ^ -(~n)) ^ ~p * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, 0) && ILtQ(~n, 0))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => Antiderivative((~x) ^ (~n * ~p) * (~b + ~a * (~x) ^ -(~n)) ^ ~p * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, 0) && ILtQ(~n, 0))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => Unintegrable((~a + ~b * (~x) ^ ~n) ^ ~p * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n, ~p], ~x)
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => Unintegrable((~a + ~b * (~x) ^ ~n) ^ ~p * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~(p') * sinh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(sinh(~c + ~d * ~x), (~e * ~x) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~(p') * cosh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(cosh(~c + ~d * ~x), (~e * ~x) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => ((~e) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x)) / (~b * ~n * (~p + 1)) - ((~d * (~e) ^ ~m) / (~b * ~n * (~p + 1))) * Antiderivative((~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && (IntegerQ(~p) && (EqQ((~m - ~n) + 1, 0) && (LtQ(~p, -1) && (IntegerQ(~n) || GtQ(~e, 0)))))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => ((~e) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x)) / (~b * ~n * (~p + 1)) - ((~d * (~e) ^ ~m) / (~b * ~n * (~p + 1))) * Antiderivative((~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n], ~x) && (IntegerQ(~p) && (EqQ((~m - ~n) + 1, 0) && (LtQ(~p, -1) && (IntegerQ(~n) || GtQ(~e, 0)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => (((~x) ^ ((~m - ~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x)) / (~b * ~n * (~p + 1)) - (((~m - ~n) + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ (~m - ~n) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x), ~x)) - (~d / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ ((~m - ~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, -1) && (IGtQ(~n, 0) && (RationalQ(~m) && (GtQ((~m - ~n) + 1, 0) || GtQ(~n, 2)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => (((~x) ^ ((~m - ~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x)) / (~b * ~n * (~p + 1)) - (((~m - ~n) + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ (~m - ~n) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * cosh(~c + ~d * ~x), ~x)) - (~d / (~b * ~n * (~p + 1))) * Antiderivative((~x) ^ ((~m - ~n) + 1) * (~a + ~b * (~x) ^ ~n) ^ (~p + 1) * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, -1) && (IGtQ(~n, 0) && (RationalQ(~m) && (GtQ((~m - ~n) + 1, 0) || GtQ(~n, 2)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(sinh(~c + ~d * ~x), (~x) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, 0) && (IntegerQ(~m) && (IGtQ(~n, 0) && (EqQ(~n, 2) || EqQ(~p, -1)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => Antiderivative(ExpandIntegrand(cosh(~c + ~d * ~x), (~x) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && (ILtQ(~p, 0) && (IntegerQ(~m) && (IGtQ(~n, 0) && (EqQ(~n, 2) || EqQ(~p, -1)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * sinh(~(c') + ~(d') * ~x), ~x) => Antiderivative((~x) ^ (~m + ~n * ~p) * (~b + ~a * (~x) ^ -(~n)) ^ ~p * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (ILtQ(~p, 0) && ILtQ(~n, 0))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~p * cosh(~(c') + ~(d') * ~x), ~x) => Antiderivative((~x) ^ (~m + ~n * ~p) * (~b + ~a * (~x) ^ -(~n)) ^ ~p * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m], ~x) && (ILtQ(~p, 0) && ILtQ(~n, 0))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~(p') * sinh(~(c') + ~(d') * ~x), ~x) => Unintegrable((~e * ~x) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ ~p * sinh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~a + ~(b') * (~x) ^ ~n) ^ ~(p') * cosh(~(c') + ~(d') * ~x), ~x) => Unintegrable((~e * ~x) ^ ~m * (~a + ~b * (~x) ^ ~n) ^ ~p * cosh(~c + ~d * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~n, ~p], ~x)
end
