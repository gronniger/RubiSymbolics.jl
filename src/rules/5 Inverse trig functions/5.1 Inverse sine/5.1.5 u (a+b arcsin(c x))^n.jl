int_rules_5_1_5 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 5.1.5*u*(a+b*arcsin(c*x))^n =#
    @apply_utils Antiderivative((~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n') / (~d + ~(e') * ~x), ~x) => Subst(Antiderivative(((~a + ~b * ~x) ^ ~n * cos(~x)) / (~c * ~d + ~e * sin(~x)), ~x), ~x, asin(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n') / (~d + ~(e') * ~x), ~x) => -(Subst(Antiderivative(((~a + ~b * ~x) ^ ~n * sin(~x)) / (~c * ~d + ~e * cos(~x)), ~x), ~x, acos(~c * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && IGtQ(~n, 0)
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * asin(~c * ~x)) ^ ~n) / (~e * (~m + 1)) - ((~b * ~c * ~n) / (~e * (~m + 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * asin(~c * ~x)) ^ (~n - 1)) / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IGtQ(~n, 0) && NeQ(~m, -1))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * acos(~c * ~x)) ^ ~n) / (~e * (~m + 1)) + ((~b * ~c * ~n) / (~e * (~m + 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * acos(~c * ~x)) ^ (~n - 1)) / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (IGtQ(~n, 0) && NeQ(~m, -1))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~m, 0) && LtQ(~n, -1))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~m, 0) && LtQ(~n, -1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n, ~x) => (1 / (~c) ^ (~m + 1)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * cos(~x) * (~c * ~d + ~e * sin(~x)) ^ ~m, ~x), ~x, asin(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n, ~x) => (-1 / (~c) ^ (~m + 1)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * sin(~x) * (~c * ~d + ~e * cos(~x)) ^ ~m, ~x), ~x, acos(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && IGtQ(~m, 0)
    @apply_utils Antiderivative(~Px * (~(a') + ~(b') * asin(~(c') * ~x)), ~x) => With([u = IntHide(ExpandExpression(~Px, ~x), ~x)], Dist(~a + ~b * asin(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c], ~x) && PolynomialQ(~Px, ~x)
    @apply_utils Antiderivative(~Px * (~(a') + ~(b') * acos(~(c') * ~x)), ~x) => With([u = IntHide(ExpandExpression(~Px, ~x), ~x)], Dist(~a + ~b * acos(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c], ~x) && PolynomialQ(~Px, ~x)
    #= Antiderivative((~Px)*((~a')+(~b')*asin((~c')*(~x)))^(~n'),~x) :=  With([u=IntHide(Px,x)], Dist((a+b*asin(c*x))^n,u,x) -  b*c*n*Antiderivative(SimplifyIntegrand(u*(a+b*asin(c*x))^(n-1)/sqrt(1-c^2*x^2), x),x)) <-- FreeQ([a,b,c],x) && PolynomialQ(Px,x) && IGtQ(n,0) =#
    #= Antiderivative((~Px)*((~a')+(~b')*acos((~c')*(~x)))^(~n'),~x) :=  With([u=IntHide(Px,x)], Dist((a+b*acos(c*x))^n,u,x) +  b*c*n*Antiderivative(SimplifyIntegrand(u*(a+b*acos(c*x))^(n-1)/sqrt(1-c^2*x^2), x),x)) <-- FreeQ([a,b,c],x) && PolynomialQ(Px,x) && IGtQ(n,0) =#
    @apply_utils Antiderivative(~Px * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand(~Px * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x) && PolynomialQ(~Px, ~x)
    @apply_utils Antiderivative(~Px * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand(~Px * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x) && PolynomialQ(~Px, ~x)
    @apply_utils Antiderivative(~Px * (~(d') + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)), ~x) => With([u = IntHide(~Px * (~d + ~e * ~x) ^ ~m, ~x)], Dist(~a + ~b * asin(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && PolynomialQ(~Px, ~x)
    @apply_utils Antiderivative(~Px * (~(d') + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)), ~x) => With([u = IntHide(~Px * (~d + ~e * ~x) ^ ~m, ~x)], Dist(~a + ~b * acos(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(SimplifyIntegrand(u / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && PolynomialQ(~Px, ~x)
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(p') * (~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n, ~x) => With([u = IntHide((~f + ~g * ~x) ^ ~p * (~d + ~e * ~x) ^ ~m, ~x)], Dist((~a + ~b * asin(~c * ~x)) ^ ~n, u, ~x) - ~b * ~c * ~n * Antiderivative(SimplifyIntegrand((u * (~a + ~b * asin(~c * ~x)) ^ (~n - 1)) / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IGtQ(~n, 0) && (IGtQ(~p, 0) && (ILtQ(~m, 0) && LtQ(~m + ~p + 1, 0))))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(p') * (~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n, ~x) => With([u = IntHide((~f + ~g * ~x) ^ ~p * (~d + ~e * ~x) ^ ~m, ~x)], Dist((~a + ~b * acos(~c * ~x)) ^ ~n, u, ~x) + ~b * ~c * ~n * Antiderivative(SimplifyIntegrand((u * (~a + ~b * acos(~c * ~x)) ^ (~n - 1)) / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IGtQ(~n, 0) && (IGtQ(~p, 0) && (ILtQ(~m, 0) && LtQ(~m + ~p + 1, 0))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x + ~(h') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n) / (~d + ~(e') * ~x) ^ 2, ~x) => With([u = IntHide((~f + ~g * ~x + ~h * (~x) ^ 2) ^ ~p / (~d + ~e * ~x) ^ 2, ~x)], Dist((~a + ~b * asin(~c * ~x)) ^ ~n, u, ~x) - ~b * ~c * ~n * Antiderivative(SimplifyIntegrand((u * (~a + ~b * asin(~c * ~x)) ^ (~n - 1)) / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h], ~x) && (IGtQ(~n, 0) && (IGtQ(~p, 0) && EqQ(~e * ~g - 2 * ~d * ~h, 0)))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x + ~(h') * (~x) ^ 2) ^ ~(p') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n) / (~d + ~(e') * ~x) ^ 2, ~x) => With([u = IntHide((~f + ~g * ~x + ~h * (~x) ^ 2) ^ ~p / (~d + ~e * ~x) ^ 2, ~x)], Dist((~a + ~b * acos(~c * ~x)) ^ ~n, u, ~x) + ~b * ~c * ~n * Antiderivative(SimplifyIntegrand((u * (~a + ~b * acos(~c * ~x)) ^ (~n - 1)) / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h], ~x) && (IGtQ(~n, 0) && (IGtQ(~p, 0) && EqQ(~e * ~g - 2 * ~d * ~h, 0)))
    @apply_utils Antiderivative(~Px * (~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand(~Px * (~d + ~e * ~x) ^ ~m * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (PolynomialQ(~Px, ~x) && (IGtQ(~n, 0) && IntegerQ(~m)))
    @apply_utils Antiderivative(~Px * (~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n, ~x) => Antiderivative(ExpandIntegrand(~Px * (~d + ~e * ~x) ^ ~m * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (PolynomialQ(~Px, ~x) && (IGtQ(~n, 0) && IntegerQ(~m)))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)), ~x) => With([u = IntHide((~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * asin(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(Dist(1 / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), u, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~m, 0) && (ILtQ(~p + 1 / 2, 0) && (GtQ(~d, 0) && (LtQ(~m, -2 * ~p - 1) || GtQ(~m, 3))))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)), ~x) => With([u = IntHide((~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~p, ~x)], Dist(~a + ~b * acos(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(Dist(1 / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), u, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~m, 0) && (ILtQ(~p + 1 / 2, 0) && (GtQ(~d, 0) && (LtQ(~m, -2 * ~p - 1) || GtQ(~m, 3))))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asin(~c * ~x)) ^ ~n, (~f + ~g * ~x) ^ ~m, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~m, 0) && (IntegerQ(~p + 1 / 2) && (GtQ(~d, 0) && (IGtQ(~n, 0) && (~m == 1 || (~p > 0 || (~n == 1 && ~p > -1 || ~m == 2 && ~p < -2))))))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acos(~c * ~x)) ^ ~n, (~f + ~g * ~x) ^ ~m, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~m, 0) && (IntegerQ(~p + 1 / 2) && (GtQ(~d, 0) && (IGtQ(~n, 0) && (~m == 1 || (~p > 0 || (~n == 1 && ~p > -1 || ~m == 2 && ~p < -2))))))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => ((~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) * (~a + ~b * asin(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) - (1 / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative((~d * ~g * ~m + 2 * ~e * ~f * ~x + ~e * ~g * (~m + 2) * (~x) ^ 2) * (~f + ~g * ~x) ^ (~m - 1) * (~a + ~b * asin(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (ILtQ(~m, 0) && (GtQ(~d, 0) && IGtQ(~n, 0))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => (-((~f + ~g * ~x) ^ ~m) * (~d + ~e * (~x) ^ 2) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) + (1 / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative((~d * ~g * ~m + 2 * ~e * ~f * ~x + ~e * ~g * (~m + 2) * (~x) ^ 2) * (~f + ~g * ~x) ^ (~m - 1) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (ILtQ(~m, 0) && (GtQ(~d, 0) && IGtQ(~n, 0))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand(sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * asin(~c * ~x)) ^ ~n, (~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p - 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (IGtQ(~p + 1 / 2, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand(sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acos(~c * ~x)) ^ ~n, (~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p - 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (IGtQ(~p + 1 / 2, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => ((~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * asin(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) - (1 / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative(ExpandIntegrand((~f + ~g * ~x) ^ (~m - 1) * (~a + ~b * asin(~c * ~x)) ^ (~n + 1), (~d * ~g * ~m + ~e * ~f * (2 * ~p + 1) * ~x + ~e * ~g * (~m + 2 * ~p + 1) * (~x) ^ 2) * (~d + ~e * (~x) ^ 2) ^ (~p - 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (ILtQ(~m, 0) && (IGtQ(~p - 1 / 2, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => (-((~f + ~g * ~x) ^ ~m) * (~d + ~e * (~x) ^ 2) ^ (~p + 1 / 2) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) + (1 / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative(ExpandIntegrand((~f + ~g * ~x) ^ (~m - 1) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1), (~d * ~g * ~m + ~e * ~f * (2 * ~p + 1) * ~x + ~e * ~g * (~m + 2 * ~p + 1) * (~x) ^ 2) * (~d + ~e * (~x) ^ 2) ^ (~p - 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (ILtQ(~m, 0) && (IGtQ(~p - 1 / 2, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))))
    @apply_utils Antiderivative(((~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~n) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f + ~g * ~x) ^ ~m * (~a + ~b * asin(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) - ((~g * ~m) / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative((~f + ~g * ~x) ^ (~m - 1) * (~a + ~b * asin(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~m, 0) && (GtQ(~d, 0) && LtQ(~n, -1))))
    @apply_utils Antiderivative(((~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~n) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (-((~f + ~g * ~x) ^ ~m) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) + ((~g * ~m) / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative((~f + ~g * ~x) ^ (~m - 1) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~m, 0) && (GtQ(~d, 0) && LtQ(~n, -1))))
    @apply_utils Antiderivative(((~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (1 / ((~c) ^ (~m + 1) * sqrt(~d))) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * (~c * ~f + ~g * sin(~x)) ^ ~m, ~x), ~x, asin(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (GtQ(~d, 0) && (GtQ(~m, 0) || IGtQ(~n, 0)))))
    @apply_utils Antiderivative(((~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (-1 / ((~c) ^ (~m + 1) * sqrt(~d))) * Subst(Antiderivative((~a + ~b * ~x) ^ ~n * (~c * ~f + ~g * cos(~x)) ^ ~m, ~x), ~x, acos(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (GtQ(~d, 0) && (GtQ(~m, 0) || IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * asin(~c * ~x)) ^ ~n / sqrt(~d + ~e * (~x) ^ 2), (~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (ILtQ(~p + 1 / 2, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acos(~c * ~x)) ^ ~n / sqrt(~d + ~e * (~x) ^ 2), (~f + ~g * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~p + 1 / 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (ILtQ(~p + 1 / 2, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f + ~g * ~x) ^ ~m * (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (IntegerQ(~p - 1 / 2) && Not(GtQ(~d, 0)))))
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative((~f + ~g * ~x) ^ ~m * (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~m) && (IntegerQ(~p - 1 / 2) && Not(GtQ(~d, 0)))))
    @apply_utils Antiderivative((log(~(h') * (~(f') + ~(g') * ~x) ^ ~(m')) * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (log(~h * (~f + ~g * ~x) ^ ~m) * (~a + ~b * asin(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) - ((~g * ~m) / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative((~a + ~b * asin(~c * ~x)) ^ (~n + 1) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))
    @apply_utils Antiderivative((log(~(h') * (~(f') + ~(g') * ~x) ^ ~(m')) * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (-(log(~h * (~f + ~g * ~x) ^ ~m)) * (~a + ~b * acos(~c * ~x)) ^ (~n + 1)) / (~b * ~c * sqrt(~d) * (~n + 1)) + ((~g * ~m) / (~b * ~c * sqrt(~d) * (~n + 1))) * Antiderivative((~a + ~b * acos(~c * ~x)) ^ (~n + 1) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (GtQ(~d, 0) && IGtQ(~n, 0)))
    @apply_utils Antiderivative(log(~(h') * (~(f') + ~(g') * ~x) ^ ~(m')) * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(log(~h * (~f + ~g * ~x) ^ ~m) * (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~p - 1 / 2) && Not(GtQ(~d, 0))))
    @apply_utils Antiderivative(log(~(h') * (~(f') + ~(g') * ~x) ^ ~(m')) * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Simp((~d + ~e * (~x) ^ 2) ^ ~p / (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p) * Antiderivative(log(~h * (~f + ~g * ~x) ^ ~m) * (1 - (~c) ^ 2 * (~x) ^ 2) ^ ~p * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n], ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IntegerQ(~p - 1 / 2) && Not(GtQ(~d, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~m * (~(a') + ~(b') * asin(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~m, ~x)], Dist(~a + ~b * asin(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(Dist(1 / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), u, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && ILtQ(~m + 1 / 2, 0)
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~m * (~(a') + ~(b') * acos(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~m, ~x)], Dist(~a + ~b * acos(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(Dist(1 / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), u, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && ILtQ(~m + 1 / 2, 0)
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~m * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && IntegerQ(~m)
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~m * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && IntegerQ(~m)
    @apply_utils Antiderivative(~u * (~(a') + ~(b') * asin(~(c') * ~x)), ~x) => With([v = IntHide(~u, ~x)], Dist(~a + ~b * asin(~c * ~x), v, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(v / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x) <-- InverseFunctionFreeQ(v, ~x)) <-- FreeQ([~a, ~b, ~c], ~x)
    @apply_utils Antiderivative(~u * (~(a') + ~(b') * acos(~(c') * ~x)), ~x) => With([v = IntHide(~u, ~x)], Dist(~a + ~b * acos(~c * ~x), v, ~x) + ~b * ~c * Antiderivative(SimplifyIntegrand(v / sqrt(1 - (~c) ^ 2 * (~x) ^ 2), ~x), ~x) <-- InverseFunctionFreeQ(v, ~x)) <-- FreeQ([~a, ~b, ~c], ~x)
    @apply_utils Antiderivative(~Px * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => With([u = ExpandIntegrand(~Px * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (PolynomialQ(~Px, ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IntegerQ(~p - 1 / 2)))
    @apply_utils Antiderivative(~Px * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => With([u = ExpandIntegrand(~Px * (~d + ~e * (~x) ^ 2) ^ ~p * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (PolynomialQ(~Px, ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IntegerQ(~p - 1 / 2)))
    @apply_utils Antiderivative(~(Px') * (~f + ~(g') * (~d + ~(e') * (~x) ^ 2) ^ ~p) ^ ~(m') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => With([u = ExpandIntegrand(~Px * (~f + ~g * (~d + ~e * (~x) ^ 2) ^ ~p) ^ ~m * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (PolynomialQ(~Px, ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~p + 1 / 2, 0) && IntegersQ(~m, ~n))))
    @apply_utils Antiderivative(~(Px') * (~f + ~(g') * (~d + ~(e') * (~x) ^ 2) ^ ~p) ^ ~(m') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => With([u = ExpandIntegrand(~Px * (~f + ~g * (~d + ~e * (~x) ^ 2) ^ ~p) ^ ~m * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (PolynomialQ(~Px, ~x) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && (IGtQ(~p + 1 / 2, 0) && IntegersQ(~m, ~n))))
    @apply_utils Antiderivative(~RFx * asin(~(c') * ~x) ^ ~(n'), ~x) => With([u = ExpandIntegrand(asin(~c * ~x) ^ ~n, ~RFx, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ(~c, ~x) && (RationalFunctionQ(~RFx, ~x) && IGtQ(~n, 0))
    @apply_utils Antiderivative(~RFx * acos(~(c') * ~x) ^ ~(n'), ~x) => With([u = ExpandIntegrand(acos(~c * ~x) ^ ~n, ~RFx, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ(~c, ~x) && (RationalFunctionQ(~RFx, ~x) && IGtQ(~n, 0))
    @apply_utils Antiderivative(~RFx * (~a + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand(~RFx * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && (RationalFunctionQ(~RFx, ~x) && IGtQ(~n, 0))
    @apply_utils Antiderivative(~RFx * (~a + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand(~RFx * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c], ~x) && (RationalFunctionQ(~RFx, ~x) && IGtQ(~n, 0))
    @apply_utils Antiderivative(~RFx * (~d + ~(e') * (~x) ^ 2) ^ ~p * asin(~(c') * ~x) ^ ~(n'), ~x) => With([u = ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~p * asin(~c * ~x) ^ ~n, ~RFx, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~c, ~d, ~e], ~x) && (RationalFunctionQ(~RFx, ~x) && (IGtQ(~n, 0) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IntegerQ(~p - 1 / 2))))
    @apply_utils Antiderivative(~RFx * (~d + ~(e') * (~x) ^ 2) ^ ~p * acos(~(c') * ~x) ^ ~(n'), ~x) => With([u = ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~p * acos(~c * ~x) ^ ~n, ~RFx, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~c, ~d, ~e], ~x) && (RationalFunctionQ(~RFx, ~x) && (IGtQ(~n, 0) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IntegerQ(~p - 1 / 2))))
    @apply_utils Antiderivative(~RFx * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~a + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~p, ~RFx * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (RationalFunctionQ(~RFx, ~x) && (IGtQ(~n, 0) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IntegerQ(~p - 1 / 2))))
    @apply_utils Antiderivative(~RFx * (~d + ~(e') * (~x) ^ 2) ^ ~p * (~a + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~p, ~RFx * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (RationalFunctionQ(~RFx, ~x) && (IGtQ(~n, 0) && (EqQ((~c) ^ 2 * ~d + ~e, 0) && IntegerQ(~p - 1 / 2))))
    @apply_utils Antiderivative(~(u') * (~(a') + ~(b') * asin(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable(~u * (~a + ~b * asin(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
    @apply_utils Antiderivative(~(u') * (~(a') + ~(b') * acos(~(c') * ~x)) ^ ~(n'), ~x) => Unintegrable(~u * (~a + ~b * acos(~c * ~x)) ^ ~n, ~x) <-- FreeQ([~a, ~b, ~c, ~n], ~x)
end
