int_rules_5_3_5 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 5.3.5*u*(a+b*arctan(c+d*x))^p =#
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative((~a + ~b * atan(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative((~a + ~b * acot(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~p, ~x) => Unintegrable((~a + ~b * atan(~c + ~d * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~p], ~x) && Not(IGtQ(~p, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~p, ~x) => Unintegrable((~a + ~b * acot(~c + ~d * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~p], ~x) && Not(IGtQ(~p, 0))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative(((~f * ~x) / ~d) ^ ~m * (~a + ~b * atan(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~d * ~e - ~c * ~f, 0) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative(((~f * ~x) / ~d) ^ ~m * (~a + ~b * acot(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~d * ~e - ~c * ~f, 0) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~(p'), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * (~a + ~b * atan(~c + ~d * ~x)) ^ ~p) / (~f * (~m + 1)) - ((~b * ~d * ~p) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * (~a + ~b * atan(~c + ~d * ~x)) ^ (~p - 1)) / (1 + (~c + ~d * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && ILtQ(~m, -1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~(p'), ~x) => ((~e + ~f * ~x) ^ (~m + 1) * (~a + ~b * acot(~c + ~d * ~x)) ^ ~p) / (~f * (~m + 1)) + ((~b * ~d * ~p) / (~f * (~m + 1))) * Antiderivative(((~e + ~f * ~x) ^ (~m + 1) * (~a + ~b * acot(~c + ~d * ~x)) ^ (~p - 1)) / (1 + (~c + ~d * ~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && ILtQ(~m, -1))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative(((~d * ~e - ~c * ~f) / ~d + (~f * ~x) / ~d) ^ ~m * (~a + ~b * atan(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative(((~d * ~e - ~c * ~f) / ~d + (~f * ~x) / ~d) ^ ~m * (~a + ~b * acot(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~p, ~x) => Unintegrable((~e + ~f * ~x) ^ ~m * (~a + ~b * atan(~c + ~d * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && Not(IGtQ(~p, 0))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~p, ~x) => Unintegrable((~e + ~f * ~x) ^ ~m * (~a + ~b * acot(~c + ~d * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && Not(IGtQ(~p, 0))
    @apply_utils Antiderivative(atan(~a + ~(b') * ~x) / (~c + ~(d') * (~x) ^ ~(n')), ~x) => (im / 2) * Antiderivative(log((1 - im * ~a) - im * ~b * ~x) / (~c + ~d * (~x) ^ ~n), ~x) - (im / 2) * Antiderivative(log(1 + im * ~a + im * ~b * ~x) / (~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && RationalQ(~n)
    @apply_utils Antiderivative(acot(~a + ~(b') * ~x) / (~c + ~(d') * (~x) ^ ~(n')), ~x) => (im / 2) * Antiderivative(log((-im + ~a + ~b * ~x) / (~a + ~b * ~x)) / (~c + ~d * (~x) ^ ~n), ~x) - (im / 2) * Antiderivative(log((im + ~a + ~b * ~x) / (~a + ~b * ~x)) / (~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && RationalQ(~n)
    @apply_utils Antiderivative(atan(~a + ~(b') * ~x) / (~c + ~(d') * (~x) ^ ~n), ~x) => Unintegrable(atan(~a + ~b * ~x) / (~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && Not(RationalQ(~n))
    @apply_utils Antiderivative(acot(~a + ~(b') * ~x) / (~c + ~(d') * (~x) ^ ~n), ~x) => Unintegrable(acot(~a + ~b * ~x) / (~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~n], ~x) && Not(RationalQ(~n))
    @apply_utils Antiderivative((~(A') + ~(B') * ~x + ~(C') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative((~C / (~d) ^ 2 + (~C / (~d) ^ 2) * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~A, ~B, ~C, ~p, ~q], ~x) && (EqQ(~B * (1 + (~c) ^ 2) - 2 * ~A * ~c * ~d, 0) && EqQ(2 * ~c * ~C - ~B * ~d, 0))
    @apply_utils Antiderivative((~(A') + ~(B') * ~x + ~(C') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative((~C / (~d) ^ 2 + (~C / (~d) ^ 2) * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~A, ~B, ~C, ~p, ~q], ~x) && (EqQ(~B * (1 + (~c) ^ 2) - 2 * ~A * ~c * ~d, 0) && EqQ(2 * ~c * ~C - ~B * ~d, 0))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(A') + ~(B') * ~x + ~(C') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative(((~d * ~e - ~c * ~f) / ~d + (~f * ~x) / ~d) ^ ~m * (~C / (~d) ^ 2 + (~C / (~d) ^ 2) * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~p, ~q], ~x) && (EqQ(~B * (1 + (~c) ^ 2) - 2 * ~A * ~c * ~d, 0) && EqQ(2 * ~c * ~C - ~B * ~d, 0))
    @apply_utils Antiderivative((~(e') + ~(f') * ~x) ^ ~(m') * (~(A') + ~(B') * ~x + ~(C') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~c + ~(d') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Subst(Antiderivative(((~d * ~e - ~c * ~f) / ~d + (~f * ~x) / ~d) ^ ~m * (~C / (~d) ^ 2 + (~C / (~d) ^ 2) * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~x)) ^ ~p, ~x), ~x, ~c + ~d * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~p, ~q], ~x) && (EqQ(~B * (1 + (~c) ^ 2) - 2 * ~A * ~c * ~d, 0) && EqQ(2 * ~c * ~C - ~B * ~d, 0))
end
