int_rules_5_3_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 5.3.4*u*(a+b*arctan(c*x))^p =#
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * ~x), ~x) => (~f / ~e) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) - ((~d * ~f) / ~e) * Antiderivative(((~f * ~x) ^ (~m - 1) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && GtQ(~m, 0)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * ~x), ~x) => (~f / ~e) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) - ((~d * ~f) / ~e) * Antiderivative(((~f * ~x) ^ (~m - 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && GtQ(~m, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / (~x * (~d + ~(e') * ~x)), ~x) => ((~a + ~b * atan(~c * ~x)) ^ ~p * log(2 - 2 / (1 + (~e * ~x) / ~d))) / ~d - ((~b * ~c * ~p) / ~d) * Antiderivative(((~a + ~b * atan(~c * ~x)) ^ (~p - 1) * log(2 - 2 / (1 + (~e * ~x) / ~d))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / (~x * (~d + ~(e') * ~x)), ~x) => ((~a + ~b * acot(~c * ~x)) ^ ~p * log(2 - 2 / (1 + (~e * ~x) / ~d))) / ~d + ((~b * ~c * ~p) / ~d) * Antiderivative(((~a + ~b * acot(~c * ~x)) ^ (~p - 1) * log(2 - 2 / (1 + (~e * ~x) / ~d))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * ~x), ~x) => (1 / ~d) * Antiderivative((~f * ~x) ^ ~m * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) - (~e / (~d * ~f)) * Antiderivative(((~f * ~x) ^ (~m + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * ~x), ~x) => (1 / ~d) * Antiderivative((~f * ~x) ^ ~m * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) - (~e / (~d * ~f)) * Antiderivative(((~f * ~x) ^ (~m + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * ~x) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * ~x) ^ ~q, ~x)], Dist(~a + ~b * atan(~c * ~x), u) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~q], ~x) && (NeQ(~q, -1) && (IntegerQ(2 * ~m) && (IGtQ(~m, 0) && IGtQ(~q, 0) || ILtQ(~m + ~q + 1, 0) && LtQ(~m * ~q, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * ~x) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * ~x) ^ ~q, ~x)], Dist(~a + ~b * acot(~c * ~x), u) + ~b * ~c * Antiderivative(SimplifyIntegrand(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~q], ~x) && (NeQ(~q, -1) && (IntegerQ(2 * ~m) && (IGtQ(~m, 0) && IGtQ(~q, 0) || ILtQ(~m + ~q + 1, 0) && LtQ(~m * ~q, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * ~x) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p, ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * ~x) ^ ~q, ~x)], Dist((~a + ~b * atan(~c * ~x)) ^ ~p, u) - ~b * ~c * ~p * Antiderivative(ExpandIntegrand((~a + ~b * atan(~c * ~x)) ^ (~p - 1), u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~q], ~x) && (IGtQ(~p, 1) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && (IntegersQ(~m, ~q) && (NeQ(~m, -1) && (NeQ(~q, -1) && (ILtQ(~m + ~q + 1, 0) && LtQ(~m * ~q, 0)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * ~x) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p, ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * ~x) ^ ~q, ~x)], Dist((~a + ~b * acot(~c * ~x)) ^ ~p, u) + ~b * ~c * ~p * Antiderivative(ExpandIntegrand((~a + ~b * acot(~c * ~x)) ^ (~p - 1), u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~q], ~x) && (IGtQ(~p, 1) && (EqQ((~c) ^ 2 * (~d) ^ 2 + (~e) ^ 2, 0) && (IntegersQ(~m, ~q) && (NeQ(~m, -1) && (NeQ(~q, -1) && (ILtQ(~m + ~q + 1, 0) && LtQ(~m * ~q, 0)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * ~x) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * atan(~c * ~x)) ^ ~p, (~f * ~x) ^ ~m * (~d + ~e * ~x) ^ ~q, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (IGtQ(~p, 0) && (IntegerQ(~q) && (GtQ(~q, 0) || (NeQ(~a, 0) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * ~x) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acot(~c * ~x)) ^ ~p, (~f * ~x) ^ ~m * (~d + ~e * ~x) ^ ~q, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (IGtQ(~p, 0) && (IntegerQ(~q) && (GtQ(~q, 0) || (NeQ(~a, 0) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => (-(~b) * (~d + ~e * (~x) ^ 2) ^ ~q) / (2 * ~c * ~q * (2 * ~q + 1)) + (~x * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x))) / (2 * ~q + 1) + ((2 * ~d * ~q) / (2 * ~q + 1)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * atan(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~q, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => (~b * (~d + ~e * (~x) ^ 2) ^ ~q) / (2 * ~c * ~q * (2 * ~q + 1)) + (~x * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x))) / (2 * ~q + 1) + ((2 * ~d * ~q) / (2 * ~q + 1)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * acot(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~q, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p, ~x) => (-(~b) * ~p * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (2 * ~c * ~q * (2 * ~q + 1)) + (~x * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ ~p) / (2 * ~q + 1) + ((2 * ~d * ~q) / (2 * ~q + 1)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) + (((~b) ^ 2 * ~d * ~p * (~p - 1)) / (2 * ~q * (2 * ~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * atan(~c * ~x)) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~q, 0) && GtQ(~p, 1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p, ~x) => (~b * ~p * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (2 * ~c * ~q * (2 * ~q + 1)) + (~x * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ ~p) / (2 * ~q + 1) + ((2 * ~d * ~q) / (2 * ~q + 1)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) + (((~b) ^ 2 * ~d * ~p * (~p - 1)) / (2 * ~q * (2 * ~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * acot(~c * ~x)) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~q, 0) && GtQ(~p, 1)))
    #= Antiderivative(((~a')+(~b')*atan((~c')*(~x)))^(~p')/((~d)+(~e')*(~x)^2),~x) :=  1/(c*d)*Subst(Antiderivative((a+b*x)^p,x),x,atan(c*x)) <--  FreeQ([a,b,c,d,e,p],x) && EqQ(e,c^2*d) =#
    #= Antiderivative(((~a')+(~b')*acot((~c')*(~x)))^(~p')/((~d)+(~e')*(~x)^2),~x) :=  -1/(c*d)*Subst(Antiderivative((a+b*x)^p,x),x,acot(c*x)) <--  FreeQ([a,b,c,d,e,p],x) && EqQ(e,c^2*d) =#
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * atan(~(c') * ~x))), ~x) => log(RemoveContent(~a + ~b * atan(~c * ~x), ~x)) / (~b * ~c * ~d) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~e, (~c) ^ 2 * ~d)
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acot(~(c') * ~x))), ~x) => -(log(RemoveContent(~a + ~b * acot(~c * ~x), ~x))) / (~b * ~c * ~d) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~e, (~c) ^ 2 * ~d)
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / (~d + ~(e') * (~x) ^ 2), ~x) => (~a + ~b * atan(~c * ~x)) ^ (~p + 1) / (~b * ~c * ~d * (~p + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && NeQ(~p, -1))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / (~d + ~(e') * (~x) ^ 2), ~x) => -((~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && NeQ(~p, -1))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((-2 * im * (~a + ~b * atan(~c * ~x)) * atan(sqrt(1 + im * ~c * ~x) / sqrt(1 - im * ~c * ~x))) / (~c * sqrt(~d)) + (im * ~b * PolyLog(2, (-im * sqrt(1 + im * ~c * ~x)) / sqrt(1 - im * ~c * ~x))) / (~c * sqrt(~d))) - (im * ~b * PolyLog(2, (im * sqrt(1 + im * ~c * ~x)) / sqrt(1 - im * ~c * ~x))) / (~c * sqrt(~d)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~d, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((-2 * im * (~a + ~b * acot(~c * ~x)) * atan(sqrt(1 + im * ~c * ~x) / sqrt(1 - im * ~c * ~x))) / (~c * sqrt(~d)) - (im * ~b * PolyLog(2, (-im * sqrt(1 + im * ~c * ~x)) / sqrt(1 - im * ~c * ~x))) / (~c * sqrt(~d))) + (im * ~b * PolyLog(2, (im * sqrt(1 + im * ~c * ~x)) / sqrt(1 - im * ~c * ~x))) / (~c * sqrt(~d)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~d, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~c * sqrt(~d))) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p * sec(~x), ~x), ~x, atan(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((-(~x) * sqrt(1 + 1 / ((~c) ^ 2 * (~x) ^ 2))) / sqrt(~d + ~e * (~x) ^ 2)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p * csc(~x), ~x), ~x, acot(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ ~p / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && Not(GtQ(~d, 0))))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ ~p / sqrt(1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && Not(GtQ(~d, 0))))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((~x * (~a + ~b * atan(~c * ~x)) ^ ~p) / (2 * ~d * (~d + ~e * (~x) ^ 2)) + (~a + ~b * atan(~c * ~x)) ^ (~p + 1) / (2 * ~b * ~c * (~d) ^ 2 * (~p + 1))) - ((~b * ~c * ~p) / 2) * Antiderivative((~x * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((~x * (~a + ~b * acot(~c * ~x)) ^ ~p) / (2 * ~d * (~d + ~e * (~x) ^ 2)) - (~a + ~b * acot(~c * ~x)) ^ (~p + 1) / (2 * ~b * ~c * (~d) ^ 2 * (~p + 1))) + ((~b * ~c * ~p) / 2) * Antiderivative((~x * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) / (~d + ~(e') * (~x) ^ 2) ^ (3 / 2), ~x) => ~b / (~c * ~d * sqrt(~d + ~e * (~x) ^ 2)) + (~x * (~a + ~b * atan(~c * ~x))) / (~d * sqrt(~d + ~e * (~x) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~e, (~c) ^ 2 * ~d)
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) / (~d + ~(e') * (~x) ^ 2) ^ (3 / 2), ~x) => -(~b) / (~c * ~d * sqrt(~d + ~e * (~x) ^ 2)) + (~x * (~a + ~b * acot(~c * ~x))) / (~d * sqrt(~d + ~e * (~x) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~e, (~c) ^ 2 * ~d)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => ((~b * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (4 * ~c * ~d * (~q + 1) ^ 2) - (~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x))) / (2 * ~d * (~q + 1))) + ((2 * ~q + 3) / (2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && NeQ(~q, -3 / 2)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => ((-(~b) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (4 * ~c * ~d * (~q + 1) ^ 2) - (~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x))) / (2 * ~d * (~q + 1))) + ((2 * ~q + 3) / (2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && NeQ(~q, -3 / 2)))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p / (~d + ~(e') * (~x) ^ 2) ^ (3 / 2), ~x) => ((~b * ~p * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (~c * ~d * sqrt(~d + ~e * (~x) ^ 2)) + (~x * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d * sqrt(~d + ~e * (~x) ^ 2))) - (~b) ^ 2 * ~p * (~p - 1) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ (~p - 2) / (~d + ~e * (~x) ^ 2) ^ (3 / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 1))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p / (~d + ~(e') * (~x) ^ 2) ^ (3 / 2), ~x) => ((-(~b) * ~p * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (~c * ~d * sqrt(~d + ~e * (~x) ^ 2)) + (~x * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d * sqrt(~d + ~e * (~x) ^ 2))) - (~b) ^ 2 * ~p * (~p - 1) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ (~p - 2) / (~d + ~e * (~x) ^ 2) ^ (3 / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 1))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p, ~x) => (((~b * ~p * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (4 * ~c * ~d * (~q + 1) ^ 2) - (~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (2 * ~d * (~q + 1))) + ((2 * ~q + 3) / (2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x)) - (((~b) ^ 2 * ~p * (~p - 1)) / (4 * (~q + 1) ^ 2)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && (GtQ(~p, 1) && NeQ(~q, -3 / 2))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p, ~x) => (((-(~b) * ~p * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (4 * ~c * ~d * (~q + 1) ^ 2) - (~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (2 * ~d * (~q + 1))) + ((2 * ~q + 3) / (2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x)) - (((~b) ^ 2 * ~p * (~p - 1)) / (4 * (~q + 1) ^ 2)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p - 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && (GtQ(~p, 1) && NeQ(~q, -3 / 2))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p, ~x) => ((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) - ((2 * ~c * (~q + 1)) / (~b * (~p + 1))) * Antiderivative(~x * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p, ~x) => (-((~d + ~e * (~x) ^ 2) ^ (~q + 1)) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) + ((2 * ~c * (~q + 1)) / (~b * (~p + 1))) * Antiderivative(~x * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => ((~d) ^ ~q / ~c) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p / cos(~x) ^ (2 * (~q + 1)), ~x), ~x, atan(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (ILtQ(2 * (~q + 1), 0) && (IntegerQ(~q) || GtQ(~d, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => (((~d) ^ (~q + 1 / 2) * sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (ILtQ(2 * (~q + 1), 0) && Not(IntegerQ(~q) || GtQ(~d, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => (-((~d) ^ ~q) / ~c) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p / sin(~x) ^ (2 * (~q + 1)), ~x), ~x, acot(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (ILtQ(2 * (~q + 1), 0) && IntegerQ(~q)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => ((-((~d) ^ (~q + 1 / 2)) * ~x * sqrt((1 + (~c) ^ 2 * (~x) ^ 2) / ((~c) ^ 2 * (~x) ^ 2))) / sqrt(~d + ~e * (~x) ^ 2)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p / sin(~x) ^ (2 * (~q + 1)), ~x), ~x, acot(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (ILtQ(2 * (~q + 1), 0) && Not(IntegerQ(~q))))
    @apply_utils Antiderivative(atan(~(c') * ~x) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (im / 2) * Antiderivative(log(1 - im * ~c * ~x) / (~d + ~e * (~x) ^ 2), ~x) - (im / 2) * Antiderivative(log(1 + im * ~c * ~x) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~c, ~d, ~e], ~x)
    @apply_utils Antiderivative(acot(~(c') * ~x) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (im / 2) * Antiderivative(log(1 - im / (~c * ~x)) / (~d + ~e * (~x) ^ 2), ~x) - (im / 2) * Antiderivative(log(1 + im / (~c * ~x)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~c, ~d, ~e], ~x)
    @apply_utils Antiderivative((~a + ~(b') * atan(~(c') * ~x)) / (~(d') + ~(e') * (~x) ^ 2), ~x) => ~a * Antiderivative(1 / (~d + ~e * (~x) ^ 2), ~x) + ~b * Antiderivative(atan(~c * ~x) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative((~a + ~(b') * acot(~(c') * ~x)) / (~(d') + ~(e') * (~x) ^ 2), ~x) => ~a * Antiderivative(1 / (~d + ~e * (~x) ^ 2), ~x) + ~b * Antiderivative(acot(~c * ~x) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * (~x) ^ 2) ^ ~q, ~x)], Dist(~a + ~b * atan(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~q) || ILtQ(~q + 1 / 2, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => With([u = IntHide((~d + ~e * (~x) ^ 2) ^ ~q, ~x)], Dist(~a + ~b * acot(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~q) || ILtQ(~q + 1 / 2, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * atan(~c * ~x)) ^ ~p, (~d + ~e * (~x) ^ 2) ^ ~q, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~q) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acot(~c * ~x)) ^ ~p, (~d + ~e * (~x) ^ 2) ^ ~q, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~q) && IGtQ(~p, 0))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => ((~f) ^ 2 / ~e) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) - ((~d * (~f) ^ 2) / ~e) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => ((~f) ^ 2 / ~e) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) - ((~d * (~f) ^ 2) / ~e) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / ~d) * Antiderivative((~f * ~x) ^ ~m * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) - (~e / (~d * (~f) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / ~d) * Antiderivative((~f * ~x) ^ ~m * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) - (~e / (~d * (~f) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (-im * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~e * (~p + 1)) - (1 / (~c * ~d)) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ ~p / (im - ~c * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (im * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~e * (~p + 1)) - (1 / (~c * ~d)) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ ~p / (im - ~c * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p) / (~d + ~(e') * (~x) ^ 2), ~x) => (~x * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) - (1 / (~b * ~c * ~d * (~p + 1))) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (Not(IGtQ(~p, 0)) && NeQ(~p, -1)))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p) / (~d + ~(e') * (~x) ^ 2), ~x) => (-(~x) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) + (1 / (~b * ~c * ~d * (~p + 1))) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (Not(IGtQ(~p, 0)) && NeQ(~p, -1)))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / (~x * (~d + ~(e') * (~x) ^ 2)), ~x) => (-im * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~d * (~p + 1)) + (im / ~d) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ ~p / (~x * (im + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / (~x * (~d + ~(e') * (~x) ^ 2)), ~x) => (im * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~d * (~p + 1)) + (im / ~d) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ ~p / (~x * (im + ~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p) / (~d + ~(e') * (~x) ^ 2), ~x) => ((~f * ~x) ^ ~m * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) - ((~f * ~m) / (~b * ~c * ~d * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * atan(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && LtQ(~p, -1))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p) / (~d + ~(e') * (~x) ^ 2), ~x) => (-((~f * ~x) ^ ~m) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) + ((~f * ~m) / (~b * ~c * ~d * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 1) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && LtQ(~p, -1))
    @apply_utils Antiderivative(((~x) ^ ~(m') * (~(a') + ~(b') * atan(~(c') * ~x))) / (~d + ~(e') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand(~a + ~b * atan(~c * ~x), (~x) ^ ~m / (~d + ~e * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~m) && Not(EqQ(~m, 1) && NeQ(~a, 0)))
    @apply_utils Antiderivative(((~x) ^ ~(m') * (~(a') + ~(b') * acot(~(c') * ~x))) / (~d + ~(e') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand(~a + ~b * acot(~c * ~x), (~x) ^ ~m / (~d + ~e * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IntegerQ(~m) && Not(EqQ(~m, 1) && NeQ(~a, 0)))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (2 * ~e * (~q + 1)) - ((~b * ~p) / (2 * ~c * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~p, 0) && NeQ(~q, -1)))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (2 * ~e * (~q + 1)) + ((~b * ~p) / (2 * ~c * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~p, 0) && NeQ(~q, -1)))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((~x * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1) * (~d + ~e * (~x) ^ 2)) - ((1 - (~c) ^ 2 * (~x) ^ 2) * (~a + ~b * atan(~c * ~x)) ^ (~p + 2)) / ((~b) ^ 2 * ~e * (~p + 1) * (~p + 2) * (~d + ~e * (~x) ^ 2))) - (4 / ((~b) ^ 2 * (~p + 1) * (~p + 2))) * Antiderivative((~x * (~a + ~b * atan(~c * ~x)) ^ (~p + 2)) / (~d + ~e * (~x) ^ 2) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~p, -1) && NeQ(~p, -2)))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((-(~x) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1) * (~d + ~e * (~x) ^ 2)) - ((1 - (~c) ^ 2 * (~x) ^ 2) * (~a + ~b * acot(~c * ~x)) ^ (~p + 2)) / ((~b) ^ 2 * ~e * (~p + 1) * (~p + 2) * (~d + ~e * (~x) ^ 2))) - (4 / ((~b) ^ 2 * (~p + 1) * (~p + 2))) * Antiderivative((~x * (~a + ~b * acot(~c * ~x)) ^ (~p + 2)) / (~d + ~e * (~x) ^ 2) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~p, -1) && NeQ(~p, -2)))
    @apply_utils Antiderivative((~x) ^ 2 * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => ((-(~b) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (4 * (~c) ^ 3 * ~d * (~q + 1) ^ 2) + (~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x))) / (2 * (~c) ^ 2 * ~d * (~q + 1))) - (1 / (2 * (~c) ^ 2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && NeQ(~q, -5 / 2)))
    @apply_utils Antiderivative((~x) ^ 2 * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => ((~b * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (4 * (~c) ^ 3 * ~d * (~q + 1) ^ 2) + (~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x))) / (2 * (~c) ^ 2 * ~d * (~q + 1))) - (1 / (2 * (~c) ^ 2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (LtQ(~q, -1) && NeQ(~q, -5 / 2)))
    @apply_utils Antiderivative(((~x) ^ 2 * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((~a + ~b * atan(~c * ~x)) ^ (~p + 1) / (2 * ~b * (~c) ^ 3 * (~d) ^ 2 * (~p + 1)) - (~x * (~a + ~b * atan(~c * ~x)) ^ ~p) / (2 * (~c) ^ 2 * ~d * (~d + ~e * (~x) ^ 2))) + ((~b * ~p) / (2 * ~c)) * Antiderivative((~x * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative(((~x) ^ 2 * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => (-((~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (2 * ~b * (~c) ^ 3 * (~d) ^ 2 * (~p + 1)) - (~x * (~a + ~b * acot(~c * ~x)) ^ ~p) / (2 * (~c) ^ 2 * ~d * (~d + ~e * (~x) ^ 2))) - ((~b * ~p) / (2 * ~c)) * Antiderivative((~x * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => ((~b * (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~c * ~d * (~m) ^ 2) - (~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x))) / ((~c) ^ 2 * ~d * ~m)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~d * ~m)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 2, 0) && LtQ(~q, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => ((-(~b) * (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~c * ~d * (~m) ^ 2) - (~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x))) / ((~c) ^ 2 * ~d * ~m)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~d * ~m)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 2, 0) && LtQ(~q, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p, ~x) => (((~b * ~p * (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (~c * ~d * (~m) ^ 2) - (~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p) / ((~c) ^ 2 * ~d * ~m)) - (((~b) ^ 2 * ~p * (~p - 1)) / (~m) ^ 2) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p - 2), ~x)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~d * ~m)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 2, 0) && (LtQ(~q, -1) && GtQ(~p, 1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p, ~x) => (((-(~b) * ~p * (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (~c * ~d * (~m) ^ 2) - (~f * (~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / ((~c) ^ 2 * ~d * ~m)) - (((~b) ^ 2 * ~p * (~p - 1)) / (~m) ^ 2) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p - 2), ~x)) + (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~d * ~m)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 2, 0) && (LtQ(~q, -1) && GtQ(~p, 1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p, ~x) => ((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) - ((~f * ~m) / (~b * ~c * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 2, 0) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p, ~x) => (-((~f * ~x) ^ ~m) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) + ((~f * ~m) / (~b * ~c * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 2, 0) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d * ~f * (~m + 1)) - ((~b * ~c * ~p) / (~f * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 3, 0) && (GtQ(~p, 0) && NeQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => ((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d * ~f * (~m + 1)) + ((~b * ~c * ~p) / (~f * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (EqQ(~m + 2 * ~q + 3, 0) && (GtQ(~p, 0) && NeQ(~m, -1))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * atan(~c * ~x))) / (~f * (~m + 2)) - ((~b * ~c * ~d) / (~f * (~m + 2))) * Antiderivative((~f * ~x) ^ (~m + 1) / sqrt(~d + ~e * (~x) ^ 2), ~x)) + (~d / (~m + 2)) * Antiderivative(((~f * ~x) ^ ~m * (~a + ~b * atan(~c * ~x))) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && NeQ(~m, -2))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * sqrt(~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => ((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acot(~c * ~x))) / (~f * (~m + 2)) + ((~b * ~c * ~d) / (~f * (~m + 2))) * Antiderivative((~f * ~x) ^ (~m + 1) / sqrt(~d + ~e * (~x) ^ 2), ~x) + (~d / (~m + 2)) * Antiderivative(((~f * ~x) ^ ~m * (~a + ~b * acot(~c * ~x))) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && NeQ(~m, -2))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && (IGtQ(~q, 1) && (EqQ(~p, 1) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && (IGtQ(~q, 1) && (EqQ(~p, 1) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => ~d * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) + (((~c) ^ 2 * ~d) / (~f) ^ 2) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~q, 0) && (IGtQ(~p, 0) && (RationalQ(~m) || EqQ(~p, 1) && IntegerQ(~q)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => ~d * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) + (((~c) ^ 2 * ~d) / (~f) ^ 2) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~q, 0) && (IGtQ(~p, 0) && (RationalQ(~m) || EqQ(~p, 1) && IntegerQ(~q)))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * atan(~c * ~x)) ^ ~p) / ((~c) ^ 2 * ~d * ~m) - ((~b * ~f * ~p) / (~c * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 1) * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / sqrt(~d + ~e * (~x) ^ 2), ~x)) - (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * atan(~c * ~x)) ^ ~p) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~p, 0) && GtQ(~m, 1)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((~f * (~f * ~x) ^ (~m - 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acot(~c * ~x)) ^ ~p) / ((~c) ^ 2 * ~d * ~m) + ((~b * ~f * ~p) / (~c * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 1) * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / sqrt(~d + ~e * (~x) ^ 2), ~x)) - (((~f) ^ 2 * (~m - 1)) / ((~c) ^ 2 * ~m)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * acot(~c * ~x)) ^ ~p) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~p, 0) && GtQ(~m, 1)))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) / (~x * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => ((-2 / sqrt(~d)) * (~a + ~b * atan(~c * ~x)) * atanh(sqrt(1 + im * ~c * ~x) / sqrt(1 - im * ~c * ~x)) + ((im * ~b) / sqrt(~d)) * PolyLog(2, -(sqrt(1 + im * ~c * ~x)) / sqrt(1 - im * ~c * ~x))) - ((im * ~b) / sqrt(~d)) * PolyLog(2, sqrt(1 + im * ~c * ~x) / sqrt(1 - im * ~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~d, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) / (~x * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => ((-2 / sqrt(~d)) * (~a + ~b * acot(~c * ~x)) * atanh(sqrt(1 + im * ~c * ~x) / sqrt(1 - im * ~c * ~x)) - ((im * ~b) / sqrt(~d)) * PolyLog(2, -(sqrt(1 + im * ~c * ~x)) / sqrt(1 - im * ~c * ~x))) + ((im * ~b) / sqrt(~d)) * PolyLog(2, sqrt(1 + im * ~c * ~x) / sqrt(1 - im * ~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~d, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~p / (~x * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => (1 / sqrt(~d)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p * csc(~x), ~x), ~x, atan(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~p / (~x * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => ((-(~c) * ~x * sqrt(1 + 1 / ((~c) ^ 2 * (~x) ^ 2))) / sqrt(~d + ~e * (~x) ^ 2)) * Subst(Antiderivative((~a + ~b * ~x) ^ ~p * sec(~x), ~x), ~x, acot(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / (~x * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => (sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ ~p / (~x * sqrt(1 + (~c) ^ 2 * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && Not(GtQ(~d, 0))))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / (~x * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => (sqrt(1 + (~c) ^ 2 * (~x) ^ 2) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ ~p / (~x * sqrt(1 + (~c) ^ 2 * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && Not(GtQ(~d, 0))))
    @apply_utils Antiderivative((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') / ((~x) ^ 2 * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => (-(sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d * ~x) + ~b * ~c * ~p * Antiderivative((~a + ~b * atan(~c * ~x)) ^ (~p - 1) / (~x * sqrt(~d + ~e * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') / ((~x) ^ 2 * sqrt(~d + ~(e') * (~x) ^ 2)), ~x) => (-(sqrt(~d + ~e * (~x) ^ 2)) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d * ~x) - ~b * ~c * ~p * Antiderivative((~a + ~b * acot(~c * ~x)) ^ (~p - 1) / (~x * sqrt(~d + ~e * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && GtQ(~p, 0))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d * ~f * (~m + 1)) - ((~b * ~c * ~p) / (~f * (~m + 1))) * Antiderivative(((~f * ~x) ^ (~m + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / sqrt(~d + ~e * (~x) ^ 2), ~x)) - (((~c) ^ 2 * (~m + 2)) / ((~f) ^ 2 * (~m + 1))) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * atan(~c * ~x)) ^ ~p) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~p, 0) && (LtQ(~m, -1) && NeQ(~m, -2))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (((~f * ~x) ^ (~m + 1) * sqrt(~d + ~e * (~x) ^ 2) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d * ~f * (~m + 1)) + ((~b * ~c * ~p) / (~f * (~m + 1))) * Antiderivative(((~f * ~x) ^ (~m + 1) * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / sqrt(~d + ~e * (~x) ^ 2), ~x)) - (((~c) ^ 2 * (~m + 2)) / ((~f) ^ 2 * (~m + 1))) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * acot(~c * ~x)) ^ ~p) / sqrt(~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (GtQ(~p, 0) && (LtQ(~m, -1) && NeQ(~m, -2))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => (1 / ~e) * Antiderivative((~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) - (~d / ~e) * Antiderivative((~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegersQ(~p, 2 * ~q) && (LtQ(~q, -1) && (IGtQ(~m, 1) && NeQ(~p, -1)))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => (1 / ~e) * Antiderivative((~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) - (~d / ~e) * Antiderivative((~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegersQ(~p, 2 * ~q) && (LtQ(~q, -1) && (IGtQ(~m, 1) && NeQ(~p, -1)))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Antiderivative((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) - (~e / ~d) * Antiderivative((~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegersQ(~p, 2 * ~q) && (LtQ(~q, -1) && (ILtQ(~m, 0) && NeQ(~p, -1)))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => (1 / ~d) * Antiderivative((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) - (~e / ~d) * Antiderivative((~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegersQ(~p, 2 * ~q) && (LtQ(~q, -1) && (ILtQ(~m, 0) && NeQ(~p, -1)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => (((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) - (~m / (~b * ~c * (~p + 1))) * Antiderivative((~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p + 1), ~x)) - ((~c * (~m + 2 * ~q + 2)) / (~b * (~p + 1))) * Antiderivative((~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegerQ(~m) && (LtQ(~q, -1) && (LtQ(~p, -1) && NeQ(~m + 2 * ~q + 2, 0)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => (-((~x) ^ ~m) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ (~p + 1)) / (~b * ~c * ~d * (~p + 1)) + (~m / (~b * ~c * (~p + 1))) * Antiderivative((~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p + 1), ~x) + ((~c * (~m + 2 * ~q + 2)) / (~b * (~p + 1))) * Antiderivative((~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * acot(~c * ~x)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IntegerQ(~m) && (LtQ(~q, -1) && (LtQ(~p, -1) && NeQ(~m + 2 * ~q + 2, 0)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => ((~d) ^ ~q / (~c) ^ (~m + 1)) * Subst(Antiderivative(((~a + ~b * ~x) ^ ~p * sin(~x) ^ ~m) / cos(~x) ^ (~m + 2 * (~q + 1)), ~x), ~x, atan(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~m, 0) && (ILtQ(~m + 2 * ~q + 1, 0) && (IntegerQ(~q) || GtQ(~d, 0)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => (((~d) ^ (~q + 1 / 2) * sqrt(1 + (~c) ^ 2 * (~x) ^ 2)) / sqrt(~d + ~e * (~x) ^ 2)) * Antiderivative((~x) ^ ~m * (1 + (~c) ^ 2 * (~x) ^ 2) ^ ~q * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~m, 0) && (ILtQ(~m + 2 * ~q + 1, 0) && Not(IntegerQ(~q) || GtQ(~d, 0)))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => (-((~d) ^ ~q) / (~c) ^ (~m + 1)) * Subst(Antiderivative(((~a + ~b * ~x) ^ ~p * cos(~x) ^ ~m) / sin(~x) ^ (~m + 2 * (~q + 1)), ~x), ~x, acot(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~m, 0) && (ILtQ(~m + 2 * ~q + 1, 0) && IntegerQ(~q))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => ((-((~d) ^ (~q + 1 / 2)) * ~x * sqrt((1 + (~c) ^ 2 * (~x) ^ 2) / ((~c) ^ 2 * (~x) ^ 2))) / ((~c) ^ ~m * sqrt(~d + ~e * (~x) ^ 2))) * Subst(Antiderivative(((~a + ~b * ~x) ^ ~p * cos(~x) ^ ~m) / sin(~x) ^ (~m + 2 * (~q + 1)), ~x), ~x, acot(~c * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~m, 0) && (ILtQ(~m + 2 * ~q + 1, 0) && Not(IntegerQ(~q)))))
    @apply_utils Antiderivative(~x * (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * atan(~c * ~x))) / (2 * ~e * (~q + 1)) - ((~b * ~c) / (2 * ~e * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && NeQ(~q, -1)
    @apply_utils Antiderivative(~x * (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => ((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~a + ~b * acot(~c * ~x))) / (2 * ~e * (~q + 1)) + ((~b * ~c) / (2 * ~e * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && NeQ(~q, -1)
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x)], Dist(~a + ~b * atan(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(SimplifyIntegrand(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (IGtQ(~q, 0) && Not(ILtQ((~m - 1) / 2, 0) && GtQ(~m + 2 * ~q + 3, 0)) || (IGtQ((~m + 1) / 2, 0) && Not(ILtQ(~q, 0) && GtQ(~m + 2 * ~q + 3, 0)) || ILtQ((~m + 2 * ~q + 1) / 2, 0) && Not(ILtQ((~m - 1) / 2, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => With([u = IntHide((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x)], Dist(~a + ~b * acot(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(SimplifyIntegrand(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (IGtQ(~q, 0) && Not(ILtQ((~m - 1) / 2, 0) && GtQ(~m + 2 * ~q + 3, 0)) || (IGtQ((~m + 1) / 2, 0) && Not(ILtQ(~q, 0) && GtQ(~m + 2 * ~q + 3, 0)) || ILtQ((~m + 2 * ~q + 1) / 2, 0) && Not(ILtQ((~m - 1) / 2, 0))))
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => (1 / (4 * (~d) ^ 2 * Rt(-(~e) / ~d, 2))) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ ~p / (1 - Rt(-(~e) / ~d, 2) * ~x) ^ 2, ~x) - (1 / (4 * (~d) ^ 2 * Rt(-(~e) / ~d, 2))) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ ~p / (1 + Rt(-(~e) / ~d, 2) * ~x) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~x * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => (1 / (4 * (~d) ^ 2 * Rt(-(~e) / ~d, 2))) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ ~p / (1 - Rt(-(~e) / ~d, 2) * ~x) ^ 2, ~x) - (1 / (4 * (~d) ^ 2 * Rt(-(~e) / ~d, 2))) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ ~p / (1 + Rt(-(~e) / ~d, 2) * ~x) ^ 2, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => With([u = ExpandIntegrand((~a + ~b * atan(~c * ~x)) ^ ~p, (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (IntegerQ(~q) && (IGtQ(~p, 0) && (EqQ(~p, 1) && GtQ(~q, 0) || IntegerQ(~m))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => With([u = ExpandIntegrand((~a + ~b * acot(~c * ~x)) ^ ~p, (~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (IntegerQ(~q) && (IGtQ(~p, 0) && (EqQ(~p, 1) && GtQ(~q, 0) || IntegerQ(~m))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * atan(~(c') * ~x)), ~x) => ~a * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) + ~b * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * atan(~c * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x)
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * acot(~(c') * ~x)), ~x) => ~a * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) + ~b * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * acot(~c * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x)
    @apply_utils Antiderivative(((~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * atan(~c * ~x)) ^ ~p / (~d + ~e * (~x) ^ 2), (~f + ~g * ~x) ^ ~m, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~m, 0)))
    @apply_utils Antiderivative(((~f + ~(g') * ~x) ^ ~(m') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * acot(~c * ~x)) ^ ~p / (~d + ~e * (~x) ^ 2), (~f + ~g * ~x) ^ ~m, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && IGtQ(~m, 0)))
    @apply_utils Antiderivative((atanh(~u) * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / 2) * Antiderivative((log(1 + ~u) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) - (1 / 2) * Antiderivative((log(1 - ~u) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im + ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative((acoth(~u) * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / 2) * Antiderivative((log(SimplifyIntegrand(1 + 1 / ~u, ~x)) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) - (1 / 2) * Antiderivative((log(SimplifyIntegrand(1 - 1 / ~u, ~x)) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im + ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative((atanh(~u) * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / 2) * Antiderivative((log(1 + ~u) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) - (1 / 2) * Antiderivative((log(1 - ~u) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im - ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative((acoth(~u) * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / 2) * Antiderivative((log(SimplifyIntegrand(1 + 1 / ~u, ~x)) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) - (1 / 2) * Antiderivative((log(SimplifyIntegrand(1 - 1 / ~u, ~x)) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im - ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') * log(~f + ~(g') * ~x)) / (~d + ~(e') * (~x) ^ 2), ~x) => ((~a + ~b * atan(~c * ~x)) ^ (~p + 1) * log(~f + ~g * ~x)) / (~b * ~c * ~d * (~p + 1)) - (~g / (~b * ~c * ~d * (~p + 1))) * Antiderivative((~a + ~b * atan(~c * ~x)) ^ (~p + 1) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~c) ^ 2 * (~f) ^ 2 + (~g) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') * log(~f + ~(g') * ~x)) / (~d + ~(e') * (~x) ^ 2), ~x) => ((~a + ~b * acot(~c * ~x)) ^ (~p + 1) * log(~f + ~g * ~x)) / (~b * ~c * ~d * (~p + 1)) - (~g / (~b * ~c * ~d * (~p + 1))) * Antiderivative((~a + ~b * acot(~c * ~x)) ^ (~p + 1) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~c) ^ 2 * (~f) ^ 2 + (~g) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') * log(~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (im * (~a + ~b * atan(~c * ~x)) ^ ~p * PolyLog(2, 1 - ~u)) / (2 * ~c * ~d) - ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * atan(~c * ~x)) ^ (~p - 1) * PolyLog(2, 1 - ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((1 - ~u) ^ 2 - (1 - (2im) / (im + ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') * log(~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (im * (~a + ~b * acot(~c * ~x)) ^ ~p * PolyLog(2, 1 - ~u)) / (2 * ~c * ~d) + ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * acot(~c * ~x)) ^ (~p - 1) * PolyLog(2, 1 - ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((1 - ~u) ^ 2 - (1 - (2im) / (im + ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') * log(~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (-im * (~a + ~b * atan(~c * ~x)) ^ ~p * PolyLog(2, 1 - ~u)) / (2 * ~c * ~d) + ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * atan(~c * ~x)) ^ (~p - 1) * PolyLog(2, 1 - ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((1 - ~u) ^ 2 - (1 - (2im) / (im - ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') * log(~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (-im * (~a + ~b * acot(~c * ~x)) ^ ~p * PolyLog(2, 1 - ~u)) / (2 * ~c * ~d) - ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * acot(~c * ~x)) ^ (~p - 1) * PolyLog(2, 1 - ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((1 - ~u) ^ 2 - (1 - (2im) / (im - ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') * PolyLog(~k, ~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (-im * (~a + ~b * atan(~c * ~x)) ^ ~p * PolyLog(~k + 1, ~u)) / (2 * ~c * ~d) + ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * atan(~c * ~x)) ^ (~p - 1) * PolyLog(~k + 1, ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~k], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im + ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') * PolyLog(~k, ~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (-im * (~a + ~b * acot(~c * ~x)) ^ ~p * PolyLog(~k + 1, ~u)) / (2 * ~c * ~d) - ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * acot(~c * ~x)) ^ (~p - 1) * PolyLog(~k + 1, ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~k], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im + ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p') * PolyLog(~k, ~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (im * (~a + ~b * atan(~c * ~x)) ^ ~p * PolyLog(~k + 1, ~u)) / (2 * ~c * ~d) - ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * atan(~c * ~x)) ^ (~p - 1) * PolyLog(~k + 1, ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~k], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im - ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p') * PolyLog(~k, ~u)) / (~d + ~(e') * (~x) ^ 2), ~x) => (im * (~a + ~b * acot(~c * ~x)) ^ ~p * PolyLog(~k + 1, ~u)) / (2 * ~c * ~d) + ((~b * ~p * im) / 2) * Antiderivative(((~a + ~b * acot(~c * ~x)) ^ (~p - 1) * PolyLog(~k + 1, ~u)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~k], ~x) && (IGtQ(~p, 0) && (EqQ(~e, (~c) ^ 2 * ~d) && EqQ((~u) ^ 2 - (1 - (2im) / (im - ~c * ~x)) ^ 2, 0)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * (~(a') + ~(b') * acot(~(c') * ~x)) * (~(a') + ~(b') * atan(~(c') * ~x))), ~x) => (-(log(~a + ~b * acot(~c * ~x))) + log(~a + ~b * atan(~c * ~x))) / (~b * ~c * ~d * (2 * ~a + ~b * acot(~c * ~x) + ~b * atan(~c * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(~e, (~c) ^ 2 * ~d)
    @apply_utils Antiderivative(((~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(q') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => (-((~a + ~b * acot(~c * ~x)) ^ (~q + 1)) * (~a + ~b * atan(~c * ~x)) ^ ~p) / (~b * ~c * ~d * (~q + 1)) + (~p / (~q + 1)) * Antiderivative(((~a + ~b * acot(~c * ~x)) ^ (~q + 1) * (~a + ~b * atan(~c * ~x)) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && IGeQ(~q, ~p)))
    @apply_utils Antiderivative(((~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(q') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p')) / (~d + ~(e') * (~x) ^ 2), ~x) => ((~a + ~b * atan(~c * ~x)) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ ~p) / (~b * ~c * ~d * (~q + 1)) + (~p / (~q + 1)) * Antiderivative(((~a + ~b * atan(~c * ~x)) ^ (~q + 1) * (~a + ~b * acot(~c * ~x)) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~e, (~c) ^ 2 * ~d) && (IGtQ(~p, 0) && IGeQ(~q, ~p)))
    @apply_utils Antiderivative(atan(~(a') * ~x) / (~c + ~(d') * (~x) ^ ~(n')), ~x) => (im / 2) * Antiderivative(log(1 - im * ~a * ~x) / (~c + ~d * (~x) ^ ~n), ~x) - (im / 2) * Antiderivative(log(1 + im * ~a * ~x) / (~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~c, ~d], ~x) && (IntegerQ(~n) && Not(EqQ(~n, 2) && EqQ(~d, (~a) ^ 2 * ~c)))
    @apply_utils Antiderivative(acot(~(a') * ~x) / (~c + ~(d') * (~x) ^ ~(n')), ~x) => (im / 2) * Antiderivative(log(1 - im / (~a * ~x)) / (~c + ~d * (~x) ^ ~n), ~x) - (im / 2) * Antiderivative(log(1 + im / (~a * ~x)) / (~c + ~d * (~x) ^ ~n), ~x) <-- FreeQ([~a, ~c, ~d], ~x) && (IntegerQ(~n) && Not(EqQ(~n, 2) && EqQ(~d, (~a) ^ 2 * ~c)))
    @apply_utils Antiderivative((log(~(d') * (~x) ^ ~(m')) * atan(~(c') * (~x) ^ ~(n'))) / ~x, ~x) => (im / 2) * Antiderivative((log(~d * (~x) ^ ~m) * log(1 - im * ~c * (~x) ^ ~n)) / ~x, ~x) - (im / 2) * Antiderivative((log(~d * (~x) ^ ~m) * log(1 + im * ~c * (~x) ^ ~n)) / ~x, ~x) <-- FreeQ([~c, ~d, ~m, ~n], ~x)
    @apply_utils Antiderivative((log(~(d') * (~x) ^ ~(m')) * acot(~(c') * (~x) ^ ~(n'))) / ~x, ~x) => (im / 2) * Antiderivative((log(~d * (~x) ^ ~m) * log(1 - im / (~c * (~x) ^ ~n))) / ~x, ~x) - (im / 2) * Antiderivative((log(~d * (~x) ^ ~m) * log(1 + im / (~c * (~x) ^ ~n))) / ~x, ~x) <-- FreeQ([~c, ~d, ~m, ~n], ~x)
    @apply_utils Antiderivative((log(~(d') * (~x) ^ ~(m')) * (~a + ~(b') * atan(~(c') * (~x) ^ ~(n')))) / ~x, ~x) => ~a * Antiderivative(log(~d * (~x) ^ ~m) / ~x, ~x) + ~b * Antiderivative((log(~d * (~x) ^ ~m) * atan(~c * (~x) ^ ~n)) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x)
    @apply_utils Antiderivative((log(~(d') * (~x) ^ ~(m')) * (~a + ~(b') * acot(~(c') * (~x) ^ ~(n')))) / ~x, ~x) => ~a * Antiderivative(log(~d * (~x) ^ ~m) / ~x, ~x) + ~b * Antiderivative((log(~d * (~x) ^ ~m) * acot(~c * (~x) ^ ~n)) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~m, ~n], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => (~x * (~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * atan(~c * ~x)) - 2 * ~e * ~g * Antiderivative(((~x) ^ 2 * (~a + ~b * atan(~c * ~x))) / (~f + ~g * (~x) ^ 2), ~x)) - ~b * ~c * Antiderivative((~x * (~d + ~e * log(~f + ~g * (~x) ^ 2))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => (~x * (~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * acot(~c * ~x)) - 2 * ~e * ~g * Antiderivative(((~x) ^ 2 * (~a + ~b * acot(~c * ~x))) / (~f + ~g * (~x) ^ 2), ~x)) + ~b * ~c * Antiderivative((~x * (~d + ~e * log(~f + ~g * (~x) ^ 2))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x)
    @apply_utils Antiderivative((log(~(f') + ~(g') * (~x) ^ 2) * atan(~(c') * ~x)) / ~x, ~x) => (((log(~f + ~g * (~x) ^ 2) - log(1 - im * ~c * ~x)) - log(1 + im * ~c * ~x)) * Antiderivative(atan(~c * ~x) / ~x, ~x) + (im / 2) * Antiderivative(log(1 - im * ~c * ~x) ^ 2 / ~x, ~x)) - (im / 2) * Antiderivative(log(1 + im * ~c * ~x) ^ 2 / ~x, ~x) <-- FreeQ([~c, ~f, ~g], ~x) && EqQ(~g, (~c) ^ 2 * ~f)
    @apply_utils Antiderivative((log(~(f') + ~(g') * (~x) ^ 2) * acot(~(c') * ~x)) / ~x, ~x) => ((((log(~f + ~g * (~x) ^ 2) - log((~c) ^ 2 * (~x) ^ 2)) - log(1 - im / (~c * ~x))) - log(1 + im / (~c * ~x))) * Antiderivative(acot(~c * ~x) / ~x, ~x) + Antiderivative((log((~c) ^ 2 * (~x) ^ 2) * acot(~c * ~x)) / ~x, ~x) + (im / 2) * Antiderivative(log(1 - im / (~c * ~x)) ^ 2 / ~x, ~x)) - (im / 2) * Antiderivative(log(1 + im / (~c * ~x)) ^ 2 / ~x, ~x) <-- FreeQ([~c, ~f, ~g], ~x) && EqQ(~g, (~c) ^ 2 * ~f)
    @apply_utils Antiderivative((log(~(f') + ~(g') * (~x) ^ 2) * (~a + ~(b') * atan(~(c') * ~x))) / ~x, ~x) => ~a * Antiderivative(log(~f + ~g * (~x) ^ 2) / ~x, ~x) + ~b * Antiderivative((log(~f + ~g * (~x) ^ 2) * atan(~c * ~x)) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~f, ~g], ~x)
    @apply_utils Antiderivative((log(~(f') + ~(g') * (~x) ^ 2) * (~a + ~(b') * acot(~(c') * ~x))) / ~x, ~x) => ~a * Antiderivative(log(~f + ~g * (~x) ^ 2) / ~x, ~x) + ~b * Antiderivative((log(~f + ~g * (~x) ^ 2) * acot(~c * ~x)) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~f, ~g], ~x)
    @apply_utils Antiderivative(((~d + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * atan(~(c') * ~x))) / ~x, ~x) => ~d * Antiderivative((~a + ~b * atan(~c * ~x)) / ~x, ~x) + ~e * Antiderivative((log(~f + ~g * (~x) ^ 2) * (~a + ~b * atan(~c * ~x))) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x)
    @apply_utils Antiderivative(((~d + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * acot(~(c') * ~x))) / ~x, ~x) => ~d * Antiderivative((~a + ~b * acot(~c * ~x)) / ~x, ~x) + ~e * Antiderivative((log(~f + ~g * (~x) ^ 2) * (~a + ~b * acot(~c * ~x))) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => (((~x) ^ (~m + 1) * (~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * atan(~c * ~x))) / (~m + 1) - ((2 * ~e * ~g) / (~m + 1)) * Antiderivative(((~x) ^ (~m + 2) * (~a + ~b * atan(~c * ~x))) / (~f + ~g * (~x) ^ 2), ~x)) - ((~b * ~c) / (~m + 1)) * Antiderivative(((~x) ^ (~m + 1) * (~d + ~e * log(~f + ~g * (~x) ^ 2))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && ILtQ(~m / 2, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => (((~x) ^ (~m + 1) * (~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * acot(~c * ~x))) / (~m + 1) - ((2 * ~e * ~g) / (~m + 1)) * Antiderivative(((~x) ^ (~m + 2) * (~a + ~b * acot(~c * ~x))) / (~f + ~g * (~x) ^ 2), ~x)) + ((~b * ~c) / (~m + 1)) * Antiderivative(((~x) ^ (~m + 1) * (~d + ~e * log(~f + ~g * (~x) ^ 2))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && ILtQ(~m / 2, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~d + ~e * log(~f + ~g * (~x) ^ 2)), ~x)], Dist(~a + ~b * atan(~c * ~x), u, ~x) - ~b * ~c * Antiderivative(ExpandIntegrand(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && IGtQ((~m + 1) / 2, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~d + ~e * log(~f + ~g * (~x) ^ 2)), ~x)], Dist(~a + ~b * acot(~c * ~x), u, ~x) + ~b * ~c * Antiderivative(ExpandIntegrand(u / (1 + (~c) ^ 2 * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && IGtQ((~m + 1) / 2, 0)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * atan(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~a + ~b * atan(~c * ~x)), ~x)], Dist(~d + ~e * log(~f + ~g * (~x) ^ 2), u, ~x) - 2 * ~e * ~g * Antiderivative(ExpandIntegrand((~x * u) / (~f + ~g * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IntegerQ(~m) && NeQ(~m, -1))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(d') + ~(e') * log(~(f') + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * acot(~(c') * ~x)), ~x) => With([u = IntHide((~x) ^ ~m * (~a + ~b * acot(~c * ~x)), ~x)], Dist(~d + ~e * log(~f + ~g * (~x) ^ 2), u, ~x) - 2 * ~e * ~g * Antiderivative(ExpandIntegrand((~x * u) / (~f + ~g * (~x) ^ 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (IntegerQ(~m) && NeQ(~m, -1))
    @apply_utils Antiderivative(~x * (~(d') + ~(e') * log(~f + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * atan(~(c') * ~x)) ^ 2, ~x) => ((((~f + ~g * (~x) ^ 2) * (~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * atan(~c * ~x)) ^ 2) / (2 * ~g) - (~e * (~x) ^ 2 * (~a + ~b * atan(~c * ~x)) ^ 2) / 2) - (~b / ~c) * Antiderivative((~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * atan(~c * ~x)), ~x)) + ~b * ~c * ~e * Antiderivative(((~x) ^ 2 * (~a + ~b * atan(~c * ~x))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && EqQ(~g, (~c) ^ 2 * ~f)
    @apply_utils Antiderivative(~x * (~(d') + ~(e') * log(~f + ~(g') * (~x) ^ 2)) * (~(a') + ~(b') * acot(~(c') * ~x)) ^ 2, ~x) => ((((~f + ~g * (~x) ^ 2) * (~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * acot(~c * ~x)) ^ 2) / (2 * ~g) - (~e * (~x) ^ 2 * (~a + ~b * acot(~c * ~x)) ^ 2) / 2) + (~b / ~c) * Antiderivative((~d + ~e * log(~f + ~g * (~x) ^ 2)) * (~a + ~b * acot(~c * ~x)), ~x)) - ~b * ~c * ~e * Antiderivative(((~x) ^ 2 * (~a + ~b * acot(~c * ~x))) / (1 + (~c) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && EqQ(~g, (~c) ^ 2 * ~f)
    @apply_utils Antiderivative(~(u') * (~(a') + ~(b') * atan(~(c') * ~x)) ^ ~(p'), ~x) => Unintegrable(~u * (~a + ~b * atan(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~p], ~x) && (EqQ(~u, 1) || (MatchQ(~u, (~(d') + ~(e') * ~x) ^ ~(q') <-- FreeQ([d, e, q], ~x)) || (MatchQ(~u, (~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * ~x) ^ ~(q') <-- FreeQ([d, e, f, m, q], ~x)) || (MatchQ(~u, (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') <-- FreeQ([d, e, q], ~x)) || MatchQ(~u, (~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') <-- FreeQ([d, e, f, m, q], ~x))))))
    @apply_utils Antiderivative(~(u') * (~(a') + ~(b') * acot(~(c') * ~x)) ^ ~(p'), ~x) => Unintegrable(~u * (~a + ~b * acot(~c * ~x)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~p], ~x) && (EqQ(~u, 1) || (MatchQ(~u, (~(d') + ~(e') * ~x) ^ ~(q') <-- FreeQ([d, e, q], ~x)) || (MatchQ(~u, (~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * ~x) ^ ~(q') <-- FreeQ([d, e, f, m, q], ~x)) || (MatchQ(~u, (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') <-- FreeQ([d, e, q], ~x)) || MatchQ(~u, (~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~(q') <-- FreeQ([d, e, f, m, q], ~x))))))
end
