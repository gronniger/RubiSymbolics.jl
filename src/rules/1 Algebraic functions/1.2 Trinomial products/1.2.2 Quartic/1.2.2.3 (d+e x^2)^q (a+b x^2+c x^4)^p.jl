int_rules_1_2_2_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 1.2.2.3*(d+e*x^2)^q*(a+b*x^2+c*x^4)^p =#
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ (3 / 4), ~x) => (-2 * (~c * ~d - ~b * ~e) * (~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (1 / 4)) / (~b * ~c * ~x) + (~e / ~c) * Antiderivative((~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (1 / 4) / (~x) ^ 2, ~x) <-- FreeQ([~b, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~e * (~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~c * (4 * ~p + 3) * ~x) <-- FreeQ([~b, ~c, ~d, ~e, ~p], ~x) && (Not(IntegerQ(~p)) && (NeQ(4 * ~p + 3, 0) && EqQ(~b * ~e * (2 * ~p + 1) - ~c * ~d * (4 * ~p + 3), 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~e * (~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~c * (4 * ~p + 3) * ~x) - ((~b * ~e * (2 * ~p + 1) - ~c * ~d * (4 * ~p + 3)) / (~c * (4 * ~p + 3))) * Antiderivative((~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~b, ~c, ~d, ~e, ~p], ~x) && (Not(IntegerQ(~p)) && (NeQ(4 * ~p + 3, 0) && NeQ(~b * ~e * (2 * ~p + 1) - ~c * ~d * (4 * ~p + 3), 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~x) ^ (2 * FracPart(~p)) * (~b + ~c * (~x) ^ 2) ^ FracPart(~p))) * Antiderivative((~x) ^ (2 * ~p) * (~d + ~e * (~x) ^ 2) ^ ~q * (~b + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~b, ~c, ~d, ~e, ~p, ~q], ~x) && Not(IntegerQ(~p))
    #= Antiderivative(((~d)+(~e')*(~x)^2)^(~q')*((~a)+(~b')*(~x)^2+(~c')*(~x)^4)^(~p'),~x) :=  1/c^p*Antiderivative((d+e*x^2)^q*(b/2+c*x^2)^(2*p),x) <--  FreeQ([a,b,c,d,e,p,q],x) && EqQ(b^2-4*a*c,0) && IntegerQ(p) =#
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p / (~d + ~e * (~x) ^ 2) ^ (2 * ~p)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 2 * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && EqQ(2 * ~c * ~d - ~b * ~e, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~c) ^ IntPart(~p) * (~b / 2 + ~c * (~x) ^ 2) ^ (2 * FracPart(~p)))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * (~b / 2 + ~c * (~x) ^ 2) ^ (2 * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && Not(IntegerQ(~p)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + ~q) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IntegerQ(~p)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + ~q) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~q], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IntegerQ(~p))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~d + ~e * (~x) ^ 2) ^ FracPart(~p) * (~a / ~d + (~c * (~x) ^ 2) / ~e) ^ FracPart(~p))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + ~q) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~p))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~d + ~e * (~x) ^ 2) ^ FracPart(~p) * (~a / ~d + (~c * (~x) ^ 2) / ~e) ^ FracPart(~p))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~p + ~q) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p, ~q], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~p)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && IGtQ(~q, -2))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && IGtQ(~q, -2)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~a) ^ ~p * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / ~d + (1 / ~d) * Antiderivative((~x) ^ 2 * (~d + ~e * (~x) ^ 2) ^ ~q * (~d * PolynomialQuotient((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p - (~a) ^ ~p, (~x) ^ 2, ~x) - ~e * (~a) ^ ~p * (2 * ~q + 3)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && (ILtQ(~q + 1 / 2, 0) && LtQ(4 * ~p + 2 * ~q + 1, 0)))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~a) ^ ~p * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / ~d + (1 / ~d) * Antiderivative((~x) ^ 2 * (~d + ~e * (~x) ^ 2) ^ ~q * (~d * PolynomialQuotient((~a + ~c * (~x) ^ 4) ^ ~p - (~a) ^ ~p, (~x) ^ 2, ~x) - ~e * (~a) ^ ~p * (2 * ~q + 3)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && (ILtQ(~q + 1 / 2, 0) && LtQ(4 * ~p + 2 * ~q + 1, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), R = Coeff(PolynomialRemainder((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), ~x, 0)], (-R * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * ~d * (~q + 1)) + (1 / (2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(2 * ~d * (~q + 1) * Qx + R * (2 * ~q + 3), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && LtQ(~q, -1))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), R = Coeff(PolynomialRemainder((~a + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), ~x, 0)], (-R * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * ~d * (~q + 1)) + (1 / (2 * ~d * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(2 * ~d * (~q + 1) * Qx + R * (2 * ~q + 3), ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && LtQ(~q, -1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~c) ^ ~p * (~x) ^ (4 * ~p - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~e * (4 * ~p + 2 * ~q + 1)) + (1 / (~e * (4 * ~p + 2 * ~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * ExpandToSum((~e * (4 * ~p + 2 * ~q + 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p - ~d * (~c) ^ ~p * (4 * ~p - 1) * (~x) ^ (4 * ~p - 2)) - ~e * (~c) ^ ~p * (4 * ~p + 2 * ~q + 1) * (~x) ^ (4 * ~p), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && Not(LtQ(~q, -1)))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~c) ^ ~p * (~x) ^ (4 * ~p - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~e * (4 * ~p + 2 * ~q + 1)) + (1 / (~e * (4 * ~p + 2 * ~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q * ExpandToSum((~e * (4 * ~p + 2 * ~q + 1) * (~a + ~c * (~x) ^ 4) ^ ~p - ~d * (~c) ^ ~p * (4 * ~p - 1) * (~x) ^ (4 * ~p - 2)) - ~e * (~c) ^ ~p * (4 * ~p + 2 * ~q + 1) * (~x) ^ (4 * ~p), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~q], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && Not(LtQ(~q, -1))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((2 * ~d) / ~e - ~b / ~c, 2)], (~e / (2 * ~c)) * Antiderivative(1 / Simp(~d / ~e + q * ~x + (~x) ^ 2, ~x), ~x) + (~e / (2 * ~c)) * Antiderivative(1 / Simp((~d / ~e - q * ~x) + (~x) ^ 2, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && (GtQ((2 * ~d) / ~e - ~b / ~c, 0) || Not(LtQ((2 * ~d) / ~e - ~b / ~c, 0)) && EqQ(~d - ~e * Rt(~a / ~c, 2), 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((2 * ~d) / ~e, 2)], (~e / (2 * ~c)) * Antiderivative(1 / Simp(~d / ~e + q * ~x + (~x) ^ 2, ~x), ~x) + (~e / (2 * ~c)) * Antiderivative(1 / Simp((~d / ~e - q * ~x) + (~x) ^ 2, ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && PosQ(~d * ~e))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], (~e / 2 + (2 * ~c * ~d - ~b * ~e) / (2q)) * Antiderivative(1 / ((~b / 2 - q / 2) + ~c * (~x) ^ 2), ~x) + (~e / 2 - (2 * ~c * ~d - ~b * ~e) / (2q)) * Antiderivative(1 / (~b / 2 + q / 2 + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && GtQ((~b) ^ 2 - 4 * ~a * ~c, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((-2 * ~d) / ~e - ~b / ~c, 2)], (~e / (2 * ~c * q)) * Antiderivative((q - 2 * ~x) / Simp((~d / ~e + q * ~x) - (~x) ^ 2, ~x), ~x) + (~e / (2 * ~c * q)) * Antiderivative((q + 2 * ~x) / Simp((~d / ~e - q * ~x) - (~x) ^ 2, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && Not(GtQ((~b) ^ 2 - 4 * ~a * ~c, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((-2 * ~d) / ~e, 2)], (~e / (2 * ~c * q)) * Antiderivative((q - 2 * ~x) / Simp((~d / ~e + q * ~x) - (~x) ^ 2, ~x), ~x) + (~e / (2 * ~c * q)) * Antiderivative((q + 2 * ~x) / Simp((~d / ~e - q * ~x) - (~x) ^ 2, ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && NegQ(~d * ~e))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], (~e / 2 + (2 * ~c * ~d - ~b * ~e) / (2q)) * Antiderivative(1 / ((~b / 2 - q / 2) + ~c * (~x) ^ 2), ~x) + (~e / 2 - (2 * ~c * ~d - ~b * ~e) / (2q)) * Antiderivative(1 / (~b / 2 + q / 2 + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && PosQ((~b) ^ 2 - 4 * ~a * ~c)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~a) * ~c, 2)], (~e / 2 + (~c * ~d) / (2q)) * Antiderivative(1 / (-q + ~c * (~x) ^ 2), ~x) + (~e / 2 - (~c * ~d) / (2q)) * Antiderivative(1 / (q + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && PosQ(-(~a) * ~c))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~a * ~c, 2)], ((~d * q + ~a * ~e) / (2 * ~a * ~c)) * Antiderivative((q + ~c * (~x) ^ 2) / (~a + ~c * (~x) ^ 4), ~x) + ((~d * q - ~a * ~e) / (2 * ~a * ~c)) * Antiderivative((q - ~c * (~x) ^ 2) / (~a + ~c * (~x) ^ 4), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && NegQ(-(~a) * ~c)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~a / ~c, 2)], With([r = Rt(2q - ~b / ~c, 2)], (1 / (2 * ~c * q * r)) * Antiderivative((~d * r - (~d - ~e * q) * ~x) / ((q - r * ~x) + (~x) ^ 2), ~x) + (1 / (2 * ~c * q * r)) * Antiderivative((~d * r + (~d - ~e * q) * ~x) / (q + r * ~x + (~x) ^ 2), ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && NegQ((~b) ^ 2 - 4 * ~a * ~c)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IntegerQ(~q)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / (~a + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q / (~a + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IntegerQ(~q))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => ((~e) ^ 2 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q, ~x) + (1 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~d + ~e * (~x) ^ 2) ^ (~q + 1) * ((~c * ~d - ~b * ~e) - ~c * ~e * (~x) ^ 2)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~q)) && LtQ(~q, -1))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / (~a + ~(c') * (~x) ^ 4), ~x) => ((~e) ^ 2 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q, ~x) + (~c / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~d - ~e * (~x) ^ 2)) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~q)) && LtQ(~q, -1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([r = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((2 * ~c) / r) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q / ((~b - r) + 2 * ~c * (~x) ^ 2), ~x) - ((2 * ~c) / r) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q / (~b + r + 2 * ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~q))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / (~a + ~(c') * (~x) ^ 4), ~x) => With([r = Rt(-(~a) * ~c, 2)], (-(~c) / (2r)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q / (r - ~c * (~x) ^ 2), ~x) - (~c / (2r)) * Antiderivative((~d + ~e * (~x) ^ 2) ^ ~q / (r + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~q], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~q)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~x * (2 * ~b * ~e * ~p + ~c * ~d * (4 * ~p + 3) + ~c * ~e * (4 * ~p + 1) * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p) / (~c * (4 * ~p + 1) * (4 * ~p + 3)) + ((2 * ~p) / (~c * (4 * ~p + 1) * (4 * ~p + 3))) * Antiderivative(Simp((2 * ~a * ~c * ~d * (4 * ~p + 3) - ~a * ~b * ~e) + ((2 * ~a * ~c * ~e * (4 * ~p + 1) + ~b * ~c * ~d * (4 * ~p + 3)) - (~b) ^ 2 * ~e * (2 * ~p + 1)) * (~x) ^ 2, ~x) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && (FractionQ(~p) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~x * (~d * (4 * ~p + 3) + ~e * (4 * ~p + 1) * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ ~p) / ((4 * ~p + 1) * (4 * ~p + 3)) + ((2 * ~p) / ((4 * ~p + 1) * (4 * ~p + 3))) * Antiderivative(Simp(2 * ~a * ~d * (4 * ~p + 3) + (2 * ~a * ~e * (4 * ~p + 1)) * (~x) ^ 2, ~x) * (~a + ~c * (~x) ^ 4) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && (FractionQ(~p) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~x * ((~a * ~b * ~e - ~d * ((~b) ^ 2 - 2 * ~a * ~c)) - ~c * (~b * ~d - 2 * ~a * ~e) * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative(Simp((((2 * ~p + 3) * ~d * (~b) ^ 2 - ~a * ~b * ~e) - 2 * ~a * ~c * ~d * (4 * ~p + 5)) + (4 * ~p + 7) * (~d * ~b - 2 * ~a * ~e) * ~c * (~x) ^ 2, ~x) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (-(~x) * (~d + ~e * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ (~p + 1)) / (4 * ~a * (~p + 1)) + (1 / (4 * ~a * (~p + 1))) * Antiderivative(Simp(~d * (4 * ~p + 5) + ~e * (4 * ~p + 7) * (~x) ^ 2, ~x) * (~a + ~c * (~x) ^ 4) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && IntegerQ(2 * ~p)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], 2 * sqrt(-(~c)) * Antiderivative((~d + ~e * (~x) ^ 2) / (sqrt(~b + q + 2 * ~c * (~x) ^ 2) * sqrt((-(~b) + q) - 2 * ~c * (~x) ^ 2)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && LtQ(~c, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~a) * ~c, 2)], sqrt(-(~c)) * Antiderivative((~d + ~e * (~x) ^ 2) / (sqrt(q + ~c * (~x) ^ 2) * sqrt(q - ~c * (~x) ^ 2)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (GtQ(~a, 0) && LtQ(~c, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~c / ~a, 4)], (-(~d) * ~x * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (~a * (1 + q ^ 2 * (~x) ^ 2)) + ((~d * (1 + q ^ 2 * (~x) ^ 2) * sqrt((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) / (~a * (1 + q ^ 2 * (~x) ^ 2) ^ 2))) / (q * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Elliptic.E(2 * atan(q * ~x), 1 / 2 - (~b * q ^ 2) / (4 * ~c)) <-- EqQ(~e + ~d * q ^ 2, 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~c / ~a, 0) && LtQ(~b / ~a, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~c / ~a, 2)], ((~e + ~d * q) / q) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) - (~e / q) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- NeQ(~e + ~d * q, 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~c / ~a, 0) && LtQ(~b / ~a, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], (~e * ~x * (~b + q + 2 * ~c * (~x) ^ 2)) / (2 * ~c * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) - ((~e * q * sqrt((2 * ~a + (~b - q) * (~x) ^ 2) / (2 * ~a + (~b + q) * (~x) ^ 2)) * sqrt((2 * ~a + (~b + q) * (~x) ^ 2) / q)) / (2 * ~c * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) * sqrt(~a / (2 * ~a + (~b + q) * (~x) ^ 2)))) * Elliptic.E(asin(~x / sqrt((2 * ~a + (~b + q) * (~x) ^ 2) / (2q))), (~b + q) / (2q)) <-- EqQ(2 * ~c * ~d - ~e * (~b - q), 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~a, 0) && GtQ(~c, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~a) * ~c, 2)], (~e * ~x * (q + ~c * (~x) ^ 2)) / (~c * sqrt(~a + ~c * (~x) ^ 4)) - ((sqrt(2) * ~e * q * sqrt(-(~a) + q * (~x) ^ 2) * sqrt((~a + q * (~x) ^ 2) / q)) / (sqrt(-(~a)) * ~c * sqrt(~a + ~c * (~x) ^ 4))) * Elliptic.E(asin(~x / sqrt((~a + q * (~x) ^ 2) / (2q))), 1 / 2) <-- EqQ(~c * ~d + ~e * q, 0) && IntegerQ(q)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (LtQ(~a, 0) && GtQ(~c, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~a) * ~c, 2)], (~e * ~x * (q + ~c * (~x) ^ 2)) / (~c * sqrt(~a + ~c * (~x) ^ 4)) - ((sqrt(2) * ~e * q * sqrt((~a - q * (~x) ^ 2) / (~a + q * (~x) ^ 2)) * sqrt((~a + q * (~x) ^ 2) / q)) / (~c * sqrt(~a + ~c * (~x) ^ 4) * sqrt(~a / (~a + q * (~x) ^ 2)))) * Elliptic.E(asin(~x / sqrt((~a + q * (~x) ^ 2) / (2q))), 1 / 2) <-- EqQ(~c * ~d + ~e * q, 0)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (LtQ(~a, 0) && GtQ(~c, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((2 * ~c * ~d - ~e * (~b - q)) / (2 * ~c)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + (~e / (2 * ~c)) * Antiderivative(((~b - q) + 2 * ~c * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- NeQ(2 * ~c * ~d - ~e * (~b - q), 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~a, 0) && GtQ(~c, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~a) * ~c, 2)], ((~c * ~d + ~e * q) / ~c) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) - (~e / ~c) * Antiderivative((q - ~c * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x) <-- NeQ(~c * ~d + ~e * q, 0)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (LtQ(~a, 0) && GtQ(~c, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ~d * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + ~e * Antiderivative((~x) ^ 2 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- PosQ((~b + q) / ~a) || PosQ((~b - q) / ~a)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => ~d * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) + ~e * Antiderivative((~x) ^ 2 / sqrt(~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && GtQ(-(~a) * ~c, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((-(~a) * ~e * Rt(-((~b + q)) / (2 * ~a), 2) * sqrt(1 + ((~b + q) * (~x) ^ 2) / (2 * ~a)) * sqrt(1 + ((~b - q) * (~x) ^ 2) / (2 * ~a))) / (~c * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Elliptic.E(asin(Rt(-((~b + q)) / (2 * ~a), 2) * ~x), (~b - q) / (~b + q)) <-- NegQ((~b + q) / ~a) && (EqQ(2 * ~c * ~d - ~e * (~b + q), 0) && Not(SimplerSqrtQ(-((~b - q)) / (2 * ~a), -((~b + q)) / (2 * ~a))))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((2 * ~c * ~d - ~e * (~b + q)) / (2 * ~c)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + (~e / (2 * ~c)) * Antiderivative((~b + q + 2 * ~c * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- NegQ((~b + q) / ~a) && (NeQ(2 * ~c * ~d - ~e * (~b + q), 0) && Not(SimplerSqrtQ(-((~b - q)) / (2 * ~a), -((~b + q)) / (2 * ~a))))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((-(~a) * ~e * Rt(-((~b - q)) / (2 * ~a), 2) * sqrt(1 + ((~b - q) * (~x) ^ 2) / (2 * ~a)) * sqrt(1 + ((~b + q) * (~x) ^ 2) / (2 * ~a))) / (~c * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Elliptic.E(asin(Rt(-((~b - q)) / (2 * ~a), 2) * ~x), (~b + q) / (~b - q)) <-- NegQ((~b - q) / ~a) && EqQ(2 * ~c * ~d - ~e * (~b - q), 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((2 * ~c * ~d - ~e * (~b - q)) / (2 * ~c)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + (~e / (2 * ~c)) * Antiderivative(((~b - q) + 2 * ~c * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- NegQ((~b - q) / ~a) && NeQ(2 * ~c * ~d - ~e * (~b - q), 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~c / ~a, 4)], (-(~d) * ~x * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (~a * (1 + q ^ 2 * (~x) ^ 2)) + ((~d * (1 + q ^ 2 * (~x) ^ 2) * sqrt((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) / (~a * (1 + q ^ 2 * (~x) ^ 2) ^ 2))) / (q * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Elliptic.E(2 * atan(q * ~x), 1 / 2 - (~b * q ^ 2) / (4 * ~c)) <-- EqQ(~e + ~d * q ^ 2, 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && PosQ(~c / ~a))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~c / ~a, 4)], (-(~d) * ~x * sqrt(~a + ~c * (~x) ^ 4)) / (~a * (1 + q ^ 2 * (~x) ^ 2)) + ((~d * (1 + q ^ 2 * (~x) ^ 2) * sqrt((~a + ~c * (~x) ^ 4) / (~a * (1 + q ^ 2 * (~x) ^ 2) ^ 2))) / (q * sqrt(~a + ~c * (~x) ^ 4))) * Elliptic.E(2 * atan(q * ~x), 1 / 2) <-- EqQ(~e + ~d * q ^ 2, 0)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && PosQ(~c / ~a)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~c / ~a, 2)], ((~e + ~d * q) / q) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) - (~e / q) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- NeQ(~e + ~d * q, 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && PosQ(~c / ~a))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(~c / ~a, 2)], ((~e + ~d * q) / q) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) - (~e / q) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x) <-- NeQ(~e + ~d * q, 0)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && PosQ(~c / ~a)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => (~d / sqrt(~a)) * Antiderivative(sqrt(1 + (~e * (~x) ^ 2) / ~d) / sqrt(1 - (~e * (~x) ^ 2) / ~d), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NegQ(~c / ~a) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && GtQ(~a, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => (sqrt(1 + (~c * (~x) ^ 4) / ~a) / sqrt(~a + ~c * (~x) ^ 4)) * Antiderivative((~d + ~e * (~x) ^ 2) / sqrt(1 + (~c * (~x) ^ 4) / ~a), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NegQ(~c / ~a) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(GtQ(~a, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~c) / ~a, 2)], ((~d * q - ~e) / q) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) + (~e / q) * Antiderivative((1 + q * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NegQ(~c / ~a) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b - q)) * sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b + q))) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) * Antiderivative((~d + ~e * (~x) ^ 2) / (sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b - q)) * sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b + q))), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NegQ(~c / ~a))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    #= Antiderivative(((~d)+(~e')*(~x)^2)^2/sqrt((~a)+(~b')*(~x)^2+(~c')*(~x)^4),~x) :=  e^2*x*sqrt(a+b*x^2+c*x^4)/(3*c) + 2*(3*c*d-b*e)/(3*c)*Antiderivative((d+e*x^2)/sqrt(a+b*x^2+c*x^4),x) - (3*c*d^2-2*b*d*e+a*e^2)/(3*c)*Antiderivative(1/sqrt(a+b*x^2+c*x^4),x) <--  FreeQ([a,b,c,d,e],x) && NeQ(b^2-4*a*c,0) && NeQ(c*d^2-b*d*e+a*e^2,0) =#
    #= Antiderivative(((~d)+(~e')*(~x)^2)^2/sqrt((~a)+(~c')*(~x)^4),~x) :=  e^2*x*sqrt(a+c*x^4)/(3*c) + 2*d*Antiderivative((d+e*x^2)/sqrt(a+c*x^4),x) - (3*c*d^2+a*e^2)/(3*c)*Antiderivative(1/sqrt(a+c*x^4),x) <-- FreeQ([a,c,d,e],x) &&  NeQ(c*d^2+a*e^2,0) =#
    #= Antiderivative(((~d)+(~e')*(~x)^2)^(~q)/sqrt((~a)+(~b')*(~x)^2+(~c')*(~x)^4),~x) :=  e^2*x*(d+e*x^2)^(q-2)*sqrt(a+b*x^2+c*x^4)/(c*(2*q-1)) + 2*(q-1)*(3*c*d-b*e)/(c*(2*q-1))*Antiderivative((d+e*x^2)^(q-1)/sqrt(a+b*x^2+c* x^4),x) - (2*q-3)*(3*c*d^2-2*b*d*e+a*e^2)/(c*(2*q-1))*Antiderivative((d+e*x^2)^(q-2)/ sqrt(a+b*x^2+c*x^4),x) + 2*d*(q-2)*(c*d^2-b*d*e+a*e^2)/(c*(2*q-1))*Antiderivative((d+e*x^2)^(q-3)/sqrt( a+b*x^2+c*x^4),x) <-- FreeQ([a,b,c,d,e],x) && NeQ(b^2-4*a*c,0) &&  IGtQ(q,2) =#
    #= Antiderivative(((~d)+(~e')*(~x)^2)^(~q)/sqrt((~a)+(~c')*(~x)^4),~x) :=  e^2*x*(d+e*x^2)^(q-2)*sqrt(a+c*x^4)/(c*(2*q-1)) + 6*d*(q-1)/(2*q-1)*Antiderivative((d+e*x^2)^(q-1)/sqrt(a+c*x^4),x) - (2*q-3)*(3*c*d^2+a*e^2)/(c*(2*q-1))*Antiderivative((d+e*x^2)^(q-2)/sqrt(a+c*x^ 4),x) + 2*d*(q-2)*(c*d^2+a*e^2)/(c*(2*q-1))*Antiderivative((d+e*x^2)^(q-3)/sqrt(a+c*x^ 4),x) <-- FreeQ([a,c,d,e],x) && IGtQ(q,2) =#
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => With([f = Coeff(PolynomialRemainder((~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x), ~x, 0), g = Coeff(PolynomialRemainder((~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x), ~x, 2)], (~x * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * ((~a * ~b * g - f * ((~b) ^ 2 - 2 * ~a * ~c)) - ~c * (~b * f - 2 * ~a * g) * (~x) ^ 2)) / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * ExpandToSum((((2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c) * PolynomialQuotient((~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x) + (~b) ^ 2 * f * (2 * ~p + 3)) - 2 * ~a * ~c * f * (4 * ~p + 5)) - ~a * ~b * g) + ~c * (4 * ~p + 7) * (~b * f - 2 * ~a * g) * (~x) ^ 2, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~q, 1) && LtQ(~p, -1))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~e) ^ ~q * (~x) ^ (2 * ~q - 3) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~c * (4 * ~p + 2 * ~q + 1)) + (1 / (~c * (4 * ~p + 2 * ~q + 1))) * Antiderivative((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p * ExpandToSum(((~c * (4 * ~p + 2 * ~q + 1) * (~d + ~e * (~x) ^ 2) ^ ~q - ~a * (2 * ~q - 3) * (~e) ^ ~q * (~x) ^ (2 * ~q - 4)) - ~b * ((2 * ~p + 2 * ~q) - 1) * (~e) ^ ~q * (~x) ^ (2 * ~q - 2)) - ~c * (4 * ~p + 2 * ~q + 1) * (~e) ^ ~q * (~x) ^ (2 * ~q), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IGtQ(~q, 1)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~e) ^ ~q * (~x) ^ (2 * ~q - 3) * (~a + ~c * (~x) ^ 4) ^ (~p + 1)) / (~c * (4 * ~p + 2 * ~q + 1)) + (1 / (~c * (4 * ~p + 2 * ~q + 1))) * Antiderivative((~a + ~c * (~x) ^ 4) ^ ~p * ExpandToSum((~c * (4 * ~p + 2 * ~q + 1) * (~d + ~e * (~x) ^ 2) ^ ~q - ~a * (2 * ~q - 3) * (~e) ^ ~q * (~x) ^ (2 * ~q - 4)) - ~c * (4 * ~p + 2 * ~q + 1) * (~e) ^ ~q * (~x) ^ (2 * ~q), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IGtQ(~q, 1))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p / (~d + ~(e') * (~x) ^ 2), ~x) => (-1 / (~e) ^ 2) * Antiderivative(((~c * ~d - ~b * ~e) - ~c * ~e * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1), ~x) + (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / (~e) ^ 2) * Antiderivative((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IGtQ(~p + 1 / 2, 0)))
    @apply_utils Antiderivative((~a + ~(c') * (~x) ^ 4) ^ ~p / (~d + ~(e') * (~x) ^ 2), ~x) => (-1 / (~e) ^ 2) * Antiderivative((~c * ~d - ~c * ~e * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ (~p - 1), ~x) + ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / (~e) ^ 2) * Antiderivative((~a + ~c * (~x) ^ 4) ^ (~p - 1) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IGtQ(~p + 1 / 2, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => (1 / (2 * ~d)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + (1 / (2 * ~d)) * Antiderivative((~d - ~e * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => (1 / (2 * ~d)) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) + (1 / (2 * ~d)) * Antiderivative((~d - ~e * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], 2 * sqrt(-(~c)) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(~b + q + 2 * ~c * (~x) ^ 2) * sqrt((-(~b) + q) - 2 * ~c * (~x) ^ 2)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && LtQ(~c, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(-(~a) * ~c, 2)], sqrt(-(~c)) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(q + ~c * (~x) ^ 2) * sqrt(q - ~c * (~x) ^ 2)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (GtQ(~a, 0) && LtQ(~c, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((2 * ~c) / (2 * ~c * ~d - ~e * (~b - q))) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) - (~e / (2 * ~c * ~d - ~e * (~b - q))) * Antiderivative(((~b - q) + 2 * ~c * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (GtQ((~b) ^ 2 - 4 * ~a * ~c, 0) && Not(LtQ(~c, 0)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(-(~a) * ~c, 2)], (~c / (~c * ~d + ~e * q)) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) + (~e / (~c * ~d + ~e * q)) * Antiderivative((q - ~c * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (GtQ(-(~a) * ~c, 0) && Not(LtQ(~c, 0)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], ((~c * ~d + ~a * ~e * q) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) - ((~a * ~e * (~e + ~d * q)) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && PosQ(~c / ~a))))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], ((~c * ~d + ~a * ~e * q) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) - ((~a * ~e * (~e + ~d * q)) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && PosQ(~c / ~a)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(-(~c) / ~a, 4)], (1 / (~d * sqrt(~a) * q)) * Elliptic.Pi(-(~e) / (~d * q ^ 2), asin(q * ~x), -1)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NegQ(~c / ~a) && GtQ(~a, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => (sqrt(1 + (~c * (~x) ^ 4) / ~a) / sqrt(~a + ~c * (~x) ^ 4)) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(1 + (~c * (~x) ^ 4) / ~a)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NegQ(~c / ~a) && Not(GtQ(~a, 0)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b - q)) * sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b + q))) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b - q)) * sqrt(1 + (2 * ~c * (~x) ^ 2) / (~b + q))), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NegQ(~c / ~a))
    @apply_utils Antiderivative((~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~c * ~d - ~b * ~e) - ~c * ~e * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) + ((~e) ^ 2 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && ILtQ(~p + 1 / 2, 0)))
    @apply_utils Antiderivative((~a + ~(c') * (~x) ^ 4) ^ ~p / (~d + ~(e') * (~x) ^ 2), ~x) => (1 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~c * ~d - ~c * ~e * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ ~p, ~x) + ((~e) ^ 2 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~a + ~c * (~x) ^ 4) ^ (~p + 1) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && ILtQ(~p + 1 / 2, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => (-((~e) ^ 2) * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (2 * ~d * (~q + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + (1 / (2 * ~d * (~q + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative(((~d + ~e * (~x) ^ 2) ^ (~q + 1) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) * Simp(((~a * (~e) ^ 2 * (2 * ~q + 3) + 2 * ~d * (~c * ~d - ~b * ~e) * (~q + 1)) - 2 * ~e * (~c * ~d * (~q + 1) - ~b * ~e * (~q + 2)) * (~x) ^ 2) + ~c * (~e) ^ 2 * (2 * ~q + 5) * (~x) ^ 4, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && ILtQ(~q, -1))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q / sqrt(~a + ~(c') * (~x) ^ 4), ~x) => (-((~e) ^ 2) * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * sqrt(~a + ~c * (~x) ^ 4)) / (2 * ~d * (~q + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + (1 / (2 * ~d * (~q + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2))) * Antiderivative(((~d + ~e * (~x) ^ 2) ^ (~q + 1) / sqrt(~a + ~c * (~x) ^ 4)) * Simp(((~a * (~e) ^ 2 * (2 * ~q + 3) + 2 * ~c * (~d) ^ 2 * (~q + 1)) - 2 * ~e * ~c * ~d * (~q + 1) * (~x) ^ 2) + ~c * (~e) ^ 2 * (2 * ~q + 5) * (~x) ^ 4, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && ILtQ(~q, -1)
    @apply_utils Antiderivative(sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => With([q = Rt(~e / ~d, 2)], ((~c * (~d + ~e * (~x) ^ 2) * sqrt(((~e) ^ 2 * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (~c * (~d + ~e * (~x) ^ 2) ^ 2))) / (2 * ~d * (~e) ^ 2 * q * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Elliptic.E(2 * atan(q * ~x), (2 * ~c * ~d - ~b * ~e) / (4 * ~c * ~d))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && PosQ(~e / ~d))))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((~x * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (2 * ~d * (~d + ~e * (~x) ^ 2)) + (~c / (2 * ~d * (~e) ^ 2)) * Antiderivative((~d - ~e * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x)) - ((~c * (~d) ^ 2 - ~a * (~e) ^ 2) / (2 * ~d * (~e) ^ 2)) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(sqrt(~a + ~(c') * (~x) ^ 4) / (~d + ~(e') * (~x) ^ 2) ^ 2, ~x) => ((~x * sqrt(~a + ~c * (~x) ^ 4)) / (2 * ~d * (~d + ~e * (~x) ^ 2)) + (~c / (2 * ~d * (~e) ^ 2)) * Antiderivative((~d - ~e * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x)) - ((~c * (~d) ^ 2 - ~a * (~e) ^ 2) / (2 * ~d * (~e) ^ 2)) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Module([aa, bb, cc], Antiderivative(ReplaceAll(ExpandIntegrand(1 / sqrt(aa + bb * (~x) ^ 2 + cc * (~x) ^ 4), (~d + ~e * (~x) ^ 2) ^ ~q * (aa + bb * (~x) ^ 2 + cc * (~x) ^ 4) ^ (~p + 1 / 2), ~x), [(aa->begin
                                    #= none:1 =#
                                    #= none:3 =#
                                    ~a
                                end), (bb->begin
                                    #= none:4 =#
                                    #= none:6 =#
                                    ~b
                                end), (cc->begin
                                    #= none:7 =#
                                    #= none:9 =#
                                    ~c
                                end)]), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (ILtQ(~q, 0) && IntegerQ(~p + 1 / 2))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Module([aa, cc], Antiderivative(ReplaceAll(ExpandIntegrand(1 / sqrt(aa + cc * (~x) ^ 4), (~d + ~e * (~x) ^ 2) ^ ~q * (aa + cc * (~x) ^ 4) ^ (~p + 1 / 2), ~x), [(aa->begin
                                    #= none:1 =#
                                    #= none:3 =#
                                    ~a
                                end), (cc->begin
                                    #= none:4 =#
                                    #= none:6 =#
                                    ~c
                                end)]), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (ILtQ(~q, 0) && IntegerQ(~p + 1 / 2)))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => (1 / (2 * sqrt(~a) * sqrt(~d) * Rt(-(~e) / ~d, 2))) * Elliptic.F(2 * asin(Rt(-(~e) / ~d, 2) * ~x), (~b * ~d) / (4 * ~a * ~e)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~c * ~d - ~b * ~e, 0) && (GtQ(~a, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => ((sqrt((~d + ~e * (~x) ^ 2) / ~d) * sqrt((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) / ~a)) / (sqrt(~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Antiderivative(1 / (sqrt(1 + (~e / ~d) * (~x) ^ 2) * sqrt(1 + (~b / ~a) * (~x) ^ 2 + (~c / ~a) * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~c * ~d - ~b * ~e, 0) && Not(GtQ(~a, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => (((~x) ^ 3 * sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~b / (~x) ^ 2 + ~a / (~x) ^ 4)) / (sqrt(~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Antiderivative(1 / ((~x) ^ 3 * sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~b / (~x) ^ 2 + ~a / (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => (((~x) ^ 3 * sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~a / (~x) ^ 4)) / (sqrt(~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4))) * Antiderivative(1 / ((~x) ^ 3 * sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~a / (~x) ^ 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative(sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => (sqrt(~a) / (2 * sqrt(~d) * Rt(-(~e) / ~d, 2))) * Elliptic.E(2 * asin(Rt(-(~e) / ~d, 2) * ~x), (~b * ~d) / (4 * ~a * ~e)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~c * ~d - ~b * ~e, 0) && (GtQ(~a, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) * sqrt((~d + ~e * (~x) ^ 2) / ~d)) / (sqrt(~d + ~e * (~x) ^ 2) * sqrt((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) / ~a))) * Antiderivative(sqrt(1 + (~b / ~a) * (~x) ^ 2 + (~c / ~a) * (~x) ^ 4) / sqrt(1 + (~e / ~d) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (EqQ(~c * ~d - ~b * ~e, 0) && Not(GtQ(~a, 0) && GtQ(~d, 0)))
    @apply_utils Antiderivative(sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((sqrt(~e + ~d / (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (~x * sqrt(~d + ~e * (~x) ^ 2) * sqrt(~c + ~b / (~x) ^ 2 + ~a / (~x) ^ 4))) * Antiderivative((~x * sqrt(~c + ~b / (~x) ^ 2 + ~a / (~x) ^ 4)) / sqrt(~e + ~d / (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(sqrt(~a + ~(c') * (~x) ^ 4) / sqrt(~d + ~(e') * (~x) ^ 2), ~x) => ((sqrt(~e + ~d / (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)) / (~x * sqrt(~d + ~e * (~x) ^ 2) * sqrt(~c + ~a / (~x) ^ 4))) * Antiderivative((~x * sqrt(~c + ~a / (~x) ^ 4)) / sqrt(~e + ~d / (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IntegerQ(~p) && IntegerQ(~q) || (IGtQ(~p, 0) || IGtQ(~q, 0))))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p, ~q], ~x) && (IntegerQ(~p) && IntegerQ(~q) || IGtQ(~p, 0))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~a + ~c * (~x) ^ 4) ^ ~p, (~d / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 4) - (~e * (~x) ^ 2) / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 4)) ^ -(~q), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ILtQ(~q, 0)))
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Unintegrable((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x)
    @apply_utils Antiderivative((~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Unintegrable((~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p, ~q], ~x)
end
