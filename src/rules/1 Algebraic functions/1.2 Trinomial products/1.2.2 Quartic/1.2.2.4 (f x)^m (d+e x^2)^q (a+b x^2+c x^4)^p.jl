int_rules_1_2_2_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 1.2.2.4*(f*x)^m*(d+e*x^2)^q*(a+b*x^2+c*x^4)^p =#
    #= Antiderivative(((~f')*(~x))^(~m')*((~e')*(~x)^2)^(~q')*((~a)+(~b')*(~x)^2+(~c')*(~x)^4)^(~p'),(~x)*Symbol) := e^q/f^(2*q)*Antiderivative((f*x)^(m+2*q)*(a+b*x^2+c*x^4)^p,x) <--  FreeQ([a,b,c,e,f,m,p],x) && IntegerQ(q) =#
    #= Antiderivative(((~f')*(~x))^(~m')*((~e')*(~x)^2)^(~q')*((~a)+(~c')*(~x)^4)^(~p'),~x) :=  e^q/f^(2*q)*Antiderivative((f*x)^(m+2*q)*(a+c*x^4)^p,x) <--  FreeQ([a,c,e,f,m,p],x) && IntegerQ(q) =#
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (1 / (2 * (~e) ^ ((~m - 1) / 2))) * Subst(Antiderivative((~e * ~x) ^ (~q + (~m - 1) / 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~e, ~p, ~q], ~x) && (Not(IntegerQ(~q)) && IntegerQ((~m - 1) / 2))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (1 / (2 * (~e) ^ ((~m - 1) / 2))) * Subst(Antiderivative((~e * ~x) ^ (~q + (~m - 1) / 2) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~c, ~e, ~p, ~q], ~x) && (Not(IntegerQ(~q)) && IntegerQ((~m - 1) / 2))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (((~e) ^ IntPart(~q) * (~e * (~x) ^ 2) ^ FracPart(~q)) / ((~f) ^ (2 * IntPart(~q)) * (~f * ~x) ^ (2 * FracPart(~q)))) * Antiderivative((~f * ~x) ^ (~m + 2 * ~q) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~e, ~f, ~m, ~p, ~q], ~x) && Not(IntegerQ(~q))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (((~e) ^ IntPart(~q) * (~e * (~x) ^ 2) ^ FracPart(~q)) / ((~f) ^ (2 * IntPart(~q)) * (~f * ~x) ^ (2 * FracPart(~q)))) * Antiderivative((~f * ~x) ^ (~m + 2 * ~q) * (~a + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~e, ~f, ~m, ~p, ~q], ~x) && Not(IntegerQ(~q))
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (1 / 2) * Subst(Antiderivative((~d + ~e * ~x) ^ ~q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x)
    @apply_utils Antiderivative(~x * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (1 / 2) * Subst(Antiderivative((~d + ~e * ~x) ^ ~q * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~c, ~d, ~e, ~p, ~q], ~x)
    #= Antiderivative(((~f')*(~x))^(~m')*((~d)+(~e')*(~x)^2)^(~q')*((~a)+(~b')*(~x)^2+(~c')*(~x)^4)^(~p'),(~x)*Symbol) := 1/c^p*Antiderivative((f*x)^m*(d+e*x^2)^q*(b/2+c*x^2)^(2*p),x) <--  FreeQ([a,b,c,d,e,f,m,p,q],x) && EqQ(b^2-4*a*c,0) && IntegerQ(p) =#
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (1 / 2) * Subst(Antiderivative((~x) ^ ((~m - 1) / 2) * (~d + ~e * ~x) ^ ~q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && IGtQ((~m + 1) / 2, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~c) ^ IntPart(~p) * (~b / 2 + ~c * (~x) ^ 2) ^ (2 * FracPart(~p)))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~b / 2 + ~c * (~x) ^ 2) ^ (2 * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && Not(IntegerQ(~p)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (1 / 2) * Subst(Antiderivative((~x) ^ ((~m - 1) / 2) * (~d + ~e * ~x) ^ ~q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p, ~q], ~x) && IntegerQ((~m - 1) / 2)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (1 / 2) * Subst(Antiderivative((~x) ^ ((~m - 1) / 2) * (~d + ~e * ~x) ^ ~q * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, (~x) ^ 2) <-- FreeQ([~a, ~c, ~d, ~e, ~p, ~q], ~x) && IntegerQ((~m + 1) / 2)
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + ~p) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IntegerQ(~p)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + ~p) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~q, ~m, ~q], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IntegerQ(~p))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~d + ~e * (~x) ^ 2) ^ FracPart(~p) * (~a / ~d + (~c * (~x) ^ 2) / ~e) ^ FracPart(~p))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + ~p) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~p))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~a + ~c * (~x) ^ 4) ^ FracPart(~p) / ((~d + ~e * (~x) ^ 2) ^ FracPart(~p) * (~a / ~d + (~c * (~x) ^ 2) / ~e) ^ FracPart(~p))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + ~p) * (~a / ~d + (~c / ~e) * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~p)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((-(~d)) ^ (~m / 2 - 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) ^ ~p * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1)) + (1 / (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(Together((1 / (~d + ~e * (~x) ^ 2)) * (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1) * (~x) ^ ~m * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p - (-(~d)) ^ (~m / 2 - 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) ^ ~p * (~d + ~e * (2 * ~q + 3) * (~x) ^ 2))), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) && (ILtQ(~q, -1) && IGtQ(~m / 2, 0))))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((-(~d)) ^ (~m / 2 - 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2) ^ ~p * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1)) + (1 / (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1))) * Antiderivative((~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(Together((1 / (~d + ~e * (~x) ^ 2)) * (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1) * (~x) ^ ~m * (~a + ~c * (~x) ^ 4) ^ ~p - (-(~d)) ^ (~m / 2 - 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2) ^ ~p * (~d + ~e * (2 * ~q + 3) * (~x) ^ 2))), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (ILtQ(~q, -1) && IGtQ(~m / 2, 0)))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((-(~d)) ^ (~m / 2 - 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) ^ ~p * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1)) + ((-(~d)) ^ (~m / 2 - 1) / (2 * (~e) ^ (2 * ~p) * (~q + 1))) * Antiderivative((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(Together((1 / (~d + ~e * (~x) ^ 2)) * (2 * (-(~d)) ^ (-(~m) / 2 + 1) * (~e) ^ (2 * ~p) * (~q + 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p - ((~e) ^ (-(~m) / 2) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) ^ ~p * (~x) ^ -(~m)) * (~d + ~e * (2 * ~q + 3) * (~x) ^ 2))), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) && (ILtQ(~q, -1) && ILtQ(~m / 2, 0))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((-(~d)) ^ (~m / 2 - 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2) ^ ~p * ~x * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * (~e) ^ (2 * ~p + ~m / 2) * (~q + 1)) + ((-(~d)) ^ (~m / 2 - 1) / (2 * (~e) ^ (2 * ~p) * (~q + 1))) * Antiderivative((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(Together((1 / (~d + ~e * (~x) ^ 2)) * (2 * (-(~d)) ^ (-(~m) / 2 + 1) * (~e) ^ (2 * ~p) * (~q + 1) * (~a + ~c * (~x) ^ 4) ^ ~p - ((~e) ^ (-(~m) / 2) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2) ^ ~p * (~x) ^ -(~m)) * (~d + ~e * (2 * ~q + 3) * (~x) ^ 2))), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (IGtQ(~p, 0) && (ILtQ(~q, -1) && ILtQ(~m / 2, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) && IGtQ(~q, -2)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (IGtQ(~p, 0) && IGtQ(~q, -2))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), R = Coeff(PolynomialRemainder((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), ~x, 0)], (-R * (~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * ~d * ~f * (~q + 1)) + (~f / (2 * ~d * (~q + 1))) * Antiderivative((~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(2 * ~d * (~q + 1) * ~x * Qx + R * (~m + 2 * ~q + 3) * ~x, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) && (LtQ(~q, -1) && GtQ(~m, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), R = Coeff(PolynomialRemainder((~a + ~c * (~x) ^ 4) ^ ~p, ~d + ~e * (~x) ^ 2, ~x), ~x, 0)], (-R * (~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (2 * ~d * ~f * (~q + 1)) + (~f / (2 * ~d * (~q + 1))) * Antiderivative((~f * ~x) ^ (~m - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * ExpandToSum(2 * ~d * (~q + 1) * ~x * Qx + R * (~m + 2 * ~q + 3) * ~x, ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (IGtQ(~p, 0) && (LtQ(~q, -1) && GtQ(~m, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~f * ~x, ~x), R = PolynomialRemainder((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~f * ~x, ~x)], (R * (~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~d * ~f * (~m + 1)) + (1 / (~d * (~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ ~q * ExpandToSum((~d * ~f * (~m + 1) * Qx) / ~x - ~e * R * (~m + 2 * ~q + 3), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) && LtQ(~m, -1)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~c * (~x) ^ 4) ^ ~p, ~f * ~x, ~x), R = PolynomialRemainder((~a + ~c * (~x) ^ 4) ^ ~p, ~f * ~x, ~x)], (R * (~f * ~x) ^ (~m + 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~d * ~f * (~m + 1)) + (1 / (~d * (~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ ~q * ExpandToSum((~d * ~f * (~m + 1) * Qx) / ~x - ~e * R * (~m + 2 * ~q + 3), ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~q], ~x) && (IGtQ(~p, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~c) ^ ~p * (~f * ~x) ^ ((~m + 4 * ~p) - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~e * (~f) ^ (4 * ~p - 1) * (~m + 4 * ~p + 2 * ~q + 1)) + (1 / (~e * (~m + 4 * ~p + 2 * ~q + 1))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * ExpandToSum(~e * (~m + 4 * ~p + 2 * ~q + 1) * ((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p - (~c) ^ ~p * (~x) ^ (4 * ~p)) - ~d * (~c) ^ ~p * ((~m + 4 * ~p) - 1) * (~x) ^ (4 * ~p - 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) && (Not(IntegerQ(~q)) && NeQ(~m + 4 * ~p + 2 * ~q + 1, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~c) ^ ~p * (~f * ~x) ^ ((~m + 4 * ~p) - 1) * (~d + ~e * (~x) ^ 2) ^ (~q + 1)) / (~e * (~f) ^ (4 * ~p - 1) * (~m + 4 * ~p + 2 * ~q + 1)) + (1 / (~e * (~m + 4 * ~p + 2 * ~q + 1))) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * ExpandToSum(~e * (~m + 4 * ~p + 2 * ~q + 1) * ((~a + ~c * (~x) ^ 4) ^ ~p - (~c) ^ ~p * (~x) ^ (4 * ~p)) - ~d * (~c) ^ ~p * ((~m + 4 * ~p) - 1) * (~x) ^ (4 * ~p - 2), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (IGtQ(~p, 0) && (Not(IntegerQ(~q)) && NeQ(~m + 4 * ~p + 2 * ~q + 1, 0)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => With([k = Denominator(~m)], (k / ~f) * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~d + (~e * (~x) ^ (2k)) / (~f) ^ 2) ^ ~q * (~a + (~b * (~x) ^ (2k)) / (~f) ^ k + (~c * (~x) ^ (4k)) / (~f) ^ 4) ^ ~p, ~x), ~x, (~f * ~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (FractionQ(~m) && IntegerQ(~p)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => With([k = Denominator(~m)], (k / ~f) * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~d + (~e * (~x) ^ (2k)) / ~f) ^ ~q * (~a + (~c * (~x) ^ (4k)) / ~f) ^ ~p, ~x), ~x, (~f * ~x) ^ (1 / k))) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~p, ~q], ~x) && (FractionQ(~m) && IntegerQ(~p))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~f * ~x) ^ (~m + 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p * (~d * (~m + 4 * ~p + 3) + ~e * (~m + 1) * (~x) ^ 2)) / (~f * (~m + 1) * (~m + 4 * ~p + 3)) + ((2 * ~p) / ((~f) ^ 2 * (~m + 1) * (~m + 4 * ~p + 3))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1) * Simp((2 * ~a * ~e * (~m + 1) - ~b * ~d * (~m + 4 * ~p + 3)) + (~b * ~e * (~m + 1) - 2 * ~c * ~d * (~m + 4 * ~p + 3)) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~p, 0) && (LtQ(~m, -1) && (~m + 4 * ~p + 3 != 0 && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~f * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 4) ^ ~p * (~d * (~m + 4 * ~p + 3) + ~e * (~m + 1) * (~x) ^ 2)) / (~f * (~m + 1) * (~m + 4 * ~p + 3)) + ((4 * ~p) / ((~f) ^ 2 * (~m + 1) * (~m + 4 * ~p + 3))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~a + ~c * (~x) ^ 4) ^ (~p - 1) * (~a * ~e * (~m + 1) - ~c * ~d * (~m + 4 * ~p + 3) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && (LtQ(~m, -1) && (~m + 4 * ~p + 3 != 0 && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~f * ~x) ^ (~m + 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p * (~b * ~e * 2 * ~p + ~c * ~d * (~m + 4 * ~p + 3) + ~c * ~e * (4 * ~p + ~m + 1) * (~x) ^ 2)) / (~c * ~f * (4 * ~p + ~m + 1) * (~m + 4 * ~p + 3)) + ((2 * ~p) / (~c * (4 * ~p + ~m + 1) * (~m + 4 * ~p + 3))) * Antiderivative((~f * ~x) ^ ~m * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1) * Simp((2 * ~a * ~c * ~d * (~m + 4 * ~p + 3) - ~a * ~b * ~e * (~m + 1)) + ((2 * ~a * ~c * ~e * (4 * ~p + ~m + 1) + ~b * ~c * ~d * (~m + 4 * ~p + 3)) - (~b) ^ 2 * ~e * (~m + 2 * ~p + 1)) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~p, 0) && (NeQ(4 * ~p + ~m + 1, 0) && (NeQ(~m + 4 * ~p + 3, 0) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m)))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => ((~f * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 4) ^ ~p * (~c * ~d * (~m + 4 * ~p + 3) + ~c * ~e * (4 * ~p + ~m + 1) * (~x) ^ 2)) / (~c * ~f * (4 * ~p + ~m + 1) * (~m + 4 * ~p + 3)) + ((4 * ~a * ~p) / ((4 * ~p + ~m + 1) * (~m + 4 * ~p + 3))) * Antiderivative((~f * ~x) ^ ~m * (~a + ~c * (~x) ^ 4) ^ (~p - 1) * Simp(~d * (~m + 4 * ~p + 3) + ~e * (4 * ~p + ~m + 1) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x) && (GtQ(~p, 0) && (NeQ(4 * ~p + ~m + 1, 0) && (NeQ(~m + 4 * ~p + 3, 0) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (~f * (~f * ~x) ^ (~m - 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * ((~b * ~d - 2 * ~a * ~e) - (~b * ~e - 2 * ~c * ~d) * (~x) ^ 2)) / (2 * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) - ((~f) ^ 2 / (2 * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * Simp((~m - 1) * (~b * ~d - 2 * ~a * ~e) - (4 * ~p + 4 + ~m + 1) * (~b * ~e - 2 * ~c * ~d) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && (GtQ(~m, 1) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => (~f * (~f * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 4) ^ (~p + 1) * (~a * ~e - ~c * ~d * (~x) ^ 2)) / (4 * ~a * ~c * (~p + 1)) - ((~f) ^ 2 / (4 * ~a * ~c * (~p + 1))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a + ~c * (~x) ^ 4) ^ (~p + 1) * (~a * ~e * (~m - 1) - ~c * ~d * (4 * ~p + 4 + ~m + 1) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (LtQ(~p, -1) && (GtQ(~m, 1) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (-((~f * ~x) ^ (~m + 1)) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * ((~d * ((~b) ^ 2 - 2 * ~a * ~c) - ~a * ~b * ~e) + (~b * ~d - 2 * ~a * ~e) * ~c * (~x) ^ 2)) / (2 * ~a * ~f * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~f * ~x) ^ ~m * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * Simp((~d * ((~b) ^ 2 * (~m + 2 * (~p + 1) + 1) - 2 * ~a * ~c * (~m + 4 * (~p + 1) + 1)) - ~a * ~b * ~e * (~m + 1)) + ~c * (~m + 2 * (2 * ~p + 3) + 1) * (~b * ~d - 2 * ~a * ~e) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (-((~f * ~x) ^ (~m + 1)) * (~a + ~c * (~x) ^ 4) ^ (~p + 1) * (~d + ~e * (~x) ^ 2)) / (4 * ~a * ~f * (~p + 1)) + (1 / (4 * ~a * (~p + 1))) * Antiderivative((~f * ~x) ^ ~m * (~a + ~c * (~x) ^ 4) ^ (~p + 1) * Simp(~d * (~m + 4 * (~p + 1) + 1) + ~e * (~m + 2 * (2 * ~p + 3) + 1) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x) && (LtQ(~p, -1) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~e * ~f * (~f * ~x) ^ (~m - 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~c * (~m + 4 * ~p + 3)) - ((~f) ^ 2 / (~c * (~m + 4 * ~p + 3))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p * Simp(~a * ~e * (~m - 1) + (~b * ~e * (~m + 2 * ~p + 1) - ~c * ~d * (~m + 4 * ~p + 3)) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~m, 1) && (NeQ(~m + 4 * ~p + 3, 0) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m))))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~e * ~f * (~f * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 4) ^ (~p + 1)) / (~c * (~m + 4 * ~p + 3)) - ((~f) ^ 2 / (~c * (~m + 4 * ~p + 3))) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a + ~c * (~x) ^ 4) ^ ~p * (~a * ~e * (~m - 1) - ~c * ~d * (~m + 4 * ~p + 3) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~p], ~x) && (GtQ(~m, 1) && (NeQ(~m + 4 * ~p + 3, 0) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~d * (~f * ~x) ^ (~m + 1) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~a * ~f * (~m + 1)) + (1 / (~a * (~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p * Simp((~a * ~e * (~m + 1) - ~b * ~d * (~m + 2 * ~p + 3)) - ~c * ~d * (~m + 4 * ~p + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~m, -1) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m)))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => (~d * (~f * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 4) ^ (~p + 1)) / (~a * ~f * (~m + 1)) + (1 / (~a * (~f) ^ 2 * (~m + 1))) * Antiderivative((~f * ~x) ^ (~m + 2) * (~a + ~c * (~x) ^ 4) ^ ~p * (~a * ~e * (~m + 1) - ~c * ~d * (~m + 4 * ~p + 5) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~p], ~x) && (LtQ(~m, -1) && (IntegerQ(2 * ~p) && (IntegerQ(~p) || IntegerQ(~m))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2)) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([r = Rt((~c / ~e) * (2 * ~c * ~d - ~b * ~e), 2)], (~e / 2) * Antiderivative((~f * ~x) ^ ~m / (((~c * ~d) / ~e - r * ~x) + ~c * (~x) ^ 2), ~x) + (~e / 2) * Antiderivative((~f * ~x) ^ ~m / ((~c * ~d) / ~e + r * ~x + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && (GtQ(~d / ~e, 0) && PosQ((~c / ~e) * (2 * ~c * ~d - ~b * ~e)))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2)) / (~a + ~(c') * (~x) ^ 4), ~x) => With([r = Rt((2 * (~c) ^ 2 * ~d) / ~e, 2)], (~e / 2) * Antiderivative((~f * ~x) ^ ~m / (((~c * ~d) / ~e - r * ~x) + ~c * (~x) ^ 2), ~x) + (~e / 2) * Antiderivative((~f * ~x) ^ ~m / ((~c * ~d) / ~e + r * ~x + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x) && (EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0) && GtQ(~d / ~e, 0))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2)) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], (~e / 2 + (2 * ~c * ~d - ~b * ~e) / (2q)) * Antiderivative((~f * ~x) ^ ~m / ((~b / 2 - q / 2) + ~c * (~x) ^ 2), ~x) + (~e / 2 - (2 * ~c * ~d - ~b * ~e) / (2q)) * Antiderivative((~f * ~x) ^ ~m / (~b / 2 + q / 2 + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && NeQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2)) / (~a + ~(c') * (~x) ^ 4), ~x) => With([q = Rt(-(~a) * ~c, 2)], -((~e / 2 + (~c * ~d) / (2q))) * Antiderivative((~f * ~x) ^ ~m / (q - ~c * (~x) ^ 2), ~x) + (~e / 2 - (~c * ~d) / (2q)) * Antiderivative((~f * ~x) ^ ~m / (q + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x)
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q')) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IntegerQ(~q) && IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q')) / (~a + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q) / (~a + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x) && (IntegerQ(~q) && IntegerQ(~m))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q')) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m, (~d + ~e * (~x) ^ 2) ^ ~q / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IntegerQ(~q) && Not(IntegerQ(~m))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q')) / (~a + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m, (~d + ~e * (~x) ^ 2) ^ ~q / (~a + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x) && (IntegerQ(~q) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => ((~f) ^ 4 / (~c) ^ 2) * Antiderivative((~f * ~x) ^ (~m - 4) * ((~c * ~d - ~b * ~e) + ~c * ~e * (~x) ^ 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1), ~x) - ((~f) ^ 4 / (~c) ^ 2) * Antiderivative(((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * Simp(~a * (~c * ~d - ~b * ~e) + ((~b * ~c * ~d - (~b) ^ 2 * ~e) + ~a * ~c * ~e) * (~x) ^ 2, ~x)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && (GtQ(~q, 0) && GtQ(~m, 3))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => ((~f) ^ 4 / ~c) * Antiderivative((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) - ((~a * (~f) ^ 4) / ~c) * Antiderivative(((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ ~q) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~q], ~x) && (Not(IntegerQ(~q)) && GtQ(~m, 3))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => ((~e * (~f) ^ 2) / ~c) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1), ~x) - ((~f) ^ 2 / ~c) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * Simp(~a * ~e - (~c * ~d - ~b * ~e) * (~x) ^ 2, ~x)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && (GtQ(~q, 0) && (GtQ(~m, 1) && LeQ(~m, 3)))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => ((~e * (~f) ^ 2) / ~c) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1), ~x) - ((~f) ^ 2 / ~c) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * Simp(~a * ~e - ~c * ~d * (~x) ^ 2, ~x)) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (Not(IntegerQ(~q)) && (GtQ(~q, 0) && (GtQ(~m, 1) && LeQ(~m, 3))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => (~d / ~a) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q - 1), ~x) - (1 / (~a * (~f) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * Simp((~b * ~d - ~a * ~e) + ~c * ~d * (~x) ^ 2, ~x)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && (GtQ(~q, 0) && LtQ(~m, 0))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => (~d / ~a) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q - 1), ~x) + (1 / (~a * (~f) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~d + ~e * (~x) ^ 2) ^ (~q - 1) * Simp(~a * ~e - ~c * ~d * (~x) ^ 2, ~x)) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (Not(IntegerQ(~q)) && (GtQ(~q, 0) && LtQ(~m, 0)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => (((~d) ^ 2 * (~f) ^ 4) / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) - ((~f) ^ 4 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * Simp(~a * ~d + (~b * ~d - ~a * ~e) * (~x) ^ 2, ~x)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && (LtQ(~q, -1) && GtQ(~m, 3))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => (((~d) ^ 2 * (~f) ^ 4) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) - ((~a * (~f) ^ 4) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 4) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~d - ~e * (~x) ^ 2)) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (Not(IntegerQ(~q)) && (LtQ(~q, -1) && GtQ(~m, 3)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => ((-(~d) * ~e * (~f) ^ 2) / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) + ((~f) ^ 2 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * Simp(~a * ~e + ~c * ~d * (~x) ^ 2, ~x)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && (LtQ(~q, -1) && (GtQ(~m, 1) && LeQ(~m, 3)))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(d') + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => ((-(~d) * ~e * (~f) ^ 2) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) + ((~f) ^ 2 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * Simp(~a * ~e + ~c * ~d * (~x) ^ 2, ~x)) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (Not(IntegerQ(~q)) && (LtQ(~q, -1) && (GtQ(~m, 1) && LeQ(~m, 3))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => ((~e) ^ 2 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) + (1 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * Simp((~c * ~d - ~b * ~e) - ~c * ~e * (~x) ^ 2, ~x)) / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && LtQ(~q, -1)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => ((~e) ^ 2 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~x) + (~c / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ (~q + 1) * (~d - ~e * (~x) ^ 2)) / (~a + ~c * (~x) ^ 4), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m], ~x) && (Not(IntegerQ(~q)) && LtQ(~q, -1))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q, (~f * ~x) ^ ~m / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * (~x) ^ 2) ^ ~q, (~f * ~x) ^ ~m / (~a + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~q], ~x) && (Not(IntegerQ(~q)) && IntegerQ(~m))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, 1 / (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~q)) && Not(IntegerQ(~m))))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, 1 / (~a + ~c * (~x) ^ 4), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && (Not(IntegerQ(~q)) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4), ~x) => With([r = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((2 * ~c) / r) * Antiderivative(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q) / ((~b - r) + 2 * ~c * (~x) ^ 2), ~x) - ((2 * ~c) / r) * Antiderivative(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q) / (~b + r + 2 * ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~q], ~x) && NeQ((~b) ^ 2 - 4 * ~a * ~c, 0)
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q) / (~a + ~(c') * (~x) ^ 4), ~x) => With([r = Rt(-(~a) * ~c, 2)], (-(~c) / (2r)) * Antiderivative(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q) / (r - ~c * (~x) ^ 2), ~x) - (~c / (2r)) * Antiderivative(((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q) / (r + ~c * (~x) ^ 2), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~q], ~x)
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p')) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (1 / (~d) ^ 2) * Antiderivative((~f * ~x) ^ ~m * (~a * ~d + (~b * ~d - ~a * ~e) * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1), ~x) + (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / ((~d) ^ 2 * (~f) ^ 4)) * Antiderivative(((~f * ~x) ^ (~m + 4) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~p, 0) && LtQ(~m, -2)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 4) ^ ~(p')) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (~a / (~d) ^ 2) * Antiderivative((~f * ~x) ^ ~m * (~d - ~e * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ (~p - 1), ~x) + ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / ((~d) ^ 2 * (~f) ^ 4)) * Antiderivative(((~f * ~x) ^ (~m + 4) * (~a + ~c * (~x) ^ 4) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && LtQ(~m, -2))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~(a') + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p')) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (1 / (~d * ~e)) * Antiderivative((~f * ~x) ^ ~m * (~a * ~e + ~c * ~d * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1), ~x) - (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / (~d * ~e * (~f) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (GtQ(~p, 0) && LtQ(~m, 0)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 4) ^ ~(p')) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (1 / (~d * ~e)) * Antiderivative((~f * ~x) ^ ~m * (~a * ~e + ~c * ~d * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ (~p - 1), ~x) - ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / (~d * ~e * (~f) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m + 2) * (~a + ~c * (~x) ^ 4) ^ (~p - 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (GtQ(~p, 0) && LtQ(~m, 0))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p) / (~(d') + ~(e') * (~x) ^ 2), ~x) => (-((~f) ^ 4) / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 4) * (~a * ~d + (~b * ~d - ~a * ~e) * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) + (((~d) ^ 2 * (~f) ^ 4) / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 4) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && GtQ(~m, 2)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~a + ~(c') * (~x) ^ 4) ^ ~p) / (~(d') + ~(e') * (~x) ^ 2), ~x) => ((-(~a) * (~f) ^ 4) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 4) * (~d - ~e * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ ~p, ~x) + (((~d) ^ 2 * (~f) ^ 4) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 4) * (~a + ~c * (~x) ^ 4) ^ (~p + 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (LtQ(~p, -1) && GtQ(~m, 2))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~(a') + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p) / (~(d') + ~(e') * (~x) ^ 2), ~x) => ((~f) ^ 2 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a * ~e + ~c * ~d * (~x) ^ 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) - ((~d * ~e * (~f) ^ 2) / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && GtQ(~m, 0)))
    @apply_utils Antiderivative(((~(f') * ~x) ^ ~(m') * (~a + ~(c') * (~x) ^ 4) ^ ~p) / (~(d') + ~(e') * (~x) ^ 2), ~x) => ((~f) ^ 2 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~f * ~x) ^ (~m - 2) * (~a * ~e + ~c * ~d * (~x) ^ 2) * (~a + ~c * (~x) ^ 4) ^ ~p, ~x) - ((~d * ~e * (~f) ^ 2) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~f * ~x) ^ (~m - 2) * (~a + ~c * (~x) ^ 4) ^ (~p + 1)) / (~d + ~e * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f], ~x) && (LtQ(~p, -1) && GtQ(~m, 0))
    @apply_utils Antiderivative((~x) ^ 2 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => (~d / (2 * ~d * ~e)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) - (~d / (2 * ~d * ~e)) * Antiderivative((~d - ~e * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (PosQ(~c / ~a) && EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0))))
    @apply_utils Antiderivative((~x) ^ 2 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => (~d / (2 * ~d * ~e)) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) - (~d / (2 * ~d * ~e)) * Antiderivative((~d - ~e * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (PosQ(~c / ~a) && EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~x) ^ 2 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], ((-(~a) * (~e + ~d * q)) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + ((~a * ~d * (~e + ~d * q)) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (PosQ(~c / ~a) && NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0))))
    @apply_utils Antiderivative((~x) ^ 2 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], ((-(~a) * (~e + ~d * q)) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) + ((~a * ~d * (~e + ~d * q)) / (~c * (~d) ^ 2 - ~a * (~e) ^ 2)) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (PosQ(~c / ~a) && NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~x) ^ 4 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => (-1 / (~e) ^ 2) * Antiderivative((~d - ~e * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + ((~d) ^ 2 / (~e) ^ 2) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (PosQ(~c / ~a) && EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~x) ^ 4 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => (-1 / (~e) ^ 2) * Antiderivative((~d - ~e * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x) + ((~d) ^ 2 / (~e) ^ 2) * Antiderivative(1 / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (PosQ(~c / ~a) && EqQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~x) ^ 4 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], (-1 / (~e * q)) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) + ((~d) ^ 2 / (~e * (~e - ~d * q))) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x) <-- EqQ(2 * ~c * ~d - ~a * ~e * q, 0)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (PosQ(~c / ~a) && NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~x) ^ 4 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], (-1 / (~e * q)) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x) + ((~d) ^ 2 / (~e * (~e - ~d * q))) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x) <-- EqQ(2 * ~c * ~d - ~a * ~e * q, 0)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (PosQ(~c / ~a) && NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~x) ^ 4 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], ((-((2 * ~c * ~d - ~a * ~e * q)) / (~c * ~e * (~e - ~d * q))) * Antiderivative(1 / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x) - (1 / (~e * q)) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x)) + ((~d) ^ 2 / (~e * (~e - ~d * q))) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (PosQ(~c / ~a) && NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~x) ^ 4 / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => With([q = Rt(~c / ~a, 2)], ((-((2 * ~c * ~d - ~a * ~e * q)) / (~c * ~e * (~e - ~d * q))) * Antiderivative(1 / sqrt(~a + ~c * (~x) ^ 4), ~x) - (1 / (~e * q)) * Antiderivative((1 - q * (~x) ^ 2) / sqrt(~a + ~c * (~x) ^ 4), ~x)) + ((~d) ^ 2 / (~e * (~e - ~d * q))) * Antiderivative((1 + q * (~x) ^ 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (PosQ(~c / ~a) && NeQ(~c * (~d) ^ 2 - ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~x) ^ ~m / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => ((~x) ^ (~m - 5) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (~c * ~e * (~m - 3)) - (1 / (~c * ~e * (~m - 3))) * Antiderivative(((~x) ^ (~m - 6) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Simp(~a * ~d * (~m - 5) + (~a * ~e * (~m - 5) + ~b * ~d * (~m - 4)) * (~x) ^ 2 + (~b * ~e * (~m - 4) + ~c * ~d * (~m - 3)) * (~x) ^ 4, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && IGtQ(~m / 2, 2))
    @apply_utils Antiderivative((~x) ^ ~m / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => ((~x) ^ (~m - 5) * sqrt(~a + ~c * (~x) ^ 4)) / (~c * ~e * (~m - 3)) - (1 / (~c * ~e * (~m - 3))) * Antiderivative(((~x) ^ (~m - 6) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4))) * Simp(~a * ~d * (~m - 5) + ~a * ~e * (~m - 5) * (~x) ^ 2 + ~c * ~d * (~m - 3) * (~x) ^ 4, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && IGtQ(~m / 2, 2)
    @apply_utils Antiderivative((~x) ^ ~m / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => ((~x) ^ (~m + 1) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4)) / (~a * ~d * (~m + 1)) - (1 / (~a * ~d * (~m + 1))) * Antiderivative(((~x) ^ (~m + 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Simp(~a * ~e * (~m + 1) + ~b * ~d * (~m + 2) + (~b * ~e * (~m + 2) + ~c * ~d * (~m + 3)) * (~x) ^ 2 + ~c * ~e * (~m + 3) * (~x) ^ 4, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && ILtQ(~m / 2, 0))
    @apply_utils Antiderivative((~x) ^ ~m / ((~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => ((~x) ^ (~m + 1) * sqrt(~a + ~c * (~x) ^ 4)) / (~a * ~d * (~m + 1)) - (1 / (~a * ~d * (~m + 1))) * Antiderivative(((~x) ^ (~m + 2) / ((~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4))) * Simp(~a * ~e * (~m + 1) + ~c * ~d * (~m + 3) * (~x) ^ 2 + ~c * ~e * (~m + 3) * (~x) ^ 4, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && ILtQ(~m / 2, 0)
    @apply_utils Antiderivative((~x) ^ ~m / (sqrt(~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4)), ~x) => (((~x) ^ 3 * sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~b / (~x) ^ 2 + ~a / (~x) ^ 4)) / (sqrt(~d + ~e * (~x) ^ 2) * sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4))) * Antiderivative((~x) ^ (~m - 3) / (sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~b / (~x) ^ 2 + ~a / (~x) ^ 4)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && IntegerQ(~m / 2))
    @apply_utils Antiderivative((~x) ^ ~m / (sqrt(~d + ~(e') * (~x) ^ 2) * sqrt(~a + ~(c') * (~x) ^ 4)), ~x) => (((~x) ^ 3 * sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~a / (~x) ^ 4)) / (sqrt(~d + ~e * (~x) ^ 2) * sqrt(~a + ~c * (~x) ^ 4))) * Antiderivative((~x) ^ (~m - 3) / (sqrt(~e + ~d / (~x) ^ 2) * sqrt(~c + ~a / (~x) ^ 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && IntegerQ(~m / 2)
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => With([f = Coeff(PolynomialRemainder((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x), ~x, 0), g = Coeff(PolynomialRemainder((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x), ~x, 2)], (~x * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * ((~a * ~b * g - f * ((~b) ^ 2 - 2 * ~a * ~c)) - ~c * (~b * f - 2 * ~a * g) * (~x) ^ 2)) / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * Simp(ExpandToSum((((2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c) * PolynomialQuotient((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x) + (~b) ^ 2 * f * (2 * ~p + 3)) - 2 * ~a * ~c * f * (4 * ~p + 5)) - ~a * ~b * g) + ~c * (4 * ~p + 7) * (~b * f - 2 * ~a * g) * (~x) ^ 2, ~x), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && (IGtQ(~q, 1) && IGtQ(~m / 2, 0))))
    @apply_utils Antiderivative((~x) ^ ~m * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~p, ~x) => With([f = Coeff(PolynomialRemainder((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x), ~x, 0), g = Coeff(PolynomialRemainder((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x), ~x, 2)], (~x * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * ((~a * ~b * g - f * ((~b) ^ 2 - 2 * ~a * ~c)) - ~c * (~b * f - 2 * ~a * g) * (~x) ^ 2)) / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / (2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~x) ^ ~m * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ (~p + 1) * Simp(ExpandToSum(2 * ~a * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c) * (~x) ^ -(~m) * PolynomialQuotient((~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q, ~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4, ~x) + (((~b) ^ 2 * f * (2 * ~p + 3) - 2 * ~a * ~c * f * (4 * ~p + 5)) - ~a * ~b * g) * (~x) ^ -(~m) + ~c * (4 * ~p + 7) * (~b * f - 2 * ~a * g) * (~x) ^ (2 - ~m), ~x), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && (IGtQ(~q, 1) && ILtQ(~m / 2, 0))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (IGtQ(~p, 0) || (IGtQ(~q, 0) || IntegersQ(~m, ~q))))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~c * (~x) ^ 4) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x) && (IGtQ(~p, 0) || (IGtQ(~q, 0) || IntegersQ(~m, ~q)))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~q * (~a + ~(c') * (~x) ^ 4) ^ ~p, ~x) => ((~f * ~x) ^ ~m / (~x) ^ ~m) * Antiderivative(ExpandIntegrand((~x) ^ ~m * (~a + ~c * (~x) ^ 4) ^ ~p, (~d / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 4) - (~e * (~x) ^ 2) / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 4)) ^ -(~q), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~p], ~x) && (Not(IntegerQ(~p)) && ILtQ(~q, 0))
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(b') * (~x) ^ 2 + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Unintegrable((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x)
    @apply_utils Antiderivative((~(f') * ~x) ^ ~(m') * (~d + ~(e') * (~x) ^ 2) ^ ~(q') * (~a + ~(c') * (~x) ^ 4) ^ ~(p'), ~x) => Unintegrable((~f * ~x) ^ ~m * (~d + ~e * (~x) ^ 2) ^ ~q * (~a + ~c * (~x) ^ 4) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~m, ~p, ~q], ~x)
end
