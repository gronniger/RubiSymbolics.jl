int_rules_1_2_1_4 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 1.2.1.4*(d+e*x)^m*(f+g*x)^n*(a+b*x+c*x^2)^p =#
    @apply_utils Antiderivative((~x) ^ ~(m') * (~f + ~(g') * ~x) ^ ~(n') * (~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~c * (~x) ^ (~m + 2) * (~f + ~g * ~x) ^ (~n + 1)) / (~g * (~m + ~n + 3)) <-- FreeQ([~b, ~c, ~f, ~g, ~m, ~n], ~x) && (EqQ(~c * ~f * (~m + 2) - ~b * ~g * (~m + ~n + 3), 0) && NeQ(~m + ~n + 3, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p) / ((~c) ^ IntPart(~p) * (~b / 2 + ~c * ~x) ^ (2 * FracPart(~p)))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~b / 2 + ~c * ~x) ^ (2 * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && Not(IntegerQ(~p))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~f + ~g * ~x) ^ ~n * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(~p) && Not(IGtQ(~n, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~f + ~g * ~x) ^ ~n * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(~p) || GtQ(~a, 0) && (GtQ(~d, 0) && EqQ(~m + ~p, 0)))))
    @apply_utils Antiderivative(((~x) ^ ~(n') * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => Antiderivative((~x) ^ ~n * (~a / ~d + (~c * ~x) / ~e) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (Not(IntegerQ(~n)) || (Not(IntegerQ(2 * ~p)) || (IGtQ(~n, 2) || GtQ(~p, 0) && NeQ(~n, 2)))))))
    @apply_utils Antiderivative(((~x) ^ ~(n') * (~a + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => Antiderivative((~x) ^ ~n * (~a / ~d + (~c * ~x) / ~e) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~n, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (Not(IntegerQ(~n)) || (Not(IntegerQ(2 * ~p)) || (IGtQ(~n, 2) || GtQ(~p, 0) && NeQ(~n, 2))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative((~a / ~d + (~c * ~x) / ~e) ^ -(~m) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~m + ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (ILtQ(~m, 0) && (IntegerQ(~n) && (LtQ(~n, 0) || GtQ(~p, 0))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d) ^ (2 * ~m) / (~a) ^ ~m) * Antiderivative(((~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~m + ~p)) / (~d - ~e * ~x) ^ ~m, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~f, 0) && (ILtQ(~m, -1) && Not(IGtQ(~n, 0) && (ILtQ(~m + ~n, 0) && Not(GtQ(~p, 1)))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d) ^ (2 * ~m) / (~a) ^ ~m) * Antiderivative(((~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~m + ~p)) / (~d - ~e * ~x) ^ ~m, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (ILtQ(~m, 0) && IntegerQ(~n)))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => (-((2 * ~c * ~d - ~b * ~e)) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~e * ~p * ((~b) ^ 2 - 4 * ~a * ~c) * (~d + ~e * ~x)) - (1 / (~d * ~e * ~p * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~f + ~g * ~x) ^ (~n - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p * Simp((~b * (~a * ~e * ~g * ~n - ~c * ~d * ~f * (2 * ~p + 1)) - 2 * ~a * ~c * (~d * ~g * ~n - ~e * ~f * (2 * ~p + 1))) - ~c * ~g * (~b * ~d - 2 * ~a * ~e) * (~n + 2 * ~p + 1) * ~x, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (IGtQ(~n, 0) && ILtQ(~n + 2 * ~p, 0))))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => (~d * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * ~e * ~p * (~d + ~e * ~x)) - (1 / (2 * ~d * ~e * ~p)) * Antiderivative((~f + ~g * ~x) ^ (~n - 1) * (~a + ~c * (~x) ^ 2) ^ ~p * Simp((~d * ~g * ~n - ~e * ~f * (2 * ~p + 1)) - ~e * ~g * (~n + 2 * ~p + 1) * ~x, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (IGtQ(~n, 0) && ILtQ(~n + 2 * ~p, 0)))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => ((~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p * ((~c * ~d - ~b * ~e) - ~c * ~e * ~x)) / (~p * (2 * ~c * ~d - ~b * ~e) * (~e * ~f - ~d * ~g)) + (1 / (~p * (2 * ~c * ~d - ~b * ~e) * (~e * ~f - ~d * ~g))) * Antiderivative((~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p * (((~b * ~e * ~g * (~n + ~p + 1) + ~c * ~e * ~f * (2 * ~p + 1)) - ~c * ~d * ~g * (~n + 2 * ~p + 1)) + ~c * ~e * ~g * (~n + 2 * ~p + 2) * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (ILtQ(~n, 0) && (ILtQ(~n + 2 * ~p, 0) && Not(IGtQ(~n, 0))))))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => (~d * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * ~p * (~e * ~f - ~d * ~g) * (~d + ~e * ~x)) + (1 / (~p * (2 * ~c * ~d) * (~e * ~f - ~d * ~g))) * Antiderivative((~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p * ((~c * ~e * ~f * (2 * ~p + 1) - ~c * ~d * ~g * (~n + 2 * ~p + 1)) + ~c * ~e * ~g * (~n + 2 * ~p + 2) * ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (ILtQ(~n, 0) && (ILtQ(~n + 2 * ~p, 0) && Not(IGtQ(~n, 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ((~m - ~n) - 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (EqQ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g, 0) && NeQ((~m - ~n) - 1, 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ((~m - ~n) - 1)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (EqQ(~e * ~f + ~d * ~g, 0) && NeQ((~m - ~n) - 1, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~e) ^ 2) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~n + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && EqQ((~m - ~n) - 2, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~e) ^ 2) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~n + 1) * (~e * ~f + ~d * ~g)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && EqQ((~m - ~n) - 2, 0)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~g * (~n + 1)) + ((~c * ~m) / (~e * ~g * (~n + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (GtQ(~p, 0) && (LtQ(~n, -1) && Not(IntegerQ(~n + ~p) && LeQ(~n + ~p + 2, 0)))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / (~g * (~n + 1)) + ((~c * ~m) / (~e * ~g * (~n + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (GtQ(~p, 0) && (LtQ(~n, -1) && Not(IntegerQ(~n + ~p) && LeQ(~n + ~p + 2, 0))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~d + ~e * ~x) ^ ~m) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~g * ((~m - ~n) - 1)) - ((~m * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g)) / ((~e) ^ 2 * ~g * ((~m - ~n) - 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (GtQ(~p, 0) && (NeQ((~m - ~n) - 1, 0) && (Not(IGtQ(~n, 0)) && (Not(IntegerQ(~n + ~p) && LtQ(~n + ~p + 2, 0)) && RationalQ(~n))))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~d + ~e * ~x) ^ ~m) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / (~g * ((~m - ~n) - 1)) - ((~c * ~m * (~e * ~f + ~d * ~g)) / ((~e) ^ 2 * ~g * ((~m - ~n) - 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (GtQ(~p, 0) && (NeQ((~m - ~n) - 1, 0) && (Not(IGtQ(~n, 0)) && (Not(IntegerQ(~n + ~p) && LtQ(~n + ~p + 2, 0)) && RationalQ(~n)))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) - ((~e * ~g * ~n) / (~c * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (LtQ(~p, -1) && GtQ(~n, 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) - ((~e * ~g * ~n) / (~c * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (LtQ(~p, -1) && GtQ(~n, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g)) + (((~e) ^ 2 * ~g * ((~m - ~n) - 2)) / ((~p + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (LtQ(~p, -1) && RationalQ(~n)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1) * (~e * ~f + ~d * ~g)) + (((~e) ^ 2 * ~g * ((~m - ~n) - 2)) / (~c * (~p + 1) * (~e * ~f + ~d * ~g))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (LtQ(~p, -1) && RationalQ(~n))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ((~m - ~n) - 1)) - ((~n * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g)) / (~c * ~e * ((~m - ~n) - 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ (~n - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (GtQ(~n, 0) && (NeQ((~m - ~n) - 1, 0) && (IntegerQ(2 * ~p) || IntegerQ(~n)))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ((~m - ~n) - 1)) - ((~n * (~e * ~f + ~d * ~g)) / (~e * ((~m - ~n) - 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ (~n - 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (GtQ(~n, 0) && (NeQ((~m - ~n) - 1, 0) && (IntegerQ(2 * ~p) || IntegerQ(~n))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~e) ^ 2) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~n + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g)) - ((~c * ~e * ((~m - ~n) - 2)) / ((~n + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (LtQ(~n, -1) && IntegerQ(2 * ~p)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~e) ^ 2) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~n + 1) * (~c * ~e * ~f + ~c * ~d * ~g)) - ((~e * ((~m - ~n) - 2)) / ((~n + 1) * (~e * ~f + ~d * ~g))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~p, 0) && (LtQ(~n, -1) && IntegerQ(2 * ~p))))))
    @apply_utils Antiderivative(sqrt(~d + ~(e') * ~x) / ((~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => 2 * (~e) ^ 2 * Subst(Antiderivative(1 / ((~c * (~e * ~f + ~d * ~g) - ~b * ~e * ~g) + (~e) ^ 2 * ~g * (~x) ^ 2), ~x), ~x, sqrt(~a + ~b * ~x + ~c * (~x) ^ 2) / sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(sqrt(~d + ~(e') * ~x) / ((~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => 2 * (~e) ^ 2 * Subst(Antiderivative(1 / (~c * (~e * ~f + ~d * ~g) + (~e) ^ 2 * ~g * (~x) ^ 2), ~x), ~x, sqrt(~a + ~c * (~x) ^ 2) / sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 2) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~g * (~n + ~p + 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ((~m + ~p) - 1, 0) && (EqQ((~b * ~e * ~g * (~n + 1) + ~c * ~e * ~f * (~p + 1)) - ~c * ~d * ~g * (2 * ~n + ~p + 3), 0) && NeQ(~n + ~p + 2, 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 2) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~g * (~n + ~p + 2)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ((~m + ~p) - 1, 0) && (EqQ(~e * ~f * (~p + 1) - ~d * ~g * (2 * ~n + ~p + 3), 0) && NeQ(~n + ~p + 2, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~e * ~f - ~d * ~g) * (~d + ~e * ~x) ^ (~m - 2) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~g * (~n + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g)) - ((~e * ((~b * ~e * ~g * (~n + 1) + ~c * ~e * ~f * (~p + 1)) - ~c * ~d * ~g * (2 * ~n + ~p + 3))) / (~g * (~n + 1) * ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ((~m + ~p) - 1, 0) && (LtQ(~n, -1) && IntegerQ(2 * ~p)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~e * ~f - ~d * ~g) * (~d + ~e * ~x) ^ (~m - 2) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~g * (~n + 1) * (~e * ~f + ~d * ~g)) - ((~e * (~e * ~f * (~p + 1) - ~d * ~g * (2 * ~n + ~p + 3))) / (~g * (~n + 1) * (~e * ~f + ~d * ~g))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ((~m + ~p) - 1, 0) && (LtQ(~n, -1) && IntegerQ(2 * ~p))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 2) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~g * (~n + ~p + 2)) - (((~b * ~e * ~g * (~n + 1) + ~c * ~e * ~f * (~p + 1)) - ~c * ~d * ~g * (2 * ~n + ~p + 3)) / (~c * ~g * (~n + ~p + 2))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ((~m + ~p) - 1, 0) && (Not(LtQ(~n, -1)) && IntegerQ(2 * ~p)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 2) * (~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~g * (~n + ~p + 2)) - ((~e * ~f * (~p + 1) - ~d * ~g * (2 * ~n + ~p + 3)) / (~g * (~n + ~p + 2))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ((~m + ~p) - 1, 0) && (Not(LtQ(~n, -1)) && IntegerQ(2 * ~p))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (ILtQ(~m, 0) && ((ILtQ(~n, 0) || IGtQ(~n, 0) && ILtQ(~p + 1 / 2, 0)) && Not(IGtQ(~n, 0))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative(ExpandIntegrand(1 / sqrt(~a + ~c * (~x) ^ 2), (~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ (~p + 1 / 2), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(~p - 1 / 2) && (ILtQ(~m, 0) && (ILtQ(~n, 0) && Not(IGtQ(~n, 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (ILtQ(~m, 0) && ((ILtQ(~n, 0) || IGtQ(~n, 0) && ILtQ(~p + 1 / 2, 0)) && Not(IGtQ(~n, 0)))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => With([Q = PolynomialQuotient((~f + ~g * ~x) ^ ~n, ~a * ~e + ~c * ~d * ~x, ~x), h = PolynomialRemainder((~f + ~g * ~x) ^ ~n, ~a * ~e + ~c * ~d * ~x, ~x)], (h * (2 * ~c * ~d - ~b * ~e) * (~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~e * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1) * ExpandToSum(~d * ~e * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c) * Q - h * (2 * ~c * ~d - ~b * ~e) * (~m + 2 * ~p + 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (ILtQ(~p + 1 / 2, 0) && (IGtQ(~m, 0) && (IGtQ(~n, 0) && Not(IGtQ(~n, 0))))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => With([Q = PolynomialQuotient((~f + ~g * ~x) ^ ~n, ~a * ~e + ~c * ~d * ~x, ~x), h = PolynomialRemainder((~f + ~g * ~x) ^ ~n, ~a * ~e + ~c * ~d * ~x, ~x)], (-(~d) * h * (~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * ~e * (~p + 1)) + (~d / (2 * ~a * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1) * ExpandToSum(2 * ~a * ~e * (~p + 1) * Q + h * (~m + 2 * ~p + 2), ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (ILtQ(~p + 1 / 2, 0) && (IGtQ(~m, 0) && (IGtQ(~n, 0) && Not(IGtQ(~n, 0)))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, (~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~n + 2 * ~p + 1, 0) && (ILtQ(~m, 0) && ILtQ(~n, 0)))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~a + ~c * (~x) ^ 2) ^ ~p, (~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (EqQ(~m + ~n + 2 * ~p + 1, 0) && (ILtQ(~m, 0) && ILtQ(~n, 0))))))
    #= Antiderivative(((~d')+(~e')*(~x))^(~m')*((~f')+(~g')*(~x))^(~n)*((~a')+(~b')*(~x)+(~c')*(~x)^2)^(~p),(~x)*Symbol) :=  g^n*(d+e*x)^(m+n-1)*(a+b*x+c*x^2)^(p+1)/(c*e^(n-1)*(m+n+2*p+1)) + 1/(c*e^n*(m+n+2*p+1))*Antiderivative((d+e*x)^m*(a+b*x+c*x^2)^p* ExpandToSum(c*e^n*(m+n+2*p+1)*(f+g*x)^n-c*g^n*(m+n+2*p+1)*(d+e*x)^ n+e*g^n*(m+p+n)*(d+e*x)^(n-2)*(b*d-2*a*e+(2*c*d-b*e)*x),x),x) <--  FreeQ([a,b,c,d,e,f,g,m,p],x) && NeQ(e*f-d*g,0) && NeQ(b^2-4*a*c,0) &&  EqQ(c*d^2-b*d*e+a*e^2,0) && Not(IntegerQ(p)) && NeQ(m+n+2*p+1,0) && IGtQ(n,0) =#
    #= Antiderivative(((~d')+(~e')*(~x))^(~m')*((~f')+(~g')*(~x))^(~n)*((~a)+(~c')*(~x)^2)^(~p),~x) :=   g^n*(d+e*x)^(m+n-1)*(a+c*x^2)^(p+1)/(c*e^(n-1)*(m+n+2*p+1)) + 1/(c*e^n*(m+n+2*p+1))*Antiderivative((d+e*x)^m*(a+c*x^2)^p* ExpandToSum(c*e^n*(m+n+2*p+1)*(f+g*x)^n-c*g^n*(m+n+2*p+1)*(d+e*x)^ n-2*e*g^n*(m+p+n)*(d+e*x)^(n-2)*(a*e-c*d*x),x),x) <--  FreeQ([a,c,d,e,f,g,m,p],x) && NeQ(e*f-d*g,0) && EqQ(c*d^2+a*e^2,0) &&  Not(IntegerQ(p)) && NeQ(m+n+2*p+1,0) && IGtQ(n,0) =#
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~e * ~x) ^ ~m * (~b * ~x + ~c * (~x) ^ 2) ^ ~p) / ((~x) ^ (~m + ~p) * (~b + ~c * ~x) ^ ~p)) * Antiderivative((~x) ^ (~m + ~p) * (~f + ~g * ~x) ^ ~n * (~b + ~c * ~x) ^ ~p, ~x) <-- FreeQ([~b, ~c, ~e, ~f, ~g, ~m, ~n], ~x) && (Not(IntegerQ(~p)) && Not(IGtQ(~n, 0)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~f + ~g * ~x) ^ ~n * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (GtQ(~a, 0) && (GtQ(~d, 0) && (Not(IGtQ(~m, 0)) && Not(IGtQ(~n, 0))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p) / ((~d + ~e * ~x) ^ FracPart(~p) * (~a / ~d + (~c * ~x) / ~e) ^ FracPart(~p))) * Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~f + ~g * ~x) ^ ~n * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (Not(IGtQ(~m, 0)) && Not(IGtQ(~n, 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a + ~c * (~x) ^ 2) ^ FracPart(~p) / ((~d + ~e * ~x) ^ FracPart(~p) * (~a / ~d + (~c * ~x) / ~e) ^ FracPart(~p))) * Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~f + ~g * ~x) ^ ~n * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (Not(IGtQ(~m, 0)) && Not(IGtQ(~n, 0))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(~p) && (EqQ(~p, 1) && IntegersQ(~m, ~n) || ILtQ(~m, 0) && ILtQ(~n, 0))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(~p) && (EqQ(~p, 1) && IntegersQ(~m, ~n) || ILtQ(~m, 0) && ILtQ(~n, 0)))))
    @apply_utils Antiderivative((~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p / ((~(d') + ~(e') * ~x) * (~(f') + ~(g') * ~x)), ~x) => (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / (~e * (~e * ~f - ~d * ~g))) * Antiderivative((~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1) / (~d + ~e * ~x), ~x) - (1 / (~e * (~e * ~f - ~d * ~g))) * Antiderivative((Simp(((~c * ~d * ~f - ~b * ~e * ~f) + ~a * ~e * ~g) - ~c * (~e * ~f - ~d * ~g) * ~x, ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1)) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (FractionQ(~p) && GtQ(~p, 0)))))
    @apply_utils Antiderivative((~a + ~(c') * (~x) ^ 2) ^ ~p / ((~(d') + ~(e') * ~x) * (~(f') + ~(g') * ~x)), ~x) => ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / (~e * (~e * ~f - ~d * ~g))) * Antiderivative((~a + ~c * (~x) ^ 2) ^ (~p - 1) / (~d + ~e * ~x), ~x) - (1 / (~e * (~e * ~f - ~d * ~g))) * Antiderivative((Simp((~c * ~d * ~f + ~a * ~e * ~g) - ~c * (~e * ~f - ~d * ~g) * ~x, ~x) * (~a + ~c * (~x) ^ 2) ^ (~p - 1)) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (FractionQ(~p) && GtQ(~p, 0))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => With([q = Denominator(~m)], (q / ~e) * Subst(Antiderivative((~x) ^ (q * (~m + 1) - 1) * ((~e * ~f - ~d * ~g) / ~e + (~g * (~x) ^ q) / ~e) ^ ~n * ((((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / (~e) ^ 2 - ((2 * ~c * ~d - ~b * ~e) * (~x) ^ q) / (~e) ^ 2) + (~c * (~x) ^ (2q)) / (~e) ^ 2) ^ ~p, ~x), ~x, (~d + ~e * ~x) ^ (1 / q))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegersQ(~n, ~p) && FractionQ(~m)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => With([q = Denominator(~m)], (q / ~e) * Subst(Antiderivative((~x) ^ (q * (~m + 1) - 1) * ((~e * ~f - ~d * ~g) / ~e + (~g * (~x) ^ q) / ~e) ^ ~n * (((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / (~e) ^ 2 - (2 * ~c * ~d * (~x) ^ q) / (~e) ^ 2) + (~c * (~x) ^ (2q)) / (~e) ^ 2) ^ ~p, ~x), ~x, (~d + ~e * ~x) ^ (1 / q))) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegersQ(~n, ~p) && FractionQ(~m))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d * ~f + ~e * ~g * (~x) ^ 2) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (EqQ(~m - ~n, 0) && (EqQ(~e * ~f + ~d * ~g, 0) && (IntegerQ(~m) || GtQ(~d, 0) && GtQ(~f, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~n * (~(a') + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d * ~f + ~e * ~g * (~x) ^ 2) ^ ~m * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (EqQ(~m - ~n, 0) && (EqQ(~e * ~f + ~d * ~g, 0) && (IntegerQ(~m) || GtQ(~d, 0) && GtQ(~f, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (((~d + ~e * ~x) ^ FracPart(~m) * (~f + ~g * ~x) ^ FracPart(~m)) / (~d * ~f + ~e * ~g * (~x) ^ 2) ^ FracPart(~m)) * Antiderivative((~d * ~f + ~e * ~g * (~x) ^ 2) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (EqQ(~m - ~n, 0) && EqQ(~e * ~f + ~d * ~g, 0))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~f + ~(g') * ~x) ^ ~n * (~(a') + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d + ~e * ~x) ^ FracPart(~m) * (~f + ~g * ~x) ^ FracPart(~m)) / (~d * ~f + ~e * ~g * (~x) ^ 2) ^ FracPart(~m)) * Antiderivative((~d * ~f + ~e * ~g * (~x) ^ 2) ^ ~m * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (EqQ(~m - ~n, 0) && EqQ(~e * ~f + ~d * ~g, 0))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~g / (~c) ^ 2) * Antiderivative(Simp(((2 * ~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g) + ~c * ~e * ~g * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 2), ~x) + (1 / (~c) ^ 2) * Antiderivative((Simp((((~c) ^ 2 * ~d * (~f) ^ 2 - 2 * ~a * ~c * ~e * ~f * ~g) - ~a * ~c * ~d * (~g) ^ 2) + ~a * ~b * ~e * (~g) ^ 2 + ((((((~c) ^ 2 * ~e * (~f) ^ 2 + 2 * (~c) ^ 2 * ~d * ~f * ~g) - 2 * ~b * ~c * ~e * ~f * ~g) - ~b * ~c * ~d * (~g) ^ 2) + (~b) ^ 2 * ~e * (~g) ^ 2) - ~a * ~c * ~e * (~g) ^ 2) * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 2)) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && (Not(IntegerQ(~n)) && (GtQ(~m, 0) && GtQ(~n, 1))))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~a + ~(c') * (~x) ^ 2), ~x) => (~g / ~c) * Antiderivative(Simp(2 * ~e * ~f + ~d * ~g + ~e * ~g * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 2), ~x) + (1 / ~c) * Antiderivative((Simp(((~c * ~d * (~f) ^ 2 - 2 * ~a * ~e * ~f * ~g) - ~a * ~d * (~g) ^ 2) + ((~c * ~e * (~f) ^ 2 + 2 * ~c * ~d * ~f * ~g) - ~a * ~e * (~g) ^ 2) * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 2)) / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && (Not(IntegerQ(~n)) && (GtQ(~m, 0) && GtQ(~n, 1)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~e * ~g) / ~c) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 1), ~x) + (1 / ~c) * Antiderivative((Simp((~c * ~d * ~f - ~a * ~e * ~g) + ((~c * ~e * ~f + ~c * ~d * ~g) - ~b * ~e * ~g) * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 1)) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && (Not(IntegerQ(~n)) && (GtQ(~m, 0) && GtQ(~n, 0))))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~a + ~(c') * (~x) ^ 2), ~x) => ((~e * ~g) / ~c) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 1), ~x) + (1 / ~c) * Antiderivative((Simp((~c * ~d * ~f - ~a * ~e * ~g) + (~c * ~e * ~f + ~c * ~d * ~g) * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n - 1)) / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && (Not(IntegerQ(~n)) && (GtQ(~m, 0) && GtQ(~n, 0)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((-(~g) * (~e * ~f - ~d * ~g)) / ((~c * (~f) ^ 2 - ~b * ~f * ~g) + ~a * (~g) ^ 2)) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n, ~x) + (1 / ((~c * (~f) ^ 2 - ~b * ~f * ~g) + ~a * (~g) ^ 2)) * Antiderivative((Simp((~c * ~d * ~f - ~b * ~d * ~g) + ~a * ~e * ~g + ~c * (~e * ~f - ~d * ~g) * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1)) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && (Not(IntegerQ(~n)) && (GtQ(~m, 0) && LtQ(~n, -1))))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~a + ~(c') * (~x) ^ 2), ~x) => ((-(~g) * (~e * ~f - ~d * ~g)) / (~c * (~f) ^ 2 + ~a * (~g) ^ 2)) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ ~n, ~x) + (1 / (~c * (~f) ^ 2 + ~a * (~g) ^ 2)) * Antiderivative((Simp(~c * ~d * ~f + ~a * ~e * ~g + ~c * (~e * ~f - ~d * ~g) * ~x, ~x) * (~d + ~e * ~x) ^ (~m - 1) * (~f + ~g * ~x) ^ (~n + 1)) / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && (Not(IntegerQ(~n)) && (GtQ(~m, 0) && LtQ(~n, -1)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (sqrt(~(f') + ~(g') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => Antiderivative(ExpandIntegrand(1 / (sqrt(~d + ~e * ~x) * sqrt(~f + ~g * ~x)), (~d + ~e * ~x) ^ (~m + 1 / 2) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IGtQ(~m + 1 / 2, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (sqrt(~(f') + ~(g') * ~x) * (~(a') + ~(c') * (~x) ^ 2)), ~x) => Antiderivative(ExpandIntegrand(1 / (sqrt(~d + ~e * ~x) * sqrt(~f + ~g * ~x)), (~d + ~e * ~x) ^ (~m + 1 / 2) / (~a + ~c * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IGtQ(~m + 1 / 2, 0))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n, 1 / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && Not(IntegerQ(~n)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n) / (~a + ~(c') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n, 1 / (~a + ~c * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~m)) && Not(IntegerQ(~n))))
    @apply_utils Antiderivative((~x) ^ 2 * (~(d') + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~e * (~m + 2 * ~p + 3)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~b * ~e * (~m + ~p + 2) + 2 * ~c * ~d * (~p + 1), 0) && (EqQ(~b * ~d * (~p + 1) + ~a * ~e * (~m + 1), 0) && NeQ(~m + 2 * ~p + 3, 0)))
    @apply_utils Antiderivative((~x) ^ 2 * (~(d') + ~(e') * ~x) ^ ~(m') * (~(a') + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * ~e * (~m + 2 * ~p + 3)) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~d * (~p + 1), 0) && (EqQ(~a * (~m + 1), 0) && NeQ(~m + 2 * ~p + 3, 0)))
    @apply_utils Antiderivative((~(g') * ~x) ^ ~n * (~(d') + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d + ~e * ~x) ^ FracPart(~p) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p)) / (~a * ~d + ~c * ~e * (~x) ^ 3) ^ FracPart(~p)) * Antiderivative((~g * ~x) ^ ~n * (~a * ~d + ~c * ~e * (~x) ^ 3) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~g, ~m, ~n, ~p], ~x) && (EqQ(~m - ~p, 0) && (EqQ(~b * ~d + ~a * ~e, 0) && EqQ(~c * ~d + ~b * ~e, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - (1 / (2 * ~e * (~m + 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp(~b * ~f + ~a * ~g + 2 * (~c * ~f + ~b * ~g) * ~x + 3 * ~c * ~g * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LtQ(~m, -1)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / (~e * (~m + 1)) - (1 / (2 * ~e * (~m + 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp(~a * ~g + 2 * ~c * ~f * ~x + 3 * ~c * ~g * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LtQ(~m, -1))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (2 * (~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~e * (2 * ~m + 5)) - (1 / (~e * (2 * ~m + 5))) * Antiderivative(((~d + ~e * ~x) ^ ~m / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp(((~b * ~d * ~f - 3 * ~a * ~e * ~f) + ~a * ~d * ~g + 2 * (((~c * ~d * ~f - ~b * ~e * ~f) + ~b * ~d * ~g) - ~a * ~e * ~g) * ~x) - ((~c * ~e * ~f - 3 * ~c * ~d * ~g) + ~b * ~e * ~g) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && Not(LtQ(~m, -1))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2), ~x) => (2 * (~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / (~e * (2 * ~m + 5)) + (1 / (~e * (2 * ~m + 5))) * Antiderivative(((~d + ~e * ~x) ^ ~m / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp(((3 * ~a * ~e * ~f - ~a * ~d * ~g) - 2 * (~c * ~d * ~f - ~a * ~e * ~g) * ~x) + (~c * ~e * ~f - 3 * ~c * ~d * ~g) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && Not(LtQ(~m, -1)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)) / sqrt(~(f') + ~(g') * ~x), ~x) => (2 * (~d + ~e * ~x) ^ ~m * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~g * (2 * ~m + 3)) - (1 / (~g * (2 * ~m + 3))) * Antiderivative(((~d + ~e * ~x) ^ (~m - 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp((~b * ~d * ~f + 2 * ~a * (~e * ~f * ~m - ~d * ~g * (~m + 1)) + ((2 * ~c * ~d * ~f - 2 * ~a * ~e * ~g) + ~b * (~e * ~f - ~d * ~g) * (2 * ~m + 1)) * ~x) - (~b * ~e * ~g + 2 * ~c * (~d * ~g * ~m - ~e * ~f * (~m + 1))) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && GtQ(~m, 0)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~a + ~(c') * (~x) ^ 2)) / sqrt(~(f') + ~(g') * ~x), ~x) => (2 * (~d + ~e * ~x) ^ ~m * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / (~g * (2 * ~m + 3)) - (1 / (~g * (2 * ~m + 3))) * Antiderivative(((~d + ~e * ~x) ^ (~m - 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp((2 * ~a * (~e * ~f * ~m - ~d * ~g * (~m + 1)) + (2 * ~c * ~d * ~f - 2 * ~a * ~e * ~g) * ~x) - (2 * ~c * (~d * ~g * ~m - ~e * ~f * (~m + 1))) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && GtQ(~m, 0))))
    @apply_utils Antiderivative(sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) / ((~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x)), ~x) => (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / (~e) ^ 2) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) - (1 / (~e) ^ 2) * Antiderivative(((~c * ~d - ~b * ~e) - ~c * ~e * ~x) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(sqrt(~a + ~(c') * (~x) ^ 2) / ((~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x)), ~x) => ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / (~e) ^ 2) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), ~x) - (1 / (~e) ^ 2) * Antiderivative((~c * ~d - ~c * ~e * ~x) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)) / sqrt(~(f') + ~(g') * ~x), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / ((~m + 1) * (~e * ~f - ~d * ~g)) - (1 / (2 * (~m + 1) * (~e * ~f - ~d * ~g))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp(~b * ~f + ~a * ~g * (2 * ~m + 3) + 2 * (~c * ~f + ~b * ~g * (~m + 2)) * ~x + ~c * ~g * (2 * ~m + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LtQ(~m, -1)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~(m') * sqrt(~a + ~(c') * (~x) ^ 2)) / sqrt(~(f') + ~(g') * ~x), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / ((~m + 1) * (~e * ~f - ~d * ~g)) - (1 / (2 * (~m + 1) * (~e * ~f - ~d * ~g))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp(~a * ~g * (2 * ~m + 3) + 2 * (~c * ~f) * ~x + ~c * ~g * (2 * ~m + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LtQ(~m, -1))))
    @apply_utils Antiderivative(sqrt(~(d') + ~(e') * ~x) / (sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((sqrt(2) * sqrt(2 * ~c * ~f - ~g * (~b + q)) * sqrt((~b - q) + 2 * ~c * ~x) * (~d + ~e * ~x) * sqrt(((~e * ~f - ~d * ~g) * (~b + q + 2 * ~c * ~x)) / ((2 * ~c * ~f - ~g * (~b + q)) * (~d + ~e * ~x))) * sqrt(((~e * ~f - ~d * ~g) * (2 * ~a + (~b + q) * ~x)) / (((~b * ~f + q * ~f) - 2 * ~a * ~g) * (~d + ~e * ~x)))) / (~g * sqrt(2 * ~c * ~d - ~e * (~b + q)) * sqrt((2 * ~a * ~c) / (~b + q) + ~c * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Elliptic.Pi((~e * (2 * ~c * ~f - ~g * (~b + q))) / (~g * (2 * ~c * ~d - ~e * (~b + q))), asin((sqrt(2 * ~c * ~d - ~e * (~b + q)) * sqrt(~f + ~g * ~x)) / (sqrt(2 * ~c * ~f - ~g * (~b + q)) * sqrt(~d + ~e * ~x))), (((~b * ~d + q * ~d) - 2 * ~a * ~e) * (2 * ~c * ~f - ~g * (~b + q))) / (((~b * ~f + q * ~f) - 2 * ~a * ~g) * (2 * ~c * ~d - ~e * (~b + q))))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(sqrt(~(d') + ~(e') * ~x) / (sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => With([q = Rt(-4 * ~a * ~c, 2)], ((sqrt(2) * sqrt(2 * ~c * ~f - ~g * q) * sqrt(-q + 2 * ~c * ~x) * (~d + ~e * ~x) * sqrt(((~e * ~f - ~d * ~g) * (q + 2 * ~c * ~x)) / ((2 * ~c * ~f - ~g * q) * (~d + ~e * ~x))) * sqrt(((~e * ~f - ~d * ~g) * (2 * ~a + q * ~x)) / ((q * ~f - 2 * ~a * ~g) * (~d + ~e * ~x)))) / (~g * sqrt(2 * ~c * ~d - ~e * q) * sqrt((2 * ~a * ~c) / q + ~c * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Elliptic.Pi((~e * (2 * ~c * ~f - ~g * q)) / (~g * (2 * ~c * ~d - ~e * q)), asin((sqrt(2 * ~c * ~d - ~e * q) * sqrt(~f + ~g * ~x)) / (sqrt(2 * ~c * ~f - ~g * q) * sqrt(~d + ~e * ~x))), ((q * ~d - 2 * ~a * ~e) * (2 * ~c * ~f - ~g * q)) / ((q * ~f - 2 * ~a * ~g) * (2 * ~c * ~d - ~e * q)))) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ (3 / 2) / (sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => (~e / ~g) * Antiderivative((sqrt(~d + ~e * ~x) * sqrt(~f + ~g * ~x)) / sqrt(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) - ((~e * ~f - ~d * ~g) / ~g) * Antiderivative(sqrt(~d + ~e * ~x) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ (3 / 2) / (sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => (~e / ~g) * Antiderivative((sqrt(~d + ~e * ~x) * sqrt(~f + ~g * ~x)) / sqrt(~a + ~c * (~x) ^ 2), ~x) - ((~e * ~f - ~d * ~g) / ~g) * Antiderivative(sqrt(~d + ~e * ~x) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => (2 * (~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 2) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~c * ~g * (2 * ~m - 1)) - (1 / (~c * ~g * (2 * ~m - 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m - 3) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp(((~b * ~d * (~e) ^ 2 * ~f + ~a * (~e) ^ 2 * (~d * ~g + 2 * ~e * ~f * (~m - 2))) - ~c * (~d) ^ 3 * ~g * (2 * ~m - 1)) + ~e * (~e * (2 * ~b * ~d * ~g + ~e * (~b * ~f + ~a * ~g) * (2 * ~m - 3)) + ~c * ~d * (2 * ~e * ~f - 3 * ~d * ~g * (2 * ~m - 1))) * ~x + 2 * (~e) ^ 2 * ((~c * ~e * ~f - 3 * ~c * ~d * ~g) + ~b * ~e * ~g) * (~m - 1) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && GeQ(~m, 2)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => (2 * (~e) ^ 2 * (~d + ~e * ~x) ^ (~m - 2) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / (~c * ~g * (2 * ~m - 1)) - (1 / (~c * ~g * (2 * ~m - 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m - 3) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp((~a * (~e) ^ 2 * (~d * ~g + 2 * ~e * ~f * (~m - 2)) - ~c * (~d) ^ 3 * ~g * (2 * ~m - 1)) + ~e * (~e * (~a * ~e * ~g * (2 * ~m - 3)) + ~c * ~d * (2 * ~e * ~f - 3 * ~d * ~g * (2 * ~m - 1))) * ~x + 2 * (~e) ^ 2 * (~c * ~e * ~f - 3 * ~c * ~d * ~g) * (~m - 1) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && GeQ(~m, 2))))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => With([q = Rt(-(~c) / ~a, 2)], (1 / sqrt(~a)) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(1 - q * ~x) * sqrt(1 + q * ~x)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && GtQ(~a, 0)))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => With([q = Rt(-(~c) / ~a, 2)], (sqrt(1 + (~c * (~x) ^ 2) / ~a) / sqrt(~a + ~c * (~x) ^ 2)) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(1 - q * ~x) * sqrt(1 + q * ~x)), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(GtQ(~a, 0))))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((sqrt((~b - q) + 2 * ~c * ~x) * sqrt(~b + q + 2 * ~c * ~x)) / sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt((~b - q) + 2 * ~c * ~x) * sqrt(~b + q + 2 * ~c * ~x)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(1 / (sqrt(~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => ((-2 * (~d + ~e * ~x) * sqrt(((~e * ~f - ~d * ~g) ^ 2 * (~a + ~b * ~x + ~c * (~x) ^ 2)) / (((~c * (~f) ^ 2 - ~b * ~f * ~g) + ~a * (~g) ^ 2) * (~d + ~e * ~x) ^ 2))) / ((~e * ~f - ~d * ~g) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Subst(Antiderivative(1 / sqrt((1 - ((((2 * ~c * ~d * ~f - ~b * ~e * ~f) - ~b * ~d * ~g) + 2 * ~a * ~e * ~g) * (~x) ^ 2) / ((~c * (~f) ^ 2 - ~b * ~f * ~g) + ~a * (~g) ^ 2)) + (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) * (~x) ^ 4) / ((~c * (~f) ^ 2 - ~b * ~f * ~g) + ~a * (~g) ^ 2)), ~x), ~x, sqrt(~f + ~g * ~x) / sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(1 / (sqrt(~(d') + ~(e') * ~x) * sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => ((-2 * (~d + ~e * ~x) * sqrt(((~e * ~f - ~d * ~g) ^ 2 * (~a + ~c * (~x) ^ 2)) / ((~c * (~f) ^ 2 + ~a * (~g) ^ 2) * (~d + ~e * ~x) ^ 2))) / ((~e * ~f - ~d * ~g) * sqrt(~a + ~c * (~x) ^ 2))) * Subst(Antiderivative(1 / sqrt((1 - ((2 * ~c * ~d * ~f + 2 * ~a * ~e * ~g) * (~x) ^ 2) / (~c * (~f) ^ 2 + ~a * (~g) ^ 2)) + ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) * (~x) ^ 4) / (~c * (~f) ^ 2 + ~a * (~g) ^ 2)), ~x), ~x, sqrt(~f + ~g * ~x) / sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) ^ (3 / 2) * sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => (-(~g) / (~e * ~f - ~d * ~g)) * Antiderivative(1 / (sqrt(~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) + (~e / (~e * ~f - ~d * ~g)) * Antiderivative(sqrt(~f + ~g * ~x) / ((~d + ~e * ~x) ^ (3 / 2) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) ^ (3 / 2) * sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => (-(~g) / (~e * ~f - ~d * ~g)) * Antiderivative(1 / (sqrt(~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), ~x) + (~e / (~e * ~f - ~d * ~g)) * Antiderivative(sqrt(~f + ~g * ~x) / ((~d + ~e * ~x) ^ (3 / 2) * sqrt(~a + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (sqrt(~(f') + ~(g') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / ((~m + 1) * (~e * ~f - ~d * ~g) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + (1 / (2 * (~m + 1) * (~e * ~f - ~d * ~g) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp(((2 * ~d * ((~c * ~e * ~f - ~c * ~d * ~g) + ~b * ~e * ~g) * (~m + 1) - (~e) ^ 2 * (~b * ~f + ~a * ~g) * (2 * ~m + 3)) + 2 * ~e * (~c * ~d * ~g * (~m + 1) - ~e * (~c * ~f + ~b * ~g) * (~m + 2)) * ~x) - ~c * (~e) ^ 2 * ~g * (2 * ~m + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LeQ(~m, -2)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (sqrt(~(f') + ~(g') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => ((~e) ^ 2 * (~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / ((~m + 1) * (~e * ~f - ~d * ~g) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + (1 / (2 * (~m + 1) * (~e * ~f - ~d * ~g) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp(((2 * ~d * (~c * ~e * ~f - ~c * ~d * ~g) * (~m + 1) - ~a * (~e) ^ 2 * ~g * (2 * ~m + 3)) + 2 * ~e * (~c * ~d * ~g * (~m + 1) - ~c * ~e * ~f * (~m + 2)) * ~x) - ~c * (~e) ^ 2 * ~g * (2 * ~m + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LeQ(~m, -2))))
    #= Antiderivative(sqrt((~d')+(~e')*(~x))*sqrt((~f')+(~g')*(~x))/sqrt((~a')+(~b')*(~x)+(~c')*(~x)^2),(~x)*Symbol) := 0 <-- FreeQ([a,b,c,d,e,f,g],x) && NeQ(e*f-d*g,0) &&  NeQ(b^2-4*a*c,0) && NeQ(c*d^2-b*d*e+a*e^2,0) =#
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * sqrt(~(f') + ~(g') * ~x)) / sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (2 * ~e * (~d + ~e * ~x) ^ (~m - 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / (~c * (2 * ~m + 1)) - (1 / (~c * (2 * ~m + 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m - 2) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp((~e * (~b * ~d * ~f + ~a * (~d * ~g + 2 * ~e * ~f * (~m - 1))) - ~c * (~d) ^ 2 * ~f * (2 * ~m + 1)) + ((~a * (~e) ^ 2 * ~g * (2 * ~m - 1) - ~c * ~d * (4 * ~e * ~f * ~m + ~d * ~g * (2 * ~m + 1))) + ~b * ~e * (2 * ~d * ~g + ~e * ~f * (2 * ~m - 1))) * ~x + ~e * (2 * ~b * ~e * ~g * ~m - ~c * (~e * ~f + ~d * ~g * (4 * ~m - 1))) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && GtQ(~m, 1)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * sqrt(~(f') + ~(g') * ~x)) / sqrt(~a + ~(c') * (~x) ^ 2), ~x) => (2 * ~e * (~d + ~e * ~x) ^ (~m - 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / (~c * (2 * ~m + 1)) - (1 / (~c * (2 * ~m + 1))) * Antiderivative(((~d + ~e * ~x) ^ (~m - 2) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp(((~a * ~e * (~d * ~g + 2 * ~e * ~f * (~m - 1)) - ~c * (~d) ^ 2 * ~f * (2 * ~m + 1)) + (~a * (~e) ^ 2 * ~g * (2 * ~m - 1) - ~c * ~d * (4 * ~e * ~f * ~m + ~d * ~g * (2 * ~m + 1))) * ~x) - ~c * ~e * (~e * ~f + ~d * ~g * (4 * ~m - 1)) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && GtQ(~m, 1))))
    @apply_utils Antiderivative(sqrt(~(f') + ~(g') * ~x) / ((~(d') + ~(e') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => (~g / ~e) * Antiderivative(1 / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) + ((~e * ~f - ~d * ~g) / ~e) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative(sqrt(~(f') + ~(g') * ~x) / ((~(d') + ~(e') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => (~g / ~e) * Antiderivative(1 / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), ~x) + ((~e * ~f - ~d * ~g) / ~e) * Antiderivative(1 / ((~d + ~e * ~x) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * sqrt(~(f') + ~(g') * ~x)) / sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) / ((~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + (1 / (2 * (~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2))) * Simp(((2 * ~c * ~d * ~f * (~m + 1) - ~e * (~a * ~g + ~b * ~f * (2 * ~m + 3))) - 2 * (~b * ~e * ~g * (2 + ~m) - ~c * (~d * ~g * (~m + 1) - ~e * ~f * (~m + 2))) * ~x) - ~c * ~e * ~g * (2 * ~m + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LeQ(~m, -2)))))
    @apply_utils Antiderivative(((~(d') + ~(e') * ~x) ^ ~m * sqrt(~(f') + ~(g') * ~x)) / sqrt(~a + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1) * sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)) / ((~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + (1 / (2 * (~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2))) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2))) * Simp(((2 * ~c * ~d * ~f * (~m + 1) - ~e * (~a * ~g)) + 2 * ~c * (~d * ~g * (~m + 1) - ~e * ~f * (~m + 2)) * ~x) - ~c * ~e * ~g * (2 * ~m + 5) * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(2 * ~m) && LeQ(~m, -2))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && (IGtQ(~m, 0) || EqQ(~m, -2) && (EqQ(~p, 1) && EqQ(2 * ~c * ~d - ~b * ~e, 0)))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && (IGtQ(~m, 0) || EqQ(~m, -2) && (EqQ(~p, 1) && EqQ(~d, 0))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~d + ~e * ~x, ~x), R = PolynomialRemainder((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~d + ~e * ~x, ~x)], (R * (~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ (~n + 1)) / ((~m + 1) * (~e * ~f - ~d * ~g)) + (1 / ((~m + 1) * (~e * ~f - ~d * ~g))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ ~n * ExpandToSum((~m + 1) * (~e * ~f - ~d * ~g) * Qx - ~g * R * (~m + ~n + 2), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && LtQ(~m, -1)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => With([Qx = PolynomialQuotient((~a + ~c * (~x) ^ 2) ^ ~p, ~d + ~e * ~x, ~x), R = PolynomialRemainder((~a + ~c * (~x) ^ 2) ^ ~p, ~d + ~e * ~x, ~x)], (R * (~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ (~n + 1)) / ((~m + 1) * (~e * ~f - ~d * ~g)) + (1 / ((~m + 1) * (~e * ~f - ~d * ~g))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~f + ~g * ~x) ^ ~n * ExpandToSum((~m + 1) * (~e * ~f - ~d * ~g) * Qx - ~g * R * (~m + ~n + 2), ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && LtQ(~m, -1))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => ((~c) ^ ~p * (~d + ~e * ~x) ^ (~m + 2 * ~p) * (~f + ~g * ~x) ^ (~n + 1)) / (~g * (~e) ^ (2 * ~p) * (~m + ~n + 2 * ~p + 1)) + (1 / (~g * (~e) ^ (2 * ~p) * (~m + ~n + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * ExpandToSum(~g * (~m + ~n + 2 * ~p + 1) * ((~e) ^ (2 * ~p) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p - (~c) ^ ~p * (~d + ~e * ~x) ^ (2 * ~p)) - (~c) ^ ~p * (~e * ~f - ~d * ~g) * (~m + 2 * ~p) * (~d + ~e * ~x) ^ (2 * ~p - 1), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && (NeQ(~m + ~n + 2 * ~p + 1, 0) && (IntegerQ(~n) || Not(IntegerQ(~m))))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => ((~c) ^ ~p * (~d + ~e * ~x) ^ (~m + 2 * ~p) * (~f + ~g * ~x) ^ (~n + 1)) / (~g * (~e) ^ (2 * ~p) * (~m + ~n + 2 * ~p + 1)) + (1 / (~g * (~e) ^ (2 * ~p) * (~m + ~n + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * ExpandToSum(~g * (~m + ~n + 2 * ~p + 1) * ((~e) ^ (2 * ~p) * (~a + ~c * (~x) ^ 2) ^ ~p - (~c) ^ ~p * (~d + ~e * ~x) ^ (2 * ~p)) - (~c) ^ ~p * (~e * ~f - ~d * ~g) * (~m + 2 * ~p) * (~d + ~e * ~x) ^ (2 * ~p - 1), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 0) && (NeQ(~m + ~n + 2 * ~p + 1, 0) && (IntegerQ(~n) || Not(IntegerQ(~m)))))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p) / (~(d') + ~(e') * ~x), ~x) => (((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) / (~e * (~e * ~f - ~d * ~g))) * Antiderivative(((~f + ~g * ~x) ^ (~n + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1)) / (~d + ~e * ~x), ~x) - (1 / (~e * (~e * ~f - ~d * ~g))) * Antiderivative((~f + ~g * ~x) ^ ~n * (((~c * ~d * ~f - ~b * ~e * ~f) + ~a * ~e * ~g) - ~c * (~e * ~f - ~d * ~g) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~n)) && (Not(IntegerQ(~p)) && (GtQ(~p, 0) && LtQ(~n, -1)))))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p) / (~(d') + ~(e') * ~x), ~x) => ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) / (~e * (~e * ~f - ~d * ~g))) * Antiderivative(((~f + ~g * ~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ (~p - 1)) / (~d + ~e * ~x), ~x) - (1 / (~e * (~e * ~f - ~d * ~g))) * Antiderivative((~f + ~g * ~x) ^ ~n * ((~c * ~d * ~f + ~a * ~e * ~g) - ~c * (~e * ~f - ~d * ~g) * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~n)) && (Not(IntegerQ(~p)) && (GtQ(~p, 0) && LtQ(~n, -1))))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p) / (~(d') + ~(e') * ~x), ~x) => ((~e * (~e * ~f - ~d * ~g)) / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~f + ~g * ~x) ^ (~n - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~d + ~e * ~x), ~x) + (1 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative((~f + ~g * ~x) ^ (~n - 1) * (((~c * ~d * ~f - ~b * ~e * ~f) + ~a * ~e * ~g) - ~c * (~e * ~f - ~d * ~g) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~n)) && (Not(IntegerQ(~p)) && (LtQ(~p, -1) && GtQ(~n, 0)))))))
    @apply_utils Antiderivative(((~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p) / (~(d') + ~(e') * ~x), ~x) => ((~e * (~e * ~f - ~d * ~g)) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~f + ~g * ~x) ^ (~n - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~d + ~e * ~x), ~x) + (1 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~f + ~g * ~x) ^ (~n - 1) * ((~c * ~d * ~f + ~a * ~e * ~g) - ~c * (~e * ~f - ~d * ~g) * ~x) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~n)) && (Not(IntegerQ(~p)) && (LtQ(~p, -1) && GtQ(~n, 0))))))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~n / ((~(d') + ~(e') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => Antiderivative(ExpandIntegrand(1 / (sqrt(~f + ~g * ~x) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)), (~f + ~g * ~x) ^ (~n + 1 / 2) / (~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IntegerQ(~n + 1 / 2))))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~n / ((~(d') + ~(e') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => Antiderivative(ExpandIntegrand(1 / (sqrt(~f + ~g * ~x) * sqrt(~a + ~c * (~x) ^ 2)), (~f + ~g * ~x) ^ (~n + 1 / 2) / (~d + ~e * ~x), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IntegerQ(~n + 1 / 2)))
    @apply_utils Antiderivative(((~(g') * ~x) ^ ~(n') * (~a + ~(c') * (~x) ^ 2) ^ ~p) / (~d + ~(e') * ~x), ~x) => ((~d * (~g * ~x) ^ ~n) / (~x) ^ ~n) * Antiderivative(((~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p) / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2), ~x) - ((~e * (~g * ~x) ^ ~n) / (~x) ^ ~n) * Antiderivative(((~x) ^ (~n + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~g, ~n, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && Not(IntegersQ(~n, 2 * ~p))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && ((IntegerQ(~p) || ILtQ(~m, 0) && ILtQ(~n, 0)) && Not(IGtQ(~m, 0) || IGtQ(~n, 0))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && ((IntegerQ(~p) || ILtQ(~m, 0) && ILtQ(~n, 0)) && Not(IGtQ(~m, 0) || IGtQ(~n, 0)))))
    @apply_utils Antiderivative((~(g') * ~x) ^ ~(n') * (~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~g * ~x) ^ ~n / (~x) ^ ~n) * Antiderivative(ExpandIntegrand((~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, (~d / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2) - (~e * ~x) / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2)) ^ -(~m), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~g, ~n, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (ILtQ(~m, 0) && (Not(IntegerQ(~p)) && Not(IntegerQ(~n)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Unintegrable((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && Not(IGtQ(~m, 0) || IGtQ(~n, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(f') + ~(g') * ~x) ^ ~n * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Unintegrable((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && Not(IGtQ(~m, 0) || IGtQ(~n, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~u) ^ ~(m') * (~(f') + ~(g') * ~u) ^ ~(n') * (~a + ~(b') * ~u + ~(c') * (~u) ^ 2) ^ ~(p'), ~x) => (1 / Coefficient(~u, ~x, 1)) * Subst(Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, ~u) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (LinearQ(~u, ~x) && NeQ(~u, ~x))
    @apply_utils Antiderivative((~(d') + ~(e') * ~u) ^ ~(m') * (~(f') + ~(g') * ~u) ^ ~(n') * (~a + ~(c') * (~u) ^ 2) ^ ~(p'), ~x) => (1 / Coefficient(~u, ~x, 1)) * Subst(Antiderivative((~d + ~e * ~x) ^ ~m * (~f + ~g * ~x) ^ ~n * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, ~u) <-- FreeQ([~a, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p], ~x) && (LinearQ(~u, ~x) && NeQ(~u, ~x))
end
