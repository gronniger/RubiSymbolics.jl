int_rules_1_2_1_2 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 1.2.1.2*(d+e*x)^m*(a+b*x+c*x^2)^p =#
    #= Antiderivative(((~d')+(~e')*(~x))^(~m')*((~a)+(~b')*(~x)+(~c')*(~x)^2)^(~p'),~x) :=  1/c^p*Antiderivative((d+e*x)^m*(b/2+c*x)^(2*p),x) <-- FreeQ([a,b,c,d,e,m],x) &&  EqQ(b^2-4*a*c,0) && IntegerQ(p) =#
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && IntegerQ(~p)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~(m') * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IntegerQ(~p) || GtQ(~a, 0) && (GtQ(~d, 0) && IntegerQ(~m + ~p))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~d * log(RemoveContent(~a + ~b * ~x + ~c * (~x) ^ 2, ~x))) / ~b <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && EqQ(2 * ~c * ~d - ~b * ~e, 0)
    @apply_utils Antiderivative((~d + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (~d * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~b * (~p + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && NeQ(~p, -1))
    @apply_utils Antiderivative((~d + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative((~d + ~e * ~x) ^ (~p + 1) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (IGtQ(~p, 0) && EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (IntegerQ(~p) && (GtQ(~p, 0) || EqQ(~a, 0))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) / (~a + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((~c * ~d - ~e * (~b / 2 - q / 2)) / q) * Antiderivative(1 / ((~b / 2 - q / 2) + ~c * ~x), ~x) - ((~c * ~d - ~e * (~b / 2 + q / 2)) / q) * Antiderivative(1 / (~b / 2 + q / 2 + ~c * ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NiceSqrtQ((~b) ^ 2 - 4 * ~a * ~c)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) / (~a + ~(c') * (~x) ^ 2), ~x) => With([q = Rt(-(~a) * ~c, 2)], (~e / 2 + (~c * ~d) / (2q)) * Antiderivative(1 / (-q + ~c * ~x), ~x) + (~e / 2 - (~c * ~d) / (2q)) * Antiderivative(1 / (q + ~c * ~x), ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NiceSqrtQ(-(~a) * ~c)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) / (~a + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((2 * ~c * ~d - ~b * ~e) / (2 * ~c)) * Antiderivative(1 / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) + (~e / (2 * ~c)) * Antiderivative((~b + 2 * ~c * ~x) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && Not(NiceSqrtQ((~b) ^ 2 - 4 * ~a * ~c))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) / (~a + ~(c') * (~x) ^ 2), ~x) => ~d * Antiderivative(1 / (~a + ~c * (~x) ^ 2), ~x) + ~e * Antiderivative(~x / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && Not(NiceSqrtQ(-(~a) * ~c))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ (3 / 2), ~x) => (-2 * ((~b * ~d - 2 * ~a * ~e) + (2 * ~c * ~d - ~b * ~e) * ~x)) / (((~b) ^ 2 - 4 * ~a * ~c) * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && NeQ((~b) ^ 2 - 4 * ~a * ~c, 0))
    @apply_utils Antiderivative((~d + ~(e') * ~x) / (~a + ~(c') * (~x) ^ 2) ^ (3 / 2), ~x) => (-(~a) * ~e + ~c * ~d * ~x) / (~a * ~c * sqrt(~a + ~c * (~x) ^ 2)) <-- FreeQ([~a, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~b * ~d - 2 * ~a * ~e) + (2 * ~c * ~d - ~b * ~e) * ~x) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1) - (((2 * ~p + 3) * (2 * ~c * ~d - ~b * ~e)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (LtQ(~p, -1) && NeQ(~p, -3 / 2))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a * ~e - ~c * ~d * ~x) / (2 * ~a * ~c * (~p + 1))) * (~a + ~c * (~x) ^ 2) ^ (~p + 1) + ((~d * (2 * ~p + 3)) / (2 * ~a * (~p + 1))) * Antiderivative((~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (LtQ(~p, -1) && NeQ(~p, -3 / 2))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~c * (~p + 1)) + ((2 * ~c * ~d - ~b * ~e) / (2 * ~c)) * Antiderivative((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && NeQ(~p, -1))
    @apply_utils Antiderivative((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (~e * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~c * (~p + 1)) + ~d * Antiderivative((~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && NeQ(~p, -1)
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ ~m / (~c) ^ (~m / 2)) * Antiderivative((~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + ~m / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && IntegerQ(~m / 2))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~e) ^ (~m - 1) / (~c) ^ ((~m - 1) / 2)) * Antiderivative((~d + ~e * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + (~m - 1) / 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && IntegerQ((~m - 1) / 2))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p / (~d + ~e * ~x) ^ (2 * ~p)) * Antiderivative((~d + ~e * ~x) ^ (~m + 2 * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && Not(IntegerQ(~m)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p) / ((~c) ^ IntPart(~p) * (~b / 2 + ~c * ~x) ^ (2 * FracPart(~p)))) * Antiderivative(ExpandLinearProduct((~b / 2 + ~c * ~x) ^ (2 * ~p), (~d + ~e * ~x) ^ ~m, ~b / 2, ~c, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (IGtQ(~m, 0) && EqQ((~m - 2 * ~p) + 1, 0)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p) / ((~c) ^ IntPart(~p) * (~b / 2 + ~c * ~x) ^ (2 * FracPart(~p)))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~b / 2 + ~c * ~x) ^ (2 * ~p), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (Not(IntegerQ(~p)) && NeQ(2 * ~c * ~d - ~b * ~e, 0)))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~(m') * (~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (1 / (~e) ^ ~p) * Antiderivative((~e * ~x) ^ (~m + ~p) * (~b + ~c * ~x) ^ ~p, ~x) <-- FreeQ([~b, ~c, ~e, ~m], ~x) && IntegerQ(~p)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && EqQ(~m + ~p, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && EqQ(~m + ~p, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * (2 * ~c * ~d - ~b * ~e)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && EqQ(~m + 2 * ~p + 2, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~c * ~d * (~p + 1)) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && EqQ(~m + 2 * ~p + 2, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ 2 * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) - (((~e) ^ 2 * (~p + 2)) / (~c * (~p + 1))) * Antiderivative((~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && LtQ(~p, -1))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ 2 * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) - (((~e) ^ 2 * (~p + 2)) / (~c * (~p + 1))) * Antiderivative((~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative((~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~m + ~p) / (~a / ~d + (~c * ~x) / ~e) ^ ~m, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (IntegerQ(~m) && (RationalQ(~p) && ((LtQ(0, -(~m), ~p) || LtQ(~p, -(~m), 0)) && (NeQ(~m, 2) && NeQ(~m, -1))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d) ^ (2 * ~m) / (~a) ^ ~m) * Antiderivative((~a + ~c * (~x) ^ 2) ^ (~m + ~p) / (~d - ~e * ~x) ^ ~m, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (IntegerQ(~m) && (RationalQ(~p) && ((LtQ(0, -(~m), ~p) || LtQ(~p, -(~m), 0)) && (NeQ(~m, 2) && NeQ(~m, -1)))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~m + 2 * ~p + 1)) + ((Simplify(~m + ~p) * (2 * ~c * ~d - ~b * ~e)) / (~c * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && IGtQ(Simplify(~m + ~p), 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~m + 2 * ~p + 1)) + ((2 * ~c * ~d * Simplify(~m + ~p)) / (~c * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && IGtQ(Simplify(~m + ~p), 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~m + ~p + 1) * (2 * ~c * ~d - ~b * ~e)) + ((~c * Simplify(~m + 2 * ~p + 2)) / ((~m + ~p + 1) * (2 * ~c * ~d - ~b * ~e))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ILtQ(Simplify(~m + 2 * ~p + 2), 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~c * ~d * (~m + ~p + 1)) + (Simplify(~m + 2 * ~p + 2) / (2 * ~d * (~m + ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ILtQ(Simplify(~m + 2 * ~p + 2), 0)))
    @apply_utils Antiderivative(1 / (sqrt(~(d') + ~(e') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => 2 * ~e * Subst(Antiderivative(1 / ((2 * ~c * ~d - ~b * ~e) + (~e) ^ 2 * (~x) ^ 2), ~x), ~x, sqrt(~a + ~b * ~x + ~c * (~x) ^ 2) / sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => 2 * ~e * Subst(Antiderivative(1 / (2 * ~c * ~d + (~e) ^ 2 * (~x) ^ 2), ~x), ~x, sqrt(~a + ~c * (~x) ^ 2) / sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + ~p + 1)) - ((~c * ~p) / ((~e) ^ 2 * (~m + ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && ((LtQ(~m, -2) || EqQ(~m + 2 * ~p + 1, 0)) && (NeQ(~m + ~p + 1, 0) && IntegerQ(2 * ~p))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + ~p + 1)) - ((~c * ~p) / ((~e) ^ 2 * (~m + ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && ((LtQ(~m, -2) || EqQ(~m + 2 * ~p + 1, 0)) && (NeQ(~m + ~p + 1, 0) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 2 * ~p + 1)) - ((~p * (2 * ~c * ~d - ~b * ~e)) / ((~e) ^ 2 * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && ((LeQ(-2, ~m, 0) || EqQ(~m + ~p + 1, 0)) && (NeQ(~m + 2 * ~p + 1, 0) && IntegerQ(2 * ~p))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 2 * ~p + 1)) - ((2 * ~c * ~d * ~p) / ((~e) ^ 2 * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && ((LeQ(-2, ~m, 0) || EqQ(~m + ~p + 1, 0)) && (NeQ(~m + 2 * ~p + 1, 0) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((2 * ~c * ~d - ~b * ~e) * (~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~e * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) - (((2 * ~c * ~d - ~b * ~e) * (~m + 2 * ~p + 2)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && (LtQ(0, ~m, 1) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~d) * (~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * ~e * (~p + 1)) + ((~d * (~m + 2 * ~p + 2)) / (2 * ~a * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && (LtQ(0, ~m, 1) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) - (((~e) ^ 2 * (~m + ~p)) / (~c * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && (GtQ(~m, 1) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~p + 1)) - (((~e) ^ 2 * (~m + ~p)) / (~c * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && (GtQ(~m, 1) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~m + 2 * ~p + 1)) + (((~m + ~p) * (2 * ~c * ~d - ~b * ~e)) / (~c * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (GtQ(~m, 1) && (NeQ(~m + 2 * ~p + 1, 0) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~m + 2 * ~p + 1)) + ((2 * ~c * ~d * (~m + ~p)) / (~c * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (GtQ(~m, 1) && (NeQ(~m + 2 * ~p + 1, 0) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~m + ~p + 1) * (2 * ~c * ~d - ~b * ~e)) + ((~c * (~m + 2 * ~p + 2)) / ((~m + ~p + 1) * (2 * ~c * ~d - ~b * ~e))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (LtQ(~m, 0) && (NeQ(~m + ~p + 1, 0) && IntegerQ(2 * ~p)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~e) * (~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~c * ~d * (~m + ~p + 1)) + ((~m + 2 * ~p + 2) / (2 * ~d * (~m + ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~m, 0) && (NeQ(~m + ~p + 1, 0) && IntegerQ(2 * ~p))))
    @apply_utils Antiderivative((~(e') * ~x) ^ ~m * (~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~e * ~x) ^ ~m * (~b * ~x + ~c * (~x) ^ 2) ^ ~p) / ((~x) ^ (~m + ~p) * (~b + ~c * ~x) ^ ~p)) * Antiderivative((~x) ^ (~m + ~p) * (~b + ~c * ~x) ^ ~p, ~x) <-- FreeQ([~b, ~c, ~e, ~m], ~x) && Not(IntegerQ(~p))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative((~d + ~e * ~x) ^ (~m + ~p) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (GtQ(~a, 0) && (GtQ(~d, 0) && Not(IGtQ(~m, 0))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~a) ^ (~p + 1) * (~d) ^ (~m - 1) * ((~d - ~e * ~x) / ~d) ^ (~p + 1)) / (~a / ~d + (~c * ~x) / ~e) ^ (~p + 1)) * Antiderivative((1 + (~e * ~x) / ~d) ^ (~m + ~p) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ((IntegerQ(~m) || GtQ(~d, 0)) && (GtQ(~a, 0) && Not(IGtQ(~m, 0) && (IntegerQ(3 * ~p) || IntegerQ(4 * ~p)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p)) / ((1 + (~e * ~x) / ~d) ^ FracPart(~p) * (~a / ~d + (~c * ~x) / ~e) ^ FracPart(~p))) * Antiderivative((1 + (~e * ~x) / ~d) ^ (~m + ~p) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ((IntegerQ(~m) || GtQ(~d, 0)) && Not(IGtQ(~m, 0) && (IntegerQ(3 * ~p) || IntegerQ(4 * ~p)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / ((1 + (~e * ~x) / ~d) ^ (~p + 1) * (~a / ~d + (~c * ~x) / ~e) ^ (~p + 1))) * Antiderivative((1 + (~e * ~x) / ~d) ^ (~m + ~p) * (~a / ~d + (~c / ~e) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ((IntegerQ(~m) || GtQ(~d, 0)) && Not(IGtQ(~m, 0) && (IntegerQ(3 * ~p) || IntegerQ(4 * ~p))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d) ^ IntPart(~m) * (~d + ~e * ~x) ^ FracPart(~m)) / (1 + (~e * ~x) / ~d) ^ FracPart(~m)) * Antiderivative((1 + (~e * ~x) / ~d) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && Not(IntegerQ(~m) || GtQ(~d, 0)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d) ^ IntPart(~m) * (~d + ~e * ~x) ^ FracPart(~m)) / (1 + (~e * ~x) / ~d) ^ FracPart(~m)) * Antiderivative((1 + (~e * ~x) / ~d) ^ ~m * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (EqQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && Not(IntegerQ(~m) || GtQ(~d, 0))))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => ((-4 * ~b * ~c) / (~d * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative(1 / (~b + 2 * ~c * ~x), ~x) + ((~b) ^ 2 / ((~d) ^ 2 * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ(2 * ~c * ~d - ~b * ~e, 0))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (2 * ~c * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~e * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ(~m + 2 * ~p + 3, 0) && NeQ(~p, -1))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (IGtQ(~p, 0) && Not(EqQ(~m, 3) && NeQ(~p, 1)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 1)) - ((~b * ~p) / (~d * ~e * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m + 2 * ~p + 3, 0) && (GtQ(~p, 0) && (LtQ(~m, -1) && (Not(IntegerQ(~m / 2) && LtQ(~m + 2 * ~p + 3, 0)) && IntegerQ(2 * ~p)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 2 * ~p + 1)) - ((~d * ~p * ((~b) ^ 2 - 4 * ~a * ~c)) / (~b * ~e * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m + 2 * ~p + 3, 0) && (GtQ(~p, 0) && (Not(LtQ(~m, -1)) && (Not(IGtQ((~m - 1) / 2, 0) && (Not(IntegerQ(~p)) || LtQ(~m, 2 * ~p))) && (RationalQ(~m) && IntegerQ(2 * ~p))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~d * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~b * (~p + 1)) - ((~d * ~e * (~m - 1)) / (~b * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m + 2 * ~p + 3, 0) && (LtQ(~p, -1) && (GtQ(~m, 1) && IntegerQ(2 * ~p))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (2 * ~c * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~e * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) - ((2 * ~c * ~e * (~m + 2 * ~p + 3)) / (~e * (~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m + 2 * ~p + 3, 0) && (LtQ(~p, -1) && (Not(GtQ(~m, 1)) && (RationalQ(~m) && IntegerQ(2 * ~p)))))))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => 4 * ~c * Subst(Antiderivative(1 / (((~b) ^ 2 * ~e - 4 * ~a * ~c * ~e) + 4 * ~c * ~e * (~x) ^ 2), ~x), ~x, sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ(2 * ~c * ~d - ~b * ~e, 0))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => (4 / ~e) * sqrt(-(~c) / ((~b) ^ 2 - 4 * ~a * ~c)) * Subst(Antiderivative(1 / sqrt(Simp(1 - ((~b) ^ 2 * (~x) ^ 4) / ((~d) ^ 2 * ((~b) ^ 2 - 4 * ~a * ~c)), ~x)), ~x), ~x, sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && LtQ(~c / ((~b) ^ 2 - 4 * ~a * ~c), 0)))
    @apply_utils Antiderivative(sqrt(~d + ~(e') * ~x) / sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (4 / ~e) * sqrt(-(~c) / ((~b) ^ 2 - 4 * ~a * ~c)) * Subst(Antiderivative((~x) ^ 2 / sqrt(Simp(1 - ((~b) ^ 2 * (~x) ^ 4) / ((~d) ^ 2 * ((~b) ^ 2 - 4 * ~a * ~c)), ~x)), ~x), ~x, sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && LtQ(~c / ((~b) ^ 2 - 4 * ~a * ~c), 0)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m / sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (sqrt((-(~c) * (~a + ~b * ~x + ~c * (~x) ^ 2)) / ((~b) ^ 2 - 4 * ~a * ~c)) / sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) * Antiderivative((~d + ~e * ~x) ^ ~m / sqrt(((-(~a) * ~c) / ((~b) ^ 2 - 4 * ~a * ~c) - (~b * ~c * ~x) / ((~b) ^ 2 - 4 * ~a * ~c)) - ((~c) ^ 2 * (~x) ^ 2) / ((~b) ^ 2 - 4 * ~a * ~c)), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && EqQ((~m) ^ 2, 1 / 4)))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (2 * ~d * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~b * (~m + 2 * ~p + 1)) + (((~d) ^ 2 * (~m - 1) * ((~b) ^ 2 - 4 * ~a * ~c)) / ((~b) ^ 2 * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m + 2 * ~p + 3, 0) && (GtQ(~m, 1) && (NeQ(~m + 2 * ~p + 1, 0) && (IntegerQ(2 * ~p) || (IntegerQ(~m) && RationalQ(~p) || OddQ(~m))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (-2 * ~b * ~d * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~d) ^ 2 * (~m + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (((~b) ^ 2 * (~m + 2 * ~p + 3)) / ((~d) ^ 2 * (~m + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (EqQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m + 2 * ~p + 3, 0) && (LtQ(~m, -1) && (IntegerQ(2 * ~p) || (IntegerQ(~m) && RationalQ(~p) || IntegerQ((~m + 2 * ~p + 3) / 2)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => (1 / ~e) * Subst(Antiderivative((~x) ^ ~m * ((~a - (~b) ^ 2 / (4 * ~c)) + (~c * (~x) ^ 2) / (~e) ^ 2) ^ ~p, ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ(2 * ~c * ~d - ~b * ~e, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~(a') + ~(c') * (~x) ^ 2) ^ (1 / 4)), ~x) => (1 / (2 * (-(~a)) ^ (1 / 4) * ~e)) * atan((-1 - (~c * (~x) ^ 2) / ~a) ^ (1 / 4) / ((1 - (~c * ~d * ~x) / (2 * ~a * ~e)) - sqrt(-1 - (~c * (~x) ^ 2) / ~a))) + (1 / (4 * (-(~a)) ^ (1 / 4) * ~e)) * log((((1 - (~c * ~d * ~x) / (2 * ~a * ~e)) + sqrt(-1 - (~c * (~x) ^ 2) / ~a)) - (-1 - (~c * (~x) ^ 2) / ~a) ^ (1 / 4)) / ((1 - (~c * ~d * ~x) / (2 * ~a * ~e)) + sqrt(-1 - (~c * (~x) ^ 2) / ~a) + (-1 - (~c * (~x) ^ 2) / ~a) ^ (1 / 4))) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + 2 * ~a * (~e) ^ 2, 0) && LtQ(~a, 0))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * ~m * (~d) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~c * (~p + 1)) + Antiderivative(((~d + ~e * ~x) ^ ~m - ~e * ~m * (~d) ^ (~m - 1) * ~x) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~p, 1) && (IGtQ(~m, 0) && LeQ(~m, ~p))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (IntegerQ(~p) && (GtQ(~p, 0) || EqQ(~a, 0) && IntegerQ(~m))))))
    #= Antiderivative(sqrt((~d')+(~e')*(~x))/((~a')+(~b')*(~x)+(~c')*(~x)^2),~x) :=  With([q=Rt((c*d^2-b*d*e+a*e^2)/c,2)], 1/2*Antiderivative((d+q+e*x)/(sqrt(d+e*x)*(a+b*x+c*x^2)),x) + 1/2*Antiderivative((d-q+e*x)/(sqrt(d+e*x)*(a+b*x+c*x^2)),x)) <--  FreeQ([a,b,c,d,e],x) && NeQ(b^2-4*a*c,0) && NeQ(c*d^2-b*d*e+a*e^2,0) &&  NeQ(2*c*d-b*e,0) && LtQ(b^2-4*a*c,0) =#
    #= Antiderivative(sqrt((~d)+(~e')*(~x))/((~a)+(~c')*(~x)^2),~x) :=  With([q=Rt((c*d^2+a*e^2)/c,2)], 1/2*Antiderivative((d+q+e*x)/(sqrt(d+e*x)*(a+c*x^2)),x) + 1/2*Antiderivative((d-q+e*x)/(sqrt(d+e*x)*(a+c*x^2)),x)) <-- FreeQ([a,c,d,e],x)  && NeQ(c*d^2+a*e^2,0) && LtQ(-a*c,0) =#
    #= Antiderivative(sqrt((~d')+(~e')*(~x))/((~a')+(~b')*(~x)+(~c')*(~x)^2),~x) :=  With([q=Rt(b^2-4*a*c,2)], (2*c*d-b*e+e*q)/q*Antiderivative(1/(sqrt(d+e*x)*(b-q+2*c*x)),x) - (2*c*d-b*e-e*q)/q*Antiderivative(1/(sqrt(d+e*x)*(b+q+2*c*x)),x)) <--  FreeQ([a,b,c,d,e],x) && NeQ(b^2-4*a*c,0) && NeQ(c*d^2-b*d*e+a*e^2,0) &&  NeQ(2*c*d-b*e,0)#= && Not(LtQ(b^2-4*a*c,0)) =# =#
    #= Antiderivative(sqrt((~d)+(~e')*(~x))/((~a)+(~c')*(~x)^2),~x) :=  With([q=Rt(-a*c,2)], (c*d+e*q)/(2*q)*Antiderivative(1/(sqrt(d+e*x)*(-q+c*x)),x) - (c*d-e*q)/(2*q)*Antiderivative(1/(sqrt(d+e*x)*(+q+c*x)),x)) <--  FreeQ([a,c,d,e],x) && NeQ(c*d^2+a*e^2,0)#= && Not(LtQ(-a*c,0)) =# =#
    @apply_utils Antiderivative(sqrt(~(d') + ~(e') * ~x) / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => 2 * ~e * Subst(Antiderivative((~x) ^ 2 / ((((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) - (2 * ~c * ~d - ~b * ~e) * (~x) ^ 2) + ~c * (~x) ^ 4), ~x), ~x, sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && NeQ(2 * ~c * ~d - ~b * ~e, 0)))
    @apply_utils Antiderivative(sqrt(~d + ~(e') * ~x) / (~a + ~(c') * (~x) ^ 2), ~x) => 2 * ~e * Subst(Antiderivative((~x) ^ 2 / (((~c * (~d) ^ 2 + ~a * (~e) ^ 2) - 2 * ~c * ~d * (~x) ^ 2) + ~c * (~x) ^ 4), ~x), ~x, sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Antiderivative(PolynomialDivide((~d + ~e * ~x) ^ ~m, ~a + ~b * ~x + ~c * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (IGtQ(~m, 1) && (NeQ(~d, 0) || GtQ(~m, 2))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m / (~a + ~(c') * (~x) ^ 2), ~x) => Antiderivative(PolynomialDivide((~d + ~e * ~x) ^ ~m, ~a + ~c * (~x) ^ 2, ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (IGtQ(~m, 1) && (NeQ(~d, 0) || GtQ(~m, 2))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1)) / (~c * (~m - 1)) + (1 / ~c) * Antiderivative(((~d + ~e * ~x) ^ (~m - 2) * Simp((~c * (~d) ^ 2 - ~a * (~e) ^ 2) + ~e * (2 * ~c * ~d - ~b * ~e) * ~x, ~x)) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && GtQ(~m, 1))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m / (~a + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1)) / (~c * (~m - 1)) + (1 / ~c) * Antiderivative(((~d + ~e * ~x) ^ (~m - 2) * Simp((~c * (~d) ^ 2 - ~a * (~e) ^ 2) + 2 * ~c * ~d * ~e * ~x, ~x)) / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && GtQ(~m, 1))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => ((~e) ^ 2 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(1 / (~d + ~e * ~x), ~x) + (1 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~c * ~d - ~b * ~e) - ~c * ~e * ~x) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && NeQ(2 * ~c * ~d - ~b * ~e, 0)))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2)), ~x) => ((~e) ^ 2 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(1 / (~d + ~e * ~x), ~x) + (1 / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~c * ~d - ~c * ~e * ~x) / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    #= Antiderivative(1/(sqrt((~d')+(~e')*(~x))*((~a')+(~b')*(~x)+(~c')*(~x)^2)),~x) :=  With([q=Rt((c*d^2-b*d*e+a*e^2)/c,2)], 1/(2*q)*Antiderivative((d+q+e*x)/(sqrt(d+e*x)*(a+b*x+c*x^2)),x) - 1/(2*q)*Antiderivative((d-q+e*x)/(sqrt(d+e*x)*(a+b*x+c*x^2)),x)) <--  FreeQ([a,b,c,d,e],x) && NeQ(b^2-4*a*c,0) && NeQ(c*d^2-b*d*e+a*e^2,0) &&  NeQ(2*c*d-b*e,0) && LtQ(b^2-4*a*c,0) =#
    #= Antiderivative(1/(sqrt((~d)+(~e')*(~x))*((~a)+(~c')*(~x)^2)),~x) :=  With([q=Rt((c*d^2+a*e^2)/c,2)], 1/(2*q)*Antiderivative((d+q+e*x)/(sqrt(d+e*x)*(a+c*x^2)),x) - 1/(2*q)*Antiderivative((d-q+e*x)/(sqrt(d+e*x)*(a+c*x^2)),x)) <--  FreeQ([a,c,d,e],x) && NeQ(c*d^2+a*e^2,0) && LtQ(-a*c,0) =#
    #= Antiderivative(1/(sqrt((~d')+(~e')*(~x))*((~a')+(~b')*(~x)+(~c')*(~x)^2)),~x) :=  With([q=Rt(b^2-4*a*c,2)], 2*c/q*Antiderivative(1/(sqrt(d+e*x)*(b-q+2*c*x)),x) - 2*c/q*Antiderivative(1/(sqrt(d+e*x)*(b+q+2*c*x)),x)) <-- FreeQ([a,b,c,d,e],x) &&  NeQ(b^2-4*a*c,0) && NeQ(c*d^2-b*d*e+a*e^2,0) && NeQ(2*c*d-b*e,0)#= &&  Not(LtQ(b^2-4*a*c,0)) =# =#
    #= Antiderivative(1/(sqrt((~d)+(~e')*(~x))*((~a)+(~c')*(~x)^2)),~x) :=  With([q=Rt(-a*c,2)], c/(2*q)*Antiderivative(1/(sqrt(d+e*x)*(-q+c*x)),x) - c/(2*q)*Antiderivative(1/(sqrt(d+e*x)*(q+c*x)),x)) <-- FreeQ([a,c,d,e],x) &&  NeQ(c*d^2+a*e^2,0)#= && Not(LtQ(-a*c,0)) =# =#
    @apply_utils Antiderivative(1 / (sqrt(~(d') + ~(e') * ~x) * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => 2 * ~e * Subst(Antiderivative(1 / ((((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2) - (2 * ~c * ~d - ~b * ~e) * (~x) ^ 2) + ~c * (~x) ^ 4), ~x), ~x, sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && NeQ(2 * ~c * ~d - ~b * ~e, 0)))
    @apply_utils Antiderivative(1 / (sqrt(~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2)), ~x) => 2 * ~e * Subst(Antiderivative(1 / (((~c * (~d) ^ 2 + ~a * (~e) ^ 2) - 2 * ~c * ~d * (~x) ^ 2) + ~c * (~x) ^ 4), ~x), ~x, sqrt(~d + ~e * ~x)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1)) / ((~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + (1 / ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) * Simp((~c * ~d - ~b * ~e) - ~c * ~e * ~x, ~x)) / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && LtQ(~m, -1))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m / (~a + ~(c') * (~x) ^ 2), ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1)) / ((~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + (~c / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative(((~d + ~e * ~x) ^ (~m + 1) * (~d - ~e * ~x)) / (~a + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && LtQ(~m, -1))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m, 1 / (~a + ~b * ~x + ~c * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && Not(IntegerQ(~m)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m / (~a + ~(c') * (~x) ^ 2), ~x) => Antiderivative(ExpandIntegrand((~d + ~e * ~x) ^ ~m, 1 / (~a + ~c * (~x) ^ 2), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~m)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((~d + ~e * ~x) ^ FracPart(~p) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ FracPart(~p)) / (~a * ~d + ~c * ~e * (~x) ^ 3) ^ FracPart(~p)) * Antiderivative((~d + ~e * ~x) ^ (~m - ~p) * (~a * ~d + ~c * ~e * (~x) ^ 3) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (EqQ(~b * ~d + ~a * ~e, 0) && (EqQ(~c * ~d + ~b * ~e, 0) && (IGtQ((~m - ~p) + 1, 0) && Not(IntegerQ(~p)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / sqrt(~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => Antiderivative((~d + ~e * ~x) ^ ~m / (sqrt(~b * ~x) * sqrt(1 + (~c / ~b) * ~x)), ~x) <-- FreeQ([~b, ~c, ~d, ~e], ~x) && (NeQ(~c * ~d - ~b * ~e, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ((~m) ^ 2, 1 / 4) && (LtQ(~c, 0) && RationalQ(~b)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / sqrt(~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((sqrt(~x) * sqrt(~b + ~c * ~x)) / sqrt(~b * ~x + ~c * (~x) ^ 2)) * Antiderivative((~d + ~e * ~x) ^ ~m / (sqrt(~x) * sqrt(~b + ~c * ~x)), ~x) <-- FreeQ([~b, ~c, ~d, ~e], ~x) && (NeQ(~c * ~d - ~b * ~e, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && EqQ((~m) ^ 2, 1 / 4)))
    @apply_utils Antiderivative((~x) ^ ~m / sqrt(~a + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => 2 * Subst(Antiderivative((~x) ^ (2 * ~m + 1) / sqrt(~a + ~b * (~x) ^ 2 + ~c * (~x) ^ 4), ~x), ~x, sqrt(~x)) <-- FreeQ([~a, ~b, ~c], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ((~m) ^ 2, 1 / 4))
    @apply_utils Antiderivative((~e * ~x) ^ ~m / sqrt(~a + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((~e * ~x) ^ ~m / (~x) ^ ~m) * Antiderivative((~x) ^ ~m / sqrt(~a + ~b * ~x + ~c * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ((~m) ^ 2, 1 / 4))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m / sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2), ~x) => ((2 * Rt((~b) ^ 2 - 4 * ~a * ~c, 2) * (~d + ~e * ~x) ^ ~m * sqrt((-(~c) * (~a + ~b * ~x + ~c * (~x) ^ 2)) / ((~b) ^ 2 - 4 * ~a * ~c))) / (~c * sqrt(~a + ~b * ~x + ~c * (~x) ^ 2) * ((2 * ~c * (~d + ~e * ~x)) / ((2 * ~c * ~d - ~b * ~e) - ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2))) ^ ~m)) * Subst(Antiderivative((1 + (2 * ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2) * (~x) ^ 2) / ((2 * ~c * ~d - ~b * ~e) - ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2))) ^ ~m / sqrt(1 - (~x) ^ 2), ~x), ~x, sqrt((~b + Rt((~b) ^ 2 - 4 * ~a * ~c, 2) + 2 * ~c * ~x) / (2 * Rt((~b) ^ 2 - 4 * ~a * ~c, 2)))) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && EqQ((~m) ^ 2, 1 / 4))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m / sqrt(~a + ~(c') * (~x) ^ 2), ~x) => ((2 * ~a * Rt(-(~c) / ~a, 2) * (~d + ~e * ~x) ^ ~m * sqrt(1 + (~c * (~x) ^ 2) / ~a)) / (~c * sqrt(~a + ~c * (~x) ^ 2) * ((~c * (~d + ~e * ~x)) / (~c * ~d - ~a * ~e * Rt(-(~c) / ~a, 2))) ^ ~m)) * Subst(Antiderivative((1 + (2 * ~a * ~e * Rt(-(~c) / ~a, 2) * (~x) ^ 2) / (~c * ~d - ~a * ~e * Rt(-(~c) / ~a, 2))) ^ ~m / sqrt(1 - (~x) ^ 2), ~x), ~x, sqrt((1 - Rt(-(~c) / ~a, 2) * ~x) / 2)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && EqQ((~m) ^ 2, 1 / 4))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~d + ~e * ~x) ^ (~m + 1)) * ((~d * ~b - 2 * ~a * ~e) + (2 * ~c * ~d - ~b * ~e) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (2 * (~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + ((~p * ((~b) ^ 2 - 4 * ~a * ~c)) / (2 * (~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ(~m + 2 * ~p + 2, 0) && GtQ(~p, 0)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~d + ~e * ~x) ^ (~m + 1)) * (-2 * ~a * ~e + (2 * ~c * ~d) * ~x) * (~a + ~c * (~x) ^ 2) ^ ~p) / (2 * (~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) - ((4 * ~a * ~c * ~p) / (2 * (~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ (~m + 2) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (EqQ(~m + 2 * ~p + 2, 0) && GtQ(~p, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m - 1) * ((~d * ~b - 2 * ~a * ~e) + (2 * ~c * ~d - ~b * ~e) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) - ((2 * (2 * ~p + 3) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ(~m + 2 * ~p + 2, 0) && LtQ(~p, -1)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m - 1) * (~a * ~e - ~c * ~d * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * ~c * (~p + 1)) + (((2 * ~p + 3) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) / (2 * ~a * ~c * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (EqQ(~m + 2 * ~p + 2, 0) && LtQ(~p, -1)))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * sqrt(~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2)), ~x) => -2 * Subst(Antiderivative(1 / (((4 * ~c * (~d) ^ 2 - 4 * ~b * ~d * ~e) + 4 * ~a * (~e) ^ 2) - (~x) ^ 2), ~x), ~x, ((2 * ~a * ~e - ~b * ~d) - (2 * ~c * ~d - ~b * ~e) * ~x) / sqrt(~a + ~b * ~x + ~c * (~x) ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && NeQ(2 * ~c * ~d - ~b * ~e, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * sqrt(~a + ~(c') * (~x) ^ 2)), ~x) => -(Subst(Antiderivative(1 / ((~c * (~d) ^ 2 + ~a * (~e) ^ 2) - (~x) ^ 2), ~x), ~x, (~a * ~e - ~c * ~d * ~x) / sqrt(~a + ~c * (~x) ^ 2))) <-- FreeQ([~a, ~c, ~d, ~e], ~x)
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((-(((~b - Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) + 2 * ~c * ~x)) * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / ((~m + 1) * ((2 * ~c * ~d - ~b * ~e) + ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) * ((((2 * ~c * ~d - ~b * ~e) + ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) * (~b + Rt((~b) ^ 2 - 4 * ~a * ~c, 2) + 2 * ~c * ~x)) / (((2 * ~c * ~d - ~b * ~e) - ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) * ((~b - Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) + 2 * ~c * ~x))) ^ ~p)) * HypergeometricFunctions._₂F₁(~m + 1, -(~p), ~m + 2, (-4 * ~c * Rt((~b) ^ 2 - 4 * ~a * ~c, 2) * (~d + ~e * ~x)) / (((2 * ~c * ~d - ~b * ~e) - ~e * Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) * ((~b - Rt((~b) ^ 2 - 4 * ~a * ~c, 2)) + 2 * ~c * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (Not(IntegerQ(~p)) && EqQ(~m + 2 * ~p + 2, 0)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (((Rt(-(~a) * ~c, 2) - ~c * ~x) * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / ((~m + 1) * (~c * ~d + ~e * Rt(-(~a) * ~c, 2)) * (((~c * ~d + ~e * Rt(-(~a) * ~c, 2)) * (Rt(-(~a) * ~c, 2) + ~c * ~x)) / ((~c * ~d - ~e * Rt(-(~a) * ~c, 2)) * (-(Rt(-(~a) * ~c, 2)) + ~c * ~x))) ^ ~p)) * HypergeometricFunctions._₂F₁(~m + 1, -(~p), ~m + 2, (2 * ~c * Rt(-(~a) * ~c, 2) * (~d + ~e * ~x)) / ((~c * ~d - ~e * Rt(-(~a) * ~c, 2)) * (Rt(-(~a) * ~c, 2) - ~c * ~x))) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && EqQ(~m + 2 * ~p + 2, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ ~m * (~b + 2 * ~c * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + ((~m * (2 * ~c * ~d - ~b * ~e)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ(~m + 2 * ~p + 3, 0) && LtQ(~p, -1)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~d + ~e * ~x) ^ ~m) * (2 * ~c * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (4 * ~a * ~c * (~p + 1)) - ((~m * (2 * ~c * ~d)) / (4 * ~a * ~c * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (EqQ(~m + 2 * ~p + 3, 0) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + ((2 * ~c * ~d - ~b * ~e) / (2 * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && EqQ(~m + 2 * ~p + 3, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + ((~c * ~d) / (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && EqQ(~m + 2 * ~p + 3, 0))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 1)) - (~p / (~e * (~m + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * (~b + 2 * ~c * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (GtQ(~p, 0) && ((IntegerQ(~p) || LtQ(~m, -1)) && (NeQ(~m, -1) && (Not(ILtQ(~m + 2 * ~p + 1, 0)) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 1)) - ((2 * ~c * ~p) / (~e * (~m + 1))) * Antiderivative(~x * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && ((IntegerQ(~p) || LtQ(~m, -1)) && (NeQ(~m, -1) && (Not(ILtQ(~m + 2 * ~p + 1, 0)) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 2 * ~p + 1)) - (~p / (~e * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * Simp((~b * ~d - 2 * ~a * ~e) + (2 * ~c * ~d - ~b * ~e) * ~x, ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (GtQ(~p, 0) && (NeQ(~m + 2 * ~p + 1, 0) && ((Not(RationalQ(~m)) || LtQ(~m, 1)) && (Not(ILtQ(~m + 2 * ~p, 0)) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x))))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ ~p) / (~e * (~m + 2 * ~p + 1)) + ((2 * ~p) / (~e * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ ~m * Simp(~a * ~e - ~c * ~d * ~x, ~x) * (~a + ~c * (~x) ^ 2) ^ (~p - 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (GtQ(~p, 0) && (NeQ(~m + 2 * ~p + 1, 0) && ((Not(RationalQ(~m)) || LtQ(~m, 1)) && (Not(ILtQ(~m + 2 * ~p, 0)) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x))))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ ~m * (~b + 2 * ~c * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) - (1 / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~b * ~e * ~m + 2 * ~c * ~d * (2 * ~p + 3) + 2 * ~c * ~e * (~m + 2 * ~p + 3) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (LtQ(~p, -1) && (GtQ(~m, 0) && ((LtQ(~m, 1) || ILtQ(~m + 2 * ~p + 3, 0) && NeQ(~m, 2)) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-(~x) * (~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * (~p + 1)) + (1 / (2 * ~a * (~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 1) * (~d * (2 * ~p + 3) + ~e * (~m + 2 * ~p + 3) * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && (GtQ(~m, 0) && ((LtQ(~m, 1) || ILtQ(~m + 2 * ~p + 3, 0) && NeQ(~m, 2)) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m - 1) * ((~d * ~b - 2 * ~a * ~e) + (2 * ~c * ~d - ~b * ~e) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c)) + (1 / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * Simp((~e * (2 * ~a * ~e * (~m - 1) + ~b * ~d * ((2 * ~p - ~m) + 4)) - 2 * ~c * (~d) ^ 2 * (2 * ~p + 3)) + ~e * (~b * ~e - 2 * ~d * ~c) * (~m + 2 * ~p + 2) * ~x, ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (LtQ(~p, -1) && (GtQ(~m, 1) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m - 1) * (~a * ~e - ~c * ~d * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * ~c * (~p + 1)) + (1 / ((~p + 1) * (-2 * ~a * ~c))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * Simp((~a * (~e) ^ 2 * (~m - 1) - ~c * (~d) ^ 2 * (2 * ~p + 3)) - ~d * ~c * ~e * (~m + 2 * ~p + 2) * ~x, ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && (GtQ(~m, 1) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => ((~d + ~e * ~x) ^ (~m + 1) * ((~b * ~c * ~d - (~b) ^ 2 * ~e) + 2 * ~a * ~c * ~e + ~c * (2 * ~c * ~d - ~b * ~e) * ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + (1 / ((~p + 1) * ((~b) ^ 2 - 4 * ~a * ~c) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ ~m * Simp((((~b * ~c * ~d * ~e * ((2 * ~p - ~m) + 2) + (~b) ^ 2 * (~e) ^ 2 * (~m + ~p + 2)) - 2 * (~c) ^ 2 * (~d) ^ 2 * (2 * ~p + 3)) - 2 * ~a * ~c * (~e) ^ 2 * (~m + 2 * ~p + 3)) - ~c * ~e * (2 * ~c * ~d - ~b * ~e) * (~m + 2 * ~p + 4) * ~x, ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (LtQ(~p, -1) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (-((~d + ~e * ~x) ^ (~m + 1)) * (~a * ~e + ~c * ~d * ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (2 * ~a * (~p + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + (1 / (2 * ~a * (~p + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ ~m * Simp(~c * (~d) ^ 2 * (2 * ~p + 3) + ~a * (~e) ^ 2 * (~m + 2 * ~p + 3) + ~c * ~e * ~d * (~m + 2 * ~p + 4) * ~x, ~x) * (~a + ~c * (~x) ^ 2) ^ (~p + 1), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (LtQ(~p, -1) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~m + 2 * ~p + 1)) + (1 / (~c * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * Simp((~c * (~d) ^ 2 * (~m + 2 * ~p + 1) - ~e * (~a * ~e * (~m - 1) + ~b * ~d * (~p + 1))) + ~e * (2 * ~c * ~d - ~b * ~e) * (~m + ~p) * ~x, ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (If(RationalQ(~m), GtQ(~m, 1), SumSimplerQ(~m, -2)) && (NeQ(~m + 2 * ~p + 1, 0) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m - 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / (~c * (~m + 2 * ~p + 1)) + (1 / (~c * (~m + 2 * ~p + 1))) * Antiderivative((~d + ~e * ~x) ^ (~m - 2) * Simp((~c * (~d) ^ 2 * (~m + 2 * ~p + 1) - ~a * (~e) ^ 2 * (~m - 1)) + 2 * ~c * ~d * ~e * (~m + ~p) * ~x, ~x) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (If(RationalQ(~m), GtQ(~m, 1), SumSimplerQ(~m, -2)) && (NeQ(~m + 2 * ~p + 1, 0) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2)) + (1 / ((~m + 1) * ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * Simp((~c * ~d * (~m + 1) - ~b * ~e * (~m + ~p + 2)) - ~c * ~e * (~m + 2 * ~p + 3) * ~x, ~x) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (NeQ(~m, -1) && (LtQ(~m, -1) && IntQuadraticQ(~a, ~b, ~c, ~d, ~e, ~m, ~p, ~x) || (SumSimplerQ(~m, 1) && IntegerQ(~p) || ILtQ(Simplify(~m + 2 * ~p + 3), 0)))))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => (~e * (~d + ~e * ~x) ^ (~m + 1) * (~a + ~c * (~x) ^ 2) ^ (~p + 1)) / ((~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2)) + (~c / ((~m + 1) * (~c * (~d) ^ 2 + ~a * (~e) ^ 2))) * Antiderivative((~d + ~e * ~x) ^ (~m + 1) * Simp(~d * (~m + 1) - ~e * (~m + 2 * ~p + 3) * ~x, ~x) * (~a + ~c * (~x) ^ 2) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (NeQ(~m, -1) && (LtQ(~m, -1) && IntQuadraticQ(~a, 0, ~c, ~d, ~e, ~m, ~p, ~x) || (SumSimplerQ(~m, 1) && IntegerQ(~p) || ILtQ(Simplify(~m + 2 * ~p + 3), 0)))))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ (1 / 4)), ~x) => ~d * Antiderivative(1 / (((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2) * (~a + ~c * (~x) ^ 2) ^ (1 / 4)), ~x) - ~e * Antiderivative(~x / (((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2) * (~a + ~c * (~x) ^ 2) ^ (1 / 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ (3 / 4)), ~x) => ~d * Antiderivative(1 / (((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2) * (~a + ~c * (~x) ^ 2) ^ (3 / 4)), ~x) - ~e * Antiderivative(~x / (((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2) * (~a + ~c * (~x) ^ 2) ^ (3 / 4)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p / (~(d') + ~(e') * ~x), ~x) => (1 / ((-4 * ~c) / ((~b) ^ 2 - 4 * ~a * ~c)) ^ ~p) * Subst(Antiderivative(Simp(1 - (~x) ^ 2 / ((~b) ^ 2 - 4 * ~a * ~c), ~x) ^ ~p / Simp((2 * ~c * ~d - ~b * ~e) + ~e * ~x, ~x), ~x), ~x, ~b + 2 * ~c * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (GtQ(4 * ~a - (~b) ^ 2 / ~c, 0) && IntegerQ(4 * ~p))
    @apply_utils Antiderivative((~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p / (~(d') + ~(e') * ~x), ~x) => ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p / ((-(~c) * (~a + ~b * ~x + ~c * (~x) ^ 2)) / ((~b) ^ 2 - 4 * ~a * ~c)) ^ ~p) * Antiderivative((((-(~a) * ~c) / ((~b) ^ 2 - 4 * ~a * ~c) - (~b * ~c * ~x) / ((~b) ^ 2 - 4 * ~a * ~c)) - ((~c) ^ 2 * (~x) ^ 2) / ((~b) ^ 2 - 4 * ~a * ~c)) ^ ~p / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (Not(GtQ(4 * ~a - (~b) ^ 2 / ~c, 0)) && IntegerQ(4 * ~p))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ (1 / 3)), ~x) => With([q = Rt(3 * ~c * (~e) ^ 2 * (2 * ~c * ~d - ~b * ~e), 3)], ((-(sqrt(3)) * ~c * ~e * atan(1 / sqrt(3) + (2 * ((~c * ~d - ~b * ~e) - ~c * ~e * ~x)) / (sqrt(3) * q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (1 / 3)))) / q ^ 2 - (3 * ~c * ~e * log(~d + ~e * ~x)) / (2 * q ^ 2)) + (3 * ~c * ~e * log(((~c * ~d - ~b * ~e) - ~c * ~e * ~x) - q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (1 / 3))) / (2 * q ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ((((~c) ^ 2 * (~d) ^ 2 - ~b * ~c * ~d * ~e) + (~b) ^ 2 * (~e) ^ 2) - 3 * ~a * ~c * (~e) ^ 2, 0) && PosQ(~c * (~e) ^ 2 * (2 * ~c * ~d - ~b * ~e))))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ (1 / 3)), ~x) => With([q = Rt((6 * (~c) ^ 2 * (~e) ^ 2) / (~d) ^ 2, 3)], ((-(sqrt(3)) * ~c * ~e * atan(1 / sqrt(3) + (2 * ~c * (~d - ~e * ~x)) / (sqrt(3) * ~d * q * (~a + ~c * (~x) ^ 2) ^ (1 / 3)))) / ((~d) ^ 2 * q ^ 2) - (3 * ~c * ~e * log(~d + ~e * ~x)) / (2 * (~d) ^ 2 * q ^ 2)) + (3 * ~c * ~e * log((~c * ~d - ~c * ~e * ~x) - ~d * q * (~a + ~c * (~x) ^ 2) ^ (1 / 3))) / (2 * (~d) ^ 2 * q ^ 2)) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && EqQ(~c * (~d) ^ 2 - 3 * ~a * (~e) ^ 2, 0)
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ (1 / 3)), ~x) => With([q = Rt(-3 * ~c * (~e) ^ 2 * (2 * ~c * ~d - ~b * ~e), 3)], ((-(sqrt(3)) * ~c * ~e * atan(1 / sqrt(3) - (2 * ((~c * ~d - ~b * ~e) - ~c * ~e * ~x)) / (sqrt(3) * q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (1 / 3)))) / q ^ 2 - (3 * ~c * ~e * log(~d + ~e * ~x)) / (2 * q ^ 2)) + (3 * ~c * ~e * log(((~c * ~d - ~b * ~e) - ~c * ~e * ~x) + q * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (1 / 3))) / (2 * q ^ 2)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (EqQ((((~c) ^ 2 * (~d) ^ 2 - ~b * ~c * ~d * ~e) + (~b) ^ 2 * (~e) ^ 2) - 3 * ~a * ~c * (~e) ^ 2, 0) && NegQ(~c * (~e) ^ 2 * (2 * ~c * ~d - ~b * ~e))))
    #= Antiderivative(1/(((~d)+(~e')*(~x))*((~a)+(~c')*(~x)^2)^(1/3)),~x) :=  With([q=Rt(-6*c^2*d*e^2,3)], -sqrt(3)*c*e*atan(1/sqrt(3)-2*(c*d-c*e*x)/(sqrt(3)*q*(a+c*x^2)^(1/ 3)))/q^2 - 3*c*e*log(d+e*x)/(2*q^2) + 3*c*e*log(c*d-c*e*x+q*(a+c*x^2)^(1/3))/(2*q^2)) <--  FreeQ([a,c,d,e],x) && EqQ(c*d^2-3*a*e^2,0) && NegQ(c^2*d*e^2) =#
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ (1 / 3)), ~x) => (~a) ^ (1 / 3) * Antiderivative(1 / ((~d + ~e * ~x) * (1 - (3 * ~e * ~x) / ~d) ^ (1 / 3) * (1 + (3 * ~e * ~x) / ~d) ^ (1 / 3)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + 9 * ~a * (~e) ^ 2, 0) && GtQ(~a, 0))
    @apply_utils Antiderivative(1 / ((~d + ~(e') * ~x) * (~a + ~(c') * (~x) ^ 2) ^ (1 / 3)), ~x) => ((1 + (~c * (~x) ^ 2) / ~a) ^ (1 / 3) / (~a + ~c * (~x) ^ 2) ^ (1 / 3)) * Antiderivative(1 / ((~d + ~e * ~x) * (1 + (~c * (~x) ^ 2) / ~a) ^ (1 / 3)), ~x) <-- FreeQ([~a, ~c, ~d, ~e], ~x) && (EqQ(~c * (~d) ^ 2 + 9 * ~a * (~e) ^ 2, 0) && Not(GtQ(~a, 0)))
    @apply_utils Antiderivative(1 / ((~(d') + ~(e') * ~x) * (~a + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ (1 / 3)), ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], (((~b + q + 2 * ~c * ~x) ^ (1 / 3) * ((~b - q) + 2 * ~c * ~x) ^ (1 / 3)) / (~a + ~b * ~x + ~c * (~x) ^ 2) ^ (1 / 3)) * Antiderivative(1 / ((~d + ~e * ~x) * (~b + q + 2 * ~c * ~x) ^ (1 / 3) * ((~b - q) + 2 * ~c * ~x) ^ (1 / 3)), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && EqQ((((~c) ^ 2 * (~d) ^ 2 - ~b * ~c * ~d * ~e) - 2 * (~b) ^ 2 * (~e) ^ 2) + 9 * ~a * ~c * (~e) ^ 2, 0))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative((~d + ~e * ~x) ^ ~m * (Rt(~a, 2) + Rt(-(~c), 2) * ~x) ^ ~p * (Rt(~a, 2) - Rt(-(~c), 2) * ~x) ^ ~p, ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && (GtQ(~a, 0) && LtQ(~c, 0))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~a + ~c * (~x) ^ 2) ^ ~p, (~d / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2) - (~e * ~x) / ((~d) ^ 2 - (~e) ^ 2 * (~x) ^ 2)) ^ -(~m), ~x), ~x) <-- FreeQ([~a, ~c, ~d, ~e, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && (Not(IntegerQ(~p)) && ILtQ(~m, 0)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((-((1 / (~d + ~e * ~x)) ^ (2 * ~p)) * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p) / (~e * ((~e * ((~b - q) + 2 * ~c * ~x)) / (2 * ~c * (~d + ~e * ~x))) ^ ~p * ((~e * (~b + q + 2 * ~c * ~x)) / (2 * ~c * (~d + ~e * ~x))) ^ ~p)) * Subst(Antiderivative((~x) ^ (-(~m) - 2 * (~p + 1)) * Simp(1 - (~d - (~e * (~b - q)) / (2 * ~c)) * ~x, ~x) ^ ~p * Simp(1 - (~d - (~e * (~b + q)) / (2 * ~c)) * ~x, ~x) ^ ~p, ~x), ~x, 1 / (~d + ~e * ~x))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && (Not(IntegerQ(~p)) && ILtQ(~m, 0)))))
    @apply_utils Antiderivative((~(d') + ~(e') * ~x) ^ ~m * (~(a') + ~(b') * ~x + ~(c') * (~x) ^ 2) ^ ~p, ~x) => With([q = Rt((~b) ^ 2 - 4 * ~a * ~c, 2)], ((~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p / (~e * (1 - (~d + ~e * ~x) / (~d - (~e * (~b - q)) / (2 * ~c))) ^ ~p * (1 - (~d + ~e * ~x) / (~d - (~e * (~b + q)) / (2 * ~c))) ^ ~p)) * Subst(Antiderivative((~x) ^ ~m * Simp(1 - ~x / (~d - (~e * (~b - q)) / (2 * ~c)), ~x) ^ ~p * Simp(1 - ~x / (~d - (~e * (~b + q)) / (2 * ~c)), ~x) ^ ~p, ~x), ~x, ~d + ~e * ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ((~b) ^ 2 - 4 * ~a * ~c, 0) && (NeQ((~c * (~d) ^ 2 - ~b * ~d * ~e) + ~a * (~e) ^ 2, 0) && (NeQ(2 * ~c * ~d - ~b * ~e, 0) && Not(IntegerQ(~p)))))
    @apply_utils Antiderivative((~d + ~(e') * ~x) ^ ~m * (~a + ~(c') * (~x) ^ 2) ^ ~p, ~x) => With([q = Rt(-(~a) * ~c, 2)], ((~a + ~c * (~x) ^ 2) ^ ~p / (~e * (1 - (~d + ~e * ~x) / (~d + (~e * q) / ~c)) ^ ~p * (1 - (~d + ~e * ~x) / (~d - (~e * q) / ~c)) ^ ~p)) * Subst(Antiderivative((~x) ^ ~m * Simp(1 - ~x / (~d + (~e * q) / ~c), ~x) ^ ~p * Simp(1 - ~x / (~d - (~e * q) / ~c), ~x) ^ ~p, ~x), ~x, ~d + ~e * ~x)) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (NeQ(~c * (~d) ^ 2 + ~a * (~e) ^ 2, 0) && Not(IntegerQ(~p)))
    @apply_utils Antiderivative((~(d') + ~(e') * ~u) ^ ~(m') * (~a + ~(b') * ~u + ~(c') * (~u) ^ 2) ^ ~(p'), ~x) => (1 / Coefficient(~u, ~x, 1)) * Subst(Antiderivative((~d + ~e * ~x) ^ ~m * (~a + ~b * ~x + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, ~u) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~m, ~p], ~x) && (LinearQ(~u, ~x) && NeQ(~u, ~x))
    @apply_utils Antiderivative((~(d') + ~(e') * ~u) ^ ~(m') * (~a + ~(c') * (~u) ^ 2) ^ ~(p'), ~x) => (1 / Coefficient(~u, ~x, 1)) * Subst(Antiderivative((~d + ~e * ~x) ^ ~m * (~a + ~c * (~x) ^ 2) ^ ~p, ~x), ~x, ~u) <-- FreeQ([~a, ~c, ~d, ~e, ~m, ~p], ~x) && (LinearQ(~u, ~x) && NeQ(~u, ~x))
    #= IntQuadraticQ(a,b,c,d,e,m,p,x)*returns*True*iff  (d+e*x)^m*(a+b*x+c*x^2)^p*is*integrable*wrt*x*in*terms*of*non-Appell  functions. =#IntQuadraticQ((~a), (~b), (~c), (~d), (~e), (~m), (~p), (~x)) := IntegerQ(p) || IGtQ(m, 0) || IntegersQ(2*m, 2*p) || IntegersQ(m, 4*p) || IntegersQ(m, p + 1/3) && (EqQ(c^2*d^2 - b*c*d*e + b^2*e^2 - 3*a*c*e^2, 0) || EqQ(c^2*d^2 - b*c*d*e - 2*b^2*e^2 + 9*a*c*e^2, 0))
end
