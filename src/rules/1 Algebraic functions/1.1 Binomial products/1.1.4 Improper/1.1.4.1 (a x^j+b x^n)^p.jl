int_rules_1_1_4_1 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 1.1.4.1*(a*x^j+b*x^n)^p =#
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~b * (~n - ~j) * (~p + 1) * (~x) ^ (~n - 1)) <-- FreeQ([~a, ~b, ~j, ~n, ~p], ~x) && (Not(IntegerQ(~p)) && (NeQ(~n, ~j) && EqQ((~j * ~p - ~n) + ~j + 1, 0)))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => -((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~a * (~n - ~j) * (~p + 1) * (~x) ^ (~j - 1)) + ((((~n * ~p + ~n) - ~j) + 1) / (~a * (~n - ~j) * (~p + 1))) * Antiderivative((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~x) ^ ~j, ~x) <-- FreeQ([~a, ~b, ~j, ~n], ~x) && (Not(IntegerQ(~p)) && (NeQ(~n, ~j) && (ILtQ(Simplify((((~n * ~p + ~n) - ~j) + 1) / (~n - ~j)), 0) && LtQ(~p, -1))))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~a * (~j * ~p + 1) * (~x) ^ (~j - 1)) - ((~b * (((~n * ~p + ~n) - ~j) + 1)) / (~a * (~j * ~p + 1))) * Antiderivative((~x) ^ (~n - ~j) * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~j, ~n, ~p], ~x) && (Not(IntegerQ(~p)) && (NeQ(~n, ~j) && (ILtQ(Simplify((((~n * ~p + ~n) - ~j) + 1) / (~n - ~j)), 0) && NeQ(~j * ~p + 1, 0))))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => (~x * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ ~p) / (~j * ~p + 1) - ((~b * (~n - ~j) * ~p) / (~j * ~p + 1)) * Antiderivative((~x) ^ ~n * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b], ~x) && (Not(IntegerQ(~p)) && (LtQ(0, ~j, ~n) && (GtQ(~p, 0) && LtQ(~j * ~p + 1, 0))))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => (~x * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ ~p) / (~n * ~p + 1) + ((~a * (~n - ~j) * ~p) / (~n * ~p + 1)) * Antiderivative((~x) ^ ~j * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b], ~x) && (Not(IntegerQ(~p)) && (LtQ(0, ~j, ~n) && (GtQ(~p, 0) && NeQ(~n * ~p + 1, 0))))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~b * (~n - ~j) * (~p + 1) * (~x) ^ (~n - 1)) - (((~j * ~p - ~n) + ~j + 1) / (~b * (~n - ~j) * (~p + 1))) * Antiderivative((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~x) ^ ~n, ~x) <-- FreeQ([~a, ~b], ~x) && (Not(IntegerQ(~p)) && (LtQ(0, ~j, ~n) && (LtQ(~p, -1) && GtQ(~j * ~p + 1, ~n - ~j))))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => -((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~a * (~n - ~j) * (~p + 1) * (~x) ^ (~j - 1)) + ((((~n * ~p + ~n) - ~j) + 1) / (~a * (~n - ~j) * (~p + 1))) * Antiderivative((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~x) ^ ~j, ~x) <-- FreeQ([~a, ~b], ~x) && (Not(IntegerQ(~p)) && (LtQ(0, ~j, ~n) && LtQ(~p, -1)))
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => (~x * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ ~p) / (~p * (~n - ~j)) + ~a * Antiderivative((~x) ^ ~j * (~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p - 1), ~x) <-- FreeQ([~a, ~b, ~j, ~n], ~x) && (IGtQ(~p + 1 / 2, 0) && (NeQ(~n, ~j) && EqQ(Simplify(~j * ~p + 1), 0)))
    @apply_utils Antiderivative(1 / sqrt(~(a') * (~x) ^ 2 + ~(b') * (~x) ^ ~(n')), ~x) => (2 / (2 - ~n)) * Subst(Antiderivative(1 / (1 - ~a * (~x) ^ 2), ~x), ~x, ~x / sqrt(~a * (~x) ^ 2 + ~b * (~x) ^ ~n)) <-- FreeQ([~a, ~b, ~n], ~x) && NeQ(~n, 2)
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => -((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1)) / (~a * (~n - ~j) * (~p + 1) * (~x) ^ (~j - 1)) + ((((~n * ~p + ~n) - ~j) + 1) / (~a * (~n - ~j) * (~p + 1))) * Antiderivative((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ (~p + 1) / (~x) ^ ~j, ~x) <-- FreeQ([~a, ~b, ~j, ~n], ~x) && (ILtQ(~p + 1 / 2, 0) && (NeQ(~n, ~j) && EqQ(Simplify(~j * ~p + 1), 0)))
    @apply_utils Antiderivative(1 / sqrt(~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')), ~x) => (-2 * sqrt(~a * (~x) ^ ~j + ~b * (~x) ^ ~n)) / (~b * (~n - 2) * (~x) ^ (~n - 1)) - ((~a * ((2 * ~n - ~j) - 2)) / (~b * (~n - 2))) * Antiderivative(1 / ((~x) ^ (~n - ~j) * sqrt(~a * (~x) ^ ~j + ~b * (~x) ^ ~n)), ~x) <-- FreeQ([~a, ~b], ~x) && LtQ(2 * (~n - 1), ~j, ~n)
    #= Antiderivative(((~a')*(~x)^(~j')+(~b')*(~x)^(~n'))^(~p),~x) :=  x*(a*x^j+b*x^n)^p/(p*(n-j)*((a*x^j+b*x^n)/(b*x^n))^p)* HypergeometricFunctions._₂F₁(-p,-p,1-p,-a/(b*x^(n-j))) <-- FreeQ([a,b,j,n,p],x) &&  Not(IntegerQ(p)) && NeQ(n,j) && EqQ(j*p+1,0) =#
    #= Antiderivative(((~a')*(~x)^(~j')+(~b')*(~x)^(~n'))^(~p),~x) :=  x*(a*x^j+b*x^n)^p/((j*p+1)*((a*x^j+b*x^n)/(a*x^j))^p)* HypergeometricFunctions._₂F₁(-p,(j*p+1)/(n-j),(j*p+1)/(n-j)+1,-b*x^(n-j)/a) <--  FreeQ([a,b,j,n,p],x) && Not(IntegerQ(p)) && NeQ(n,j) && NeQ(j*p+1,0) =#
    @apply_utils Antiderivative((~(a') * (~x) ^ ~(j') + ~(b') * (~x) ^ ~(n')) ^ ~p, ~x) => ((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ FracPart(~p) / ((~x) ^ (~j * FracPart(~p)) * (~a + ~b * (~x) ^ (~n - ~j)) ^ FracPart(~p))) * Antiderivative((~x) ^ (~j * ~p) * (~a + ~b * (~x) ^ (~n - ~j)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~j, ~n, ~p], ~x) && (Not(IntegerQ(~p)) && (NeQ(~n, ~j) && PosQ(~n - ~j)))
    @apply_utils Antiderivative((~(a') * (~u) ^ ~(j') + ~(b') * (~u) ^ ~(n')) ^ ~p, ~x) => (1 / Coefficient(~u, ~x, 1)) * Subst(Antiderivative((~a * (~x) ^ ~j + ~b * (~x) ^ ~n) ^ ~p, ~x), ~x, ~u) <-- FreeQ([~a, ~b, ~j, ~n, ~p], ~x) && (LinearQ(~u, ~x) && NeQ(~u, ~x))
end
