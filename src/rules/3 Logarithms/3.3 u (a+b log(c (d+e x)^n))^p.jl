int_rules_3_3 = @theory begin

    #= ::Subsection::Closed:: =#
    #= 3.3*u*(a+b*log(c*(d+e*x)^n))^p =#
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => (1 / ~e) * Subst(Antiderivative((~a + ~b * log(~c * (~x) ^ ~n)) ^ ~p, ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x)
    @apply_utils Antiderivative((~f + ~(g') * ~x) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => (1 / ~e) * Subst(Antiderivative(((~f * ~x) / ~d) ^ ~q * (~a + ~b * log(~c * (~x) ^ ~n)) ^ ~p, ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p, ~q], ~x) && EqQ(~e * ~f - ~d * ~g, 0)
    @apply_utils Antiderivative(log(~(c') * (~d + ~(e') * (~x) ^ ~(n'))) / ~x, ~x) => -(PolyLog(2, -(~c) * ~e * (~x) ^ ~n)) / ~n <-- FreeQ([~c, ~d, ~e, ~n], ~x) && EqQ(~c * ~d, 1)
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x))) / ~x, ~x) => (~a + ~b * log(~c * ~d)) * log(~x) + ~b * Antiderivative(log(1 + (~e * ~x) / ~d) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e], ~x) && GtQ(~c * ~d, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x))) / (~(f') + ~(g') * ~x), ~x) => (1 / ~g) * Subst(Antiderivative((~a + ~b * log(1 + (~c * ~e * ~x) / ~g)) / ~x, ~x), ~x, ~f + ~g * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && EqQ(~g + ~c * (~e * ~f - ~d * ~g), 0))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) / (~(f') + ~(g') * ~x), ~x) => (log((~e * (~f + ~g * ~x)) / (~e * ~f - ~d * ~g)) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n))) / ~g - ((~b * ~e * ~n) / ~g) * Antiderivative(log((~e * (~f + ~g * ~x)) / (~e * ~f - ~d * ~g)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && NeQ(~e * ~f - ~d * ~g, 0)
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => ((~f + ~g * ~x) ^ (~q + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n))) / (~g * (~q + 1)) - ((~b * ~e * ~n) / (~g * (~q + 1))) * Antiderivative((~f + ~g * ~x) ^ (~q + 1) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~q], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && NeQ(~q, -1))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p / (~(f') + ~(g') * ~x), ~x) => (log((~e * (~f + ~g * ~x)) / (~e * ~f - ~d * ~g)) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / ~g - ((~b * ~e * ~n * ~p) / ~g) * Antiderivative((log((~e * (~f + ~g * ~x)) / (~e * ~f - ~d * ~g)) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && IGtQ(~p, 1))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p / (~(f') + ~(g') * ~x) ^ 2, ~x) => ((~d + ~e * ~x) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / ((~e * ~f - ~d * ~g) * (~f + ~g * ~x)) - ((~b * ~e * ~n * ~p) / (~e * ~f - ~d * ~g)) * Antiderivative((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1) / (~f + ~g * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && GtQ(~p, 0))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p, ~x) => ((~f + ~g * ~x) ^ (~q + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / (~g * (~q + 1)) - ((~b * ~e * ~n * ~p) / (~g * (~q + 1))) * Antiderivative(((~f + ~g * ~x) ^ (~q + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~q], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (GtQ(~p, 0) && (NeQ(~q, -1) && (IntegersQ(2 * ~p, 2 * ~q) && (Not(IGtQ(~q, 0)) || EqQ(~p, 2) && NeQ(~q, 1))))))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(q') / (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => Antiderivative(ExpandIntegrand((~f + ~g * ~x) ^ ~q / (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)), ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && IGtQ(~q, 0))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p, ~x) => (((~d + ~e * ~x) * (~f + ~g * ~x) ^ ~q * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p + 1)) / (~b * ~e * ~n * (~p + 1)) + ((~q * (~e * ~f - ~d * ~g)) / (~b * ~e * ~n * (~p + 1))) * Antiderivative((~f + ~g * ~x) ^ (~q - 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p + 1), ~x)) - ((~q + 1) / (~b * ~n * (~p + 1))) * Antiderivative((~f + ~g * ~x) ^ ~q * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p + 1), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && (LtQ(~p, -1) && GtQ(~q, 0)))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p, ~x) => Antiderivative(ExpandIntegrand((~f + ~g * ~x) ^ ~q * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p], ~x) && (NeQ(~e * ~f - ~d * ~g, 0) && IGtQ(~q, 0))
    @apply_utils Antiderivative(log(~(c') / (~d + ~(e') * ~x)) / (~f + ~(g') * (~x) ^ 2), ~x) => (-(~e) / ~g) * Subst(Antiderivative(log(2 * ~d * ~x) / (1 - 2 * ~d * ~x), ~x), ~x, 1 / (~d + ~e * ~x)) <-- FreeQ([~c, ~d, ~e, ~f, ~g], ~x) && (EqQ(~c, 2 * ~d) && EqQ((~e) ^ 2 * ~f + (~d) ^ 2 * ~g, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') / (~d + ~(e') * ~x))) / (~f + ~(g') * (~x) ^ 2), ~x) => (~a + ~b * log(~c / (2 * ~d))) * Antiderivative(1 / (~f + ~g * (~x) ^ 2), ~x) + ~b * Antiderivative(log((2 * ~d) / (~d + ~e * ~x)) / (~f + ~g * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g], ~x) && (EqQ((~e) ^ 2 * ~f + (~d) ^ 2 * ~g, 0) && GtQ(~c / (2 * ~d), 0))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) / sqrt(~f + ~(g') * (~x) ^ 2), ~x) => With([u = IntHide(1 / sqrt(~f + ~g * (~x) ^ 2), ~x)], u * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) - ~b * ~e * ~n * Antiderivative(SimplifyIntegrand(u / (~d + ~e * ~x), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && GtQ(~f, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) / (sqrt(~f1 + ~(g1') * ~x) * sqrt(~f2 + ~(g2') * ~x)), ~x) => With([u = IntHide(1 / sqrt(~f1 * ~f2 + ~g1 * ~g2 * (~x) ^ 2), ~x)], u * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) - ~b * ~e * ~n * Antiderivative(SimplifyIntegrand(u / (~d + ~e * ~x), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f1, ~g1, ~f2, ~g2, ~n], ~x) && (EqQ(~f2 * ~g1 + ~f1 * ~g2, 0) && (GtQ(~f1, 0) && GtQ(~f2, 0)))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) / sqrt(~f + ~(g') * (~x) ^ 2), ~x) => (sqrt(1 + (~g / ~f) * (~x) ^ 2) / sqrt(~f + ~g * (~x) ^ 2)) * Antiderivative((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) / sqrt(1 + (~g / ~f) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x) && Not(GtQ(~f, 0))
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) / (sqrt(~f1 + ~(g1') * ~x) * sqrt(~f2 + ~(g2') * ~x)), ~x) => (sqrt(1 + ((~g1 * ~g2) / (~f1 * ~f2)) * (~x) ^ 2) / (sqrt(~f1 + ~g1 * ~x) * sqrt(~f2 + ~g2 * ~x))) * Antiderivative((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) / sqrt(1 + ((~g1 * ~g2) / (~f1 * ~f2)) * (~x) ^ 2), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f1, ~g1, ~f2, ~g2, ~n], ~x) && EqQ(~f2 * ~g1 + ~f1 * ~g2, 0)
    @apply_utils Antiderivative((~(f') + ~(g') * (~x) ^ ~r) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => With([k = Denominator(~r)], k * Subst(Antiderivative((~x) ^ (k - 1) * (~f + ~g * (~x) ^ (k * ~r)) ^ ~q * (~a + ~b * log(~c * (~d + ~e * (~x) ^ k) ^ ~n)) ^ ~p, ~x), ~x, (~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p, ~q], ~x) && (FractionQ(~r) && IGtQ(~p, 0))
    @apply_utils Antiderivative((~f + ~(g') * (~x) ^ ~r) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, (~f + ~g * (~x) ^ ~r) ^ ~q, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~r], ~x) && (IGtQ(~p, 0) && (IntegerQ(~q) && (GtQ(~q, 0) || IntegerQ(~r) && NeQ(~r, 1))))
    @apply_utils Antiderivative(((~x) ^ ~(m') * log(~(c') * (~d + ~(e') * ~x))) / (~f + ~(g') * ~x), ~x) => Antiderivative(ExpandIntegrand(log(~c * (~d + ~e * ~x)), (~x) ^ ~m / (~f + ~g * ~x), ~x), ~x) <-- FreeQ([~c, ~d, ~e, ~f, ~g], ~x) && (EqQ(~e * ~f - ~d * ~g, 0) && (EqQ(~c * ~d, 1) && IntegerQ(~m)))
    @apply_utils Antiderivative((~(f') + ~(g') * ~x) ^ ~(q') * (~(h') + ~(i') * ~x) ^ ~(r') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => (1 / ~e) * Subst(Antiderivative(((~g * ~x) / ~e) ^ ~q * ((~e * ~h - ~d * ~i) / ~e + (~i * ~x) / ~e) ^ ~r * (~a + ~b * log(~c * (~x) ^ ~n)) ^ ~p, ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~n, ~p, ~q, ~r], ~x) && (EqQ(~e * ~f - ~d * ~g, 0) && ((IGtQ(~p, 0) || IGtQ(~r, 0)) && IntegerQ(2 * ~r)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~f + ~(g') / ~x) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Antiderivative((~g + ~f * ~x) ^ ~q * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p, ~q], ~x) && (EqQ(~m, ~q) && IntegerQ(~q))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(f') + ~(g') * (~x) ^ ~(r')) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => ((~f + ~g * (~x) ^ ~r) ^ (~q + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / (~g * ~r * (~q + 1)) - ((~b * ~e * ~n * ~p) / (~g * ~r * (~q + 1))) * Antiderivative(((~f + ~g * (~x) ^ ~r) ^ (~q + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~q, ~r], ~x) && (EqQ(~m, ~r - 1) && (NeQ(~q, -1) && IGtQ(~p, 0)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~f + ~(g') * (~x) ^ ~(r')) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => With([u = IntHide((~x) ^ ~m * (~f + ~g * (~x) ^ ~r) ^ ~q, ~x)], Dist(~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n), u, ~x) - ~b * ~e * ~n * Antiderivative(SimplifyIntegrand(u / (~d + ~e * ~x), ~x), ~x) <-- InverseFunctionFreeQ(u, ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~q, ~r], ~x) && (IntegerQ(~m) && (IntegerQ(~q) && IntegerQ(~r)))
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(f') + ~(g') * (~x) ^ ~r) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => With([k = Denominator(~r)], k * Subst(Antiderivative((~x) ^ (k * (~m + 1) - 1) * (~f + ~g * (~x) ^ (k * ~r)) ^ ~q * (~a + ~b * log(~c * (~d + ~e * (~x) ^ k) ^ ~n)) ^ ~p, ~x), ~x, (~x) ^ (1 / k))) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~p, ~q], ~x) && (FractionQ(~r) && (IGtQ(~p, 0) && IntegerQ(~m)))
    @apply_utils Antiderivative((~(h') * ~x) ^ ~(m') * (~f + ~(g') * (~x) ^ ~(r')) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, (~h * ~x) ^ ~m * (~f + ~g * (~x) ^ ~r) ^ ~q, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n, ~p, ~q, ~r], ~x) && (IntegerQ(~m) && IntegerQ(~q))
    @apply_utils Antiderivative(~Polyx * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Antiderivative(ExpandIntegrand(~Polyx * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && PolynomialQ(~Polyx, ~x)
    @apply_utils Antiderivative(~RFx * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => With([u = ExpandIntegrand((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~RFx, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (RationalFunctionQ(~RFx, ~x) && IntegerQ(~p))
    @apply_utils Antiderivative(~RFx * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => With([u = ExpandIntegrand(~RFx * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x)], Antiderivative(u, ~x) <-- SumQ(u)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n], ~x) && (RationalFunctionQ(~RFx, ~x) && IntegerQ(~p))
    @apply_utils Antiderivative(~AFx * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Unintegrable(~AFx * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~n, ~p], ~x) && AlgebraicFunctionQ(~AFx, ~x, True)
    @apply_utils Antiderivative((~u) ^ ~(q') * (~(a') + ~(b') * log(~(c') * (~v) ^ ~(n'))) ^ ~(p'), ~x) => Antiderivative(ExpandToSum(~u, ~x) ^ ~q * (~a + ~b * log(~c * ExpandToSum(~v, ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~n, ~p, ~q], ~x) && (BinomialQ(~u, ~x) && (LinearQ(~v, ~x) && Not(BinomialMatchQ(~u, ~x) && LinearMatchQ(~v, ~x))))
    @apply_utils Antiderivative(log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => (-(~x) * (~m - log(~f * (~x) ^ ~m)) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) + ~b * ~e * ~m * ~n * Antiderivative(~x / (~d + ~e * ~x), ~x)) - ~b * ~e * ~n * Antiderivative((~x * log(~f * (~x) ^ ~m)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x)
    @apply_utils Antiderivative(log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p, ~x) => With([u = IntHide((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x)], Dist(log(~f * (~x) ^ ~m), u, ~x) - ~m * Antiderivative(Dist(1 / ~x, u, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && IGtQ(~p, 1)
    @apply_utils Antiderivative(log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Unintegrable(log(~f * (~x) ^ ~m) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n')))) / ~x, ~x) => (log(~f * (~x) ^ ~m) ^ 2 * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n))) / (2 * ~m) - ((~b * ~e * ~n) / (2 * ~m)) * Antiderivative(log(~f * (~x) ^ ~m) ^ 2 / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x)
    @apply_utils Antiderivative((~(g') * ~x) ^ ~(q') * log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => ((-1 / (~g * (~q + 1))) * ((~m * (~g * ~x) ^ (~q + 1)) / (~q + 1) - (~g * ~x) ^ (~q + 1) * log(~f * (~x) ^ ~m)) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) + ((~b * ~e * ~m * ~n) / (~g * (~q + 1) ^ 2)) * Antiderivative((~g * ~x) ^ (~q + 1) / (~d + ~e * ~x), ~x)) - ((~b * ~e * ~n) / (~g * (~q + 1))) * Antiderivative(((~g * ~x) ^ (~q + 1) * log(~f * (~x) ^ ~m)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~q], ~x) && NeQ(~q, -1)
    @apply_utils Antiderivative((log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p')) / ~x, ~x) => (log(~f * (~x) ^ ~m) ^ 2 * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / (2 * ~m) - ((~b * ~e * ~n * ~p) / (2 * ~m)) * Antiderivative((log(~f * (~x) ^ ~m) ^ 2 * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1)) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(g') * ~x) ^ ~(q') * log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~p, ~x) => With([u = IntHide((~g * ~x) ^ ~q * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x)], Dist(log(~f * (~x) ^ ~m), u, ~x) - ~m * Antiderivative(Dist(1 / ~x, u, ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~q], ~x) && (IGtQ(~p, 1) && IGtQ(~q, 0))
    #= Antiderivative(((~g')*(~x))^(~q')*log((~f')*(~x)^(~m'))*((~a')+(~b')*log((~c')*((~d)+(~e')*(~x))^(~n'))) ^(~p),~x) := With([u=IntHide((a+b*log(c*(d+e*x)^n))^p,x)], Dist((g*x)^q*log(f*x^m),u,x) - g*m*Antiderivative(Dist((g*x)^(q-1),u,x),x) -  g*q*Antiderivative(Dist((g*x)^(q-1)*log(f*x^m),u,x),x)) <--  FreeQ([a,b,c,d,e,f,g,m,n,q],x) && IGtQ(p,1) =#
    @apply_utils Antiderivative((~(g') * ~x) ^ ~(q') * log(~(f') * (~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => Unintegrable((~g * ~x) ^ ~q * log(~f * (~x) ^ ~m) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~m, ~n, ~p, ~q], ~x)
    @apply_utils Antiderivative(log(~(f') * (~(g') + ~(h') * ~x) ^ ~(m')) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p'), ~x) => (1 / ~e) * Subst(Antiderivative(log(~f * ((~g * ~x) / ~d) ^ ~m) * (~a + ~b * log(~c * (~x) ^ ~n)) ^ ~p, ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~m, ~n, ~p], ~x) && EqQ(~e * ~f - ~d * ~g, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) * (~(f') + ~(g') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => ~x * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) * (~f + ~g * log(~c * (~d + ~e * ~x) ^ ~n)) - ~e * ~n * Antiderivative((~x * (~b * ~f + ~a * ~g + 2 * ~b * ~g * log(~c * (~d + ~e * ~x) ^ ~n))) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x)
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p') * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))), ~x) => (~x * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m)) - ~g * ~j * ~m * Antiderivative((~x * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / (~i + ~j * ~x), ~x)) - ~b * ~e * ~n * ~p * Antiderivative((~x * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1) * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m))) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~m, ~n], ~x) && IGtQ(~p, 0)
    @apply_utils Antiderivative((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p') * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))) ^ ~(q'), ~x) => Unintegrable((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m)) ^ ~q, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~m, ~n, ~p], ~x)
    @apply_utils Antiderivative((~(k') + ~(l') * ~x) ^ ~(r') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p') * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))), ~x) => (1 / ~e) * Subst(Antiderivative(((~k * ~x) / ~d) ^ ~r * (~a + ~b * log(~c * (~x) ^ ~n)) ^ ~p * (~f + ~g * log(~h * ((~e * ~i - ~d * ~j) / ~e + (~j * ~x) / ~e) ^ ~m)), ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~k, ~l, ~n, ~p, ~r], ~x) && EqQ(~e * ~k - ~d * ~l, 0)
    @apply_utils Antiderivative(((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) * (~(f') + ~(g') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n')))) / ~x, ~x) => log(~x) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) * (~f + ~g * log(~c * (~d + ~e * ~x) ^ ~n)) - ~e * ~n * Antiderivative((log(~x) * (~b * ~f + ~a * ~g + 2 * ~b * ~g * log(~c * (~d + ~e * ~x) ^ ~n))) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n], ~x)
    @apply_utils Antiderivative((~x) ^ ~(m') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) * (~(f') + ~(g') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => ((~x) ^ (~m + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) * (~f + ~g * log(~c * (~d + ~e * ~x) ^ ~n))) / (~m + 1) - ((~e * ~n) / (~m + 1)) * Antiderivative(((~x) ^ (~m + 1) * (~b * ~f + ~a * ~g + 2 * ~b * ~g * log(~c * (~d + ~e * ~x) ^ ~n))) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~n, ~m], ~x) && NeQ(~m, -1)
    @apply_utils Antiderivative(((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m')))) / ~x, ~x) => (log(~x) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m)) - ~e * ~g * ~m * Antiderivative((log(~x) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n))) / (~d + ~e * ~x), ~x)) - ~b * ~j * ~n * Antiderivative((log(~x) * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m))) / (~i + ~j * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~m, ~n], ~x) && EqQ(~e * ~i - ~d * ~j, 0)
    @apply_utils Antiderivative((log(~a + ~(b') * ~x) * log(~c + ~(d') * ~x)) / ~x, ~x) => (((((((log((-(~b) * ~x) / ~a) * log(~a + ~b * ~x) * log(~c + ~d * ~x) - (1 / 2) * (log((-(~b) * ~x) / ~a) - log((-(~d) * ~x) / ~c)) * (log(~a + ~b * ~x) + log((~a * (~c + ~d * ~x)) / (~c * (~a + ~b * ~x)))) ^ 2) + (1 / 2) * ((log((-(~b) * ~x) / ~a) - log((-((~b * ~c - ~a * ~d)) * ~x) / (~a * (~c + ~d * ~x)))) + log((~b * ~c - ~a * ~d) / (~b * (~c + ~d * ~x)))) * log((~a * (~c + ~d * ~x)) / (~c * (~a + ~b * ~x))) ^ 2 + (log(~c + ~d * ~x) - log((~a * (~c + ~d * ~x)) / (~c * (~a + ~b * ~x)))) * PolyLog(2, 1 + (~b * ~x) / ~a) + (log(~a + ~b * ~x) + log((~a * (~c + ~d * ~x)) / (~c * (~a + ~b * ~x)))) * PolyLog(2, 1 + (~d * ~x) / ~c)) - log((~a * (~c + ~d * ~x)) / (~c * (~a + ~b * ~x))) * PolyLog(2, (~d * (~a + ~b * ~x)) / (~b * (~c + ~d * ~x)))) + log((~a * (~c + ~d * ~x)) / (~c * (~a + ~b * ~x))) * PolyLog(2, (~c * (~a + ~b * ~x)) / (~a * (~c + ~d * ~x)))) - PolyLog(3, 1 + (~b * ~x) / ~a)) - PolyLog(3, 1 + (~d * ~x) / ~c)) - PolyLog(3, (~d * (~a + ~b * ~x)) / (~b * (~c + ~d * ~x)))) + PolyLog(3, (~c * (~a + ~b * ~x)) / (~a * (~c + ~d * ~x))) <-- FreeQ([~a, ~b, ~c, ~d], ~x) && NeQ(~b * ~c - ~a * ~d, 0)
    @apply_utils Antiderivative((log(~v) * log(~w)) / ~x, ~x) => Antiderivative((log(ExpandToSum(~v, ~x)) * log(ExpandToSum(~w, ~x))) / ~x, ~x) <-- LinearQ([~v, ~w], ~x) && Not(LinearMatchQ([~v, ~w], ~x))
    @apply_utils Antiderivative((log(~(c') * (~d + ~(e') * ~x) ^ ~(n')) * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))) / ~x, ~x) => ~m * Antiderivative((log(~i + ~j * ~x) * log(~c * (~d + ~e * ~x) ^ ~n)) / ~x, ~x) - (~m * log(~i + ~j * ~x) - log(~h * (~i + ~j * ~x) ^ ~m)) * Antiderivative(log(~c * (~d + ~e * ~x) ^ ~n) / ~x, ~x) <-- FreeQ([~c, ~d, ~e, ~h, ~i, ~j, ~m, ~n], ~x) && (NeQ(~e * ~i - ~d * ~j, 0) && NeQ(~i + ~j * ~x, ~h * (~i + ~j * ~x) ^ ~m))
    @apply_utils Antiderivative(((~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) * (~f + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m')))) / ~x, ~x) => ~f * Antiderivative((~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) / ~x, ~x) + ~g * Antiderivative((log(~h * (~i + ~j * ~x) ^ ~m) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n))) / ~x, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~m, ~n], ~x) && NeQ(~e * ~i - ~d * ~j, 0)
    @apply_utils Antiderivative((~x) ^ ~(r') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p') * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))), ~x) => (((~x) ^ (~r + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m))) / (~r + 1) - ((~g * ~j * ~m) / (~r + 1)) * Antiderivative(((~x) ^ (~r + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p) / (~i + ~j * ~x), ~x)) - ((~b * ~e * ~n * ~p) / (~r + 1)) * Antiderivative(((~x) ^ (~r + 1) * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ (~p - 1) * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m))) / (~d + ~e * ~x), ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~m, ~n], ~x) && (IGtQ(~p, 0) && (IntegerQ(~r) && ((EqQ(~p, 1) || GtQ(~r, 0)) && NeQ(~r, -1))))
    @apply_utils Antiderivative((~k + ~(l') * ~x) ^ ~(r') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))), ~x) => (1 / ~l) * Subst(Antiderivative((~x) ^ ~r * (~a + ~b * log(~c * (-((~e * ~k - ~d * ~l)) / ~l + (~e * ~x) / ~l) ^ ~n)) * (~f + ~g * log(~h * (-((~j * ~k - ~i * ~l)) / ~l + (~j * ~x) / ~l) ^ ~m)), ~x), ~x, ~k + ~l * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~k, ~l, ~m, ~n], ~x) && IntegerQ(~r)
    @apply_utils Antiderivative((~(k') + ~(l') * ~x) ^ ~(r') * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p') * (~(f') + ~(g') * log(~(h') * (~(i') + ~(j') * ~x) ^ ~(m'))) ^ ~(q'), ~x) => Unintegrable((~k + ~l * ~x) ^ ~r * (~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n)) ^ ~p * (~f + ~g * log(~h * (~i + ~j * ~x) ^ ~m)) ^ ~q, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~j, ~k, ~l, ~m, ~n, ~p, ~q, ~r], ~x)
    @apply_utils Antiderivative((PolyLog(~k, ~h + ~(i') * ~x) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))) ^ ~(p')) / (~f + ~(g') * ~x), ~x) => (1 / ~g) * Subst(Antiderivative((PolyLog(~k, (~h * ~x) / ~d) * (~a + ~b * log(~c * (~x) ^ ~n)) ^ ~p) / ~x, ~x), ~x, ~d + ~e * ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~k, ~n], ~x) && (EqQ(~e * ~f - ~d * ~g, 0) && (EqQ(~g * ~h - ~f * ~i, 0) && IGtQ(~p, 0)))
    @apply_utils Antiderivative(~(Px') * (~F)(~(f') * (~(g') + ~(h') * ~x)) * (~(a') + ~(b') * log(~(c') * (~d + ~(e') * ~x) ^ ~(n'))), ~x) => With([u = IntHide(~Px * (~F)(~f * (~g + ~h * ~x)), ~x)], Dist(~a + ~b * log(~c * (~d + ~e * ~x) ^ ~n), u, ~x) - ~b * ~e * ~n * Antiderivative(SimplifyIntegrand(u / (~d + ~e * ~x), ~x), ~x)) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~n], ~x) && (PolynomialQ(~Px, ~x) && MemberQ([asin, acos, atan, acot, asinh, acosh, atanh, acoth], ~F))
    @apply_utils Antiderivative(~(u') * (~(a') + ~(b') * log(~(c') * (~v) ^ ~(n'))) ^ ~(p'), ~x) => Antiderivative(~u * (~a + ~b * log(~c * ExpandToSum(~v, ~x) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~n, ~p], ~x) && (LinearQ(~v, ~x) && (Not(LinearMatchQ(~v, ~x)) && Not(EqQ(~n, 1) && MatchQ(~c * ~v, ~(e') * (~f + ~(g') * ~x) <-- FreeQ([e, f, g], ~x)))))
    @apply_utils Antiderivative(~(u') * (~(a') + ~(b') * log(~(c') * (~(d') * (~(e') + ~(f') * ~x) ^ ~(m')) ^ ~n)) ^ ~(p'), ~x) => Subst(Antiderivative(~u * (~a + ~b * log(~c * (~d) ^ ~n * (~e + ~f * ~x) ^ (~m * ~n))) ^ ~p, ~x), ~c * (~d) ^ ~n * (~e + ~f * ~x) ^ (~m * ~n), ~c * (~d * (~e + ~f * ~x) ^ ~m) ^ ~n) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x) && (Not(IntegerQ(~n)) && (Not(EqQ(~d, 1) && EqQ(~m, 1)) && IntegralFreeQ(IntHide(~u * (~a + ~b * log(~c * (~d) ^ ~n * (~e + ~f * ~x) ^ (~m * ~n))) ^ ~p, ~x))))
    @apply_utils Antiderivative(~AFx * (~(a') + ~(b') * log(~(c') * (~(d') * (~(e') + ~(f') * ~x) ^ ~(m')) ^ ~n)) ^ ~(p'), ~x) => Unintegrable(~AFx * (~a + ~b * log(~c * (~d * (~e + ~f * ~x) ^ ~m) ^ ~n)) ^ ~p, ~x) <-- FreeQ([~a, ~b, ~c, ~d, ~e, ~f, ~m, ~n, ~p], ~x) && AlgebraicFunctionQ(~AFx, ~x, True)
end
